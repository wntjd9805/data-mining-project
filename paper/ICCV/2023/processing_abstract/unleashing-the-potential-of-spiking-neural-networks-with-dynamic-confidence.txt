This paper presents a new methodology to alleviate the fundamental trade-off between accuracy and latency in spiking neural networks (SNNs). The approach involves de-coding confidence information over time from the SNN out-puts and using it to develop a decision-making agent that can dynamically determine when to terminate each infer-ence.The proposed method, Dynamic Confidence, provides several significant benefits to SNNs. 1. It can effectively op-timize latency dynamically at runtime, setting it apart from many existing low-latency SNN algorithms. Our experi-ments on CIFAR-10 and ImageNet datasets have demon-strated an average 40% speedup across eight different set-tings after applying Dynamic Confidence. 2. The decision-making agent in Dynamic Confidence is straightforward to construct and highly robust in parameter space, making it extremely easy to implement. 3. The proposed method en-ables visualizing the potential of any given SNN, which sets a target for current SNNs to approach. For instance, if anSNN can terminate at the most appropriate time point for each input sample, a ResNet-50 SNN can achieve an accu-racy as high as 82.47% on ImageNet within just 4.71 time steps on average. Unlocking the potential of SNNs needs a highly-reliable decision-making agent to be constructed and fed with a high-quality estimation of ground truth. In this regard, Dynamic Confidence represents a meaning-ful step toward realizing the potential of SNNs. Code is available1.*These authors contributed equally to this work. 1https://github.com/chenlicodebank/Dynamic-Confidence-in-Spiking-Neural-NetworksFigure 1. The upper-bound performance of SNNs when fully uti-lizing dynamic strategies at runtime, as shown by the red curves in a. ResNet18 on CIFAR-10 and b. ResNet-50 on ImageNet.The black curves represent baseline SNN performance without dynamic strategies. Additional figures with other settings can be found in the Supplementary Material. c. The diagram of the pro-posed Dynamic Confidence, which can be implemented on-the-fly. 