Abstract
We present Recurrent Fitting (ReFit), a neural network architecture for single-image, parametric 3D human recon-struction. ReFit learns a feedback-update loop that mirrors the strategy of solving an inverse problem through optimiza-tion. At each iterative step, it reprojects keypoints from the human model to feature maps to query feedback, and uses a recurrent-based updater to adjust the model to fit the im-age better. Because ReFit encodes strong knowledge of the inverse problem, it is faster to train than previous regression models. At the same time, ReFit improves state-of-the-art performance on standard benchmarks. Moreover, ReFit ap-plies to other optimization settings, such as multi-view fitting and single-view shape fitting. Project website: https://yufu-wang.github.io/refit humans/ 1.

Introduction
Single-view 3D human reconstruction has transformed the way we analyze and create virtual content. Progress has primarily been driven by the use of parametric human mod-els [43], powerful neural networks [30], and high-quality annotated data [61]. However, the best systems to date still struggle with various difficulties, including occlusion, un-common poses, and diverse shape variations.
The traditional approach fits a parametric human model to an image using handcrafted objectives and energy min-imization techniques [9]. But this optimization process is often riddled with local minima and corner cases. Because of such drawbacks, recent regression methods train a neural network to predict the parameters directly [30, 35]. Training such networks robustly requires a large amount of 3D anno-tated data that is hard to collect outside a lab setting. One line of research is to design better neural network architec-tures that can learn efficiently and generalize well to diverse in-the-wild cases.
In this paper, we propose Recurrent Fitting (ReFit), an architecture for 3D human reconstruction. ReFit mimics the structure of model fitting, reducing the regression problem to a learning-to-optimize problem. This allows ReFit to learn faster than other architectures and improves state-of-the-art
Figure 1. Overview. ReFit mimics the strategy of model fitting by constructing a trainable feedback-update loop that adjusts the human model for a more accurate reconstruction. accuracy.
ReFit has three main steps. (1) A backbone network ex-tracts pixel-aligned image features. (2) A feedback module queries feedback features from keypoint reprojection. (3) A recurrent update module uses a set of disentangled GRUs to update the body. Feedback and updates are repeated until the body mesh is well-aligned with the image (Fig. 1).
The design of ReFit mirrors traditional model fitting. In model fitting, the objective function computes the L2 dis-tance between the reprojected and the detected keypoints [9].
In ReFit, each reprojected keypoint queries a window on a feature map. A window encodes first-order information, such as 2D flow, which is the derivative of the L2 objective. The queried features are fed to the update module to compute updates for the human model.
Another key element of ReFit is the disentangled and recurrent update streams. Iterative regression methods com-monly map a feature vector to parameter updates with an
MLP [30, 67]. Therefore, the update rules for the parameters are entangled until the last linear layer. In contrast, parame-ters in optimization follow update rules based on automatic differentiation, and the rules can be very different. As an example, in human pose, an alignment error in the right hand will produce a gradient for the right arm and shoulder but not for the left side. This notion of a disentangled update is diffi-cult to achieve within a global feature vector. When learning
the update function, we hypothesize that some degree of disentanglement is beneficial. recent research shifts to two directions: learning to regress and learning to optimize.
To this end, ReFitâ€™s update module uses one GRU per parameter group to disentangle the parametric update. Each
GRU learns the prior and the update rule for one parameter group, e.g., the rotation of a single joint. GRUs utilize mem-ory from the previous iterations, analogous to a first-order method with momentum [16]. At each iteration, the GRUs can take different step sizes. In the example of right-hand misalignment, the GRUs for the right side of the body can output adjustments, while the GRUs for the left side can re-turn little or no updates. This disentanglement leads to better performance. The disentangled GRUs can be implemented as batch matrix operations in PyTorch, allowing for efficient training and inference.
Moreover, ReFit acts as a learned optimizer that applies to other settings of model fitting. Using ReFit as a learned optimizer, we propose a multi-view fitting procedure that significantly outperforms regression on separate views. We also demonstrate using ReFit to register a pre-scanned shape to images of the same subject, a helpful setting for outdoor motion capture.
The ReFit architecture is substantially different from prior works. It uses a recurrent-based updater instead of a coarse-to-fine pyramid that limits the number of updates [67]. ReFit applies reprojection to query feedback instead of using a static global feature vector [65]. Compared to learning-to-optimize approaches [16,55], ReFit does not detect keypoints but instead uses learned features and is end-to-end trainable.
ReFit improves state-of-the-art results on standard bench-marks [27, 61]. The learning-to-optimize design accelerates training: ReFit converges with only 50K training iterations.
We conduct extensive ablation studies to analyze the core components and applications, and contribute insights for future works. 2.