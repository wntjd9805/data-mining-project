Abstract
We study the joint image of lines incident to points, meaning the set of image tuples obtained from fixed cam-eras observing a varying 3D point-line incidence. We prove a formula for the number of complex critical points of the triangulation problem that aims to compute a 3D point-line incidence from noisy images. Our formula works for an arbitrary number of images and measures the intrinsic dif-ficulty of this triangulation. Additionally, we conduct nu-merical experiments using homotopy continuation methods, comparing different approaches of triangulation of such in-cidences. In our setup, exploiting the incidence relations gives a notably faster point reconstruction with comparable accuracy.

Introduction
The Structure-from-Motion pipeline aims to estimate the camera positions and the relative position of the objects present in a given set of images. The process starts by iden-tifying point and line features in one image that are rec-ognizable as the same points or lines in another. These matched features, that we call correspondences, are used to estimate the camera position and orientation, which then allow for the triangulation step where the position of the points and lines is estimated.
In this work, we study the triangulation of points and lines satisfying a certain incidence relation. Specifically, we focus on the triangulation of points contained in a single line; see Figure 1. We note that our methods can also be used when multiple lines going through a fixed point. We
Figure 1: The illustration of two different types of incidence relations: (L1) represents the scenario where multiple points are incident to a line, while (P1) represents the scenario where multiple lines are incident to a point. develop the theory for the triangulation of these problems for an arbitrary number of pinhole cameras assuming com-plete visibility.
The triangulation of points is well understood and, in practice, it is efficiently implemented. However, to the best of our knowledge, incidence relations are not consid-ered in these implementations. The inclusion of line fea-tures and incidence relations in the triangulation process could give a more accurate estimation of scenes as lines are more robust to noise than points, and incidence relations appear frequently in interior scenes and man-made scenar-ios; see [34], [24], [30]. Additionally, in some real data sets standard feature detection algorithms fail due to a lack of point correspondences but succeed when line correspon-dences are taken into account [15].
The main tools in our work are (algebraic) varieties, that is, the vanishing sets of systems of polynomial equations.
Algebraic varieties have been used extensively to study tri-angulation of point correspondences [1, 17, 31], line cor-respondences [7, 16, 29] and minimal problems [12, 13] to
name a few. In these works, algebraic varieties arise natu-rally due to the algebraic nature of pinhole cameras.
A pinhole camera, is modeled by a (complex) projective linear map C : P3 (cid:57)(cid:57)(cid:75) P2 defined by a 3×4 matrix C of full rank that takes a point X ∈ P3 and sends it to CX ∈ P2.
A camera arrangement with m ≥ 2 cameras is denoted by
C = (C1, . . . , Cm), and the joint camera map
ΦC : P3 (cid:57)(cid:57)(cid:75) (P2)m,
X (cid:55)→ (C1X, . . . , CmX), (1) models the process of taking the images of a point X in homogeneous coordinates with m cameras. For fixed cam-eras, the (point) multiview variety MC is the smallest va-riety that contains all point correspondences. An extensive account of the pinhole cameras is given by [22], and a sur-vey of the multiview variety is found in [36]. The joint camera map can be extended from the space of points P3 to the space of lines, denoted by Gr(1, P3), where each line is parametrized as the span of two points. The map
ΥC : Gr(1, P3) (cid:57)(cid:57)(cid:75) (P2)m,
L (cid:55)→ (C1 · L, . . . , Cm · L). (2) models the image of a line L taken by the cameras of C.
To be precise, if u, v span the line L in P3, then C · L is defined as ℓ = Cu×Cv ∈ P2, where × is the cross product.
Observe that {x ∈ P2 : ℓT x = 0} equals span{Cu, Cv}.
Recently, in [7], the authors study the line multiview variety referred to as LC, which is the smallest variety containing all line correspondences.
Our main contribution is the definition and study of the anchored point and line multiview varieties. Given a fixed line L in P3, the anchored point multiview variety, ML
C , is defined as the smallest variety containing all point corre-spondences coming from points in L; and the anchored line multiview variety, LX
C , is the smallest variety containing the line correspondences coming from lines passing through a given point X ∈ P3.
For these new varieties we prove formulas for their Eu-clidean distance degree (EDD), which are a measurement of the complexity for error correction using exact algebraic methods [11]. Specifically, we prove the following theorem:
Theorem 0.1. Let C be a generic arrangement of m cam-eras. 1. EDD(ML
C ) = 3m − 2. 2. If m ≥ 3, then EDD(LX
C ) = 9 2 m2 − 19 2 m + 3.
We provide a precise definition of this degree in Sec-Previous work on EDD for multiview vari-tion 1.2. eties includes [19, 31] and [7, Section 5]. The EDD of the point multiview variety is EDD(MC) = 9 2 m3 − 21 2 m2 + 8m − 4, according to [31]. The fact that the
EDDs of the anchored multiview varieties are polynomi-als of smaller degrees suggests that they are less com-plex for the purpose of data correction. This conclusion is backed by the results of our numerical experiments using
HomotopyContinuation.jl [9], presented in Sec-tion 2.
Another contribution of our work is the numerical sim-ulations for the triangulation of points contained in a line using the anchored multiview varieties. We present differ-ent approaches to triangulating data of type (L1) that dif-fer from the traditional method of fitting point correspon-dences to the multiview variety MC. For m = 2 views, our implementation is notably faster than the traditional tri-angulation of points described above, while the accuracy is comparable. For m = 3 views we get both higher accu-racy and faster speed by using LC, compared to usual point triangulation. All of our proposed methods outperform the traditional approaches in terms of run-time and give a com-parably accurate result.
In practice, special software and hardware are used for triangulation, and based on our ex-periments, we believe that these approaches could be im-plemented efficiently with good results.