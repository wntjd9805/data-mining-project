Abstract
End-to-end region-based object detectors like Sparse R-CNN usually have multiple cascade bounding box decod-ing stages, which reﬁne the current predictions according to their previous results. Model parameters within each stage are independent, evolving a huge cost.
In this pa-per, we ﬁnd the general setting of decoding stages is actu-ally redundant. By simply sharing parameters and making a recursive decoder, the detector already obtains a signif-icant improvement. The recursive decoder can be further enhanced by positional encoding (PE) of the proposal box, which makes it aware of the exact locations and sizes of in-put bounding boxes, thus becoming adaptive to proposals from different stages during the recursion. Moreover, we also design centerness-based PE to distinguish the RoI fea-ture element and dynamic convolution kernels at different positions within the bounding box. To validate the effective-ness of the proposed method, we conduct intensive ablations and build the full model on three recent mainstream region-based detectors. The RecusiveDet is able to achieve obvious performance boosts with even fewer model parameters and slightly increased computation cost. Codes are available at https://github.com/bravezzzzzz/RecursiveDet. b b q c b c b c b q q q
Decoder
Decoder
Decoder
I
I
Encoder (a) End-to-end region-based detector b q c b c b c b p q p q p q
Decoder
Decoder
Decoder
I
Encoder (b) RecursiveDet
Figure 1. Comparison between end-to-end region-based detector and RecusiveDet. I is the input image feature. q and b are pro-posal feature and proposal box at input. c and b indicate the class and bounding box of the predictions at output. In RecursiveDet, we encode b into PE vector p. (a) Detectors like Sparse R-CNN,
AdaMixer and DiffusionDet have cascade stages, which bring a huge amount of parameters. (b) Our proposed RecursiveDet sim-ply shares the decoder parameters and makes the structure recur-sive, which reduces the model size. 1.

Introduction
Object detection has been intensively investigated by computer vision community for decades. Traditional detec-tors built by deep convolutional neural network (CNN) are either anchor-based [13, 32, 26] or anchor-free [30, 37, 46].
The former performs classiﬁcation and regression based on pre-deﬁned densely tiled bounding boxes, while the latter only assumes grid points in the 2D image plane. On the other hand, detection can be completed in a single stage, two stages or even multiple cascade stages. The single-stage
*Corresponding author, email: sunli@ee.ecnu.edu.cn. This work is supported by the Science and Technology Commission of Shang-hai Municipality under Grant No. 22511105800, 19511120800 and 22DZ2229004. method directly gives predictions without further modiﬁca-tions, which is usually simple and efﬁcient. Two- or multi-stage methods repeatedly make corrections based on previ-ous results, which offer better results but cost more model parameters and calculations. Except for the ﬁrst stage, later stages are usually region-based, focusing on the local re-gion within the bounding box, which is often realized by
RoI Align [15].
Although these detectors have been widely used, they are often complained for complex pre- and post-designs, e.g., anchor sizes, standards for positive and negative samples, and non-maximum suppression (NMS) on results. DEtec-tion TRansformer (DETR) simpliﬁes the framework. It re-lies on multi-stage transformer decoder layers to update learnable queries into object features, which can be decoded
into bounding box predictions at each stage. During train-ing, DETR utilizes bipartite matching to determine positive and negative query samples in a dynamic way. Since each ground truth (GT) box is assigned with only one query as positive, NMS is no longer necessary. However, DETR has extremely low efﬁciency, mainly due to the lack of inductive bias in the transformer decoder. Later works incorporate ei-ther bounding box positional encoding (PE), iterative reﬁne-ment or local deformation into the decoder, hence greatly improve the training efﬁciency.
Similar to DETR, region-based methods [35, 11, 4] also treat object detection as a set prediction task between pre-dictions and GTs, and they all adopt a multi-stage strategy.
Sparse R-CNN is a representative work depending on RoI
Align.
It employs a set of learnable proposal features to generate dynamic conv ﬁlters for image RoI features within corresponding proposal boxes. Compared to DETR, region-based methods obtain accurate results and high data efﬁ-ciency. However, the model sizes are obviously larger than
DETR-series, which not only limit their applications but also cause degradation for the small-scale dataset. We ﬁnd that some speciﬁc layers in region-based methods account for most of the parameter number, so they can potentially be improved. Moreover, since proposal features are equivalent to object queries in DETR, it should be practical to intro-duce PE of bounding boxes like [25], so the self attention and dynamic conv know the exact global and local positions of image features.
Based on the above considerations, this paper proposes the RecursiveDet, a common cascade decoder structure built on dynamic conv for region-based detectors. Specif-ically, we share the decoder parameters and make the same module recursive in different stages, allowing training it based on proposal boxes of different qualities. By simply sharing all decoder parameters among different stages, the model size is apparently reduced while its performance only suffers a slight drop. Moreover, since the dynamic layer for generating conv kernels and out layer after dynamic conv are huge, we intend to make full use of them and apply the dynamic conv for more layers.
In practice, we up-date the proposal feature after the ﬁrst group of dynamic convs. Then the updated feature is given to the same dy-namic layer, specifying conv kernels for the second group.
In other words, the dynamic layer and out layer are reused to increase the model depth within a stage without extra pa-rameter cost.
Due to sharing parameters of decoder stages, its input becomes indispensable to distinguish each decoding stage.
Therefore, more information about the previous predictions needs to be utilized as input. Inspired by [28, 39, 25], we en-code the positions and shapes of the bounding boxes into PE vectors, which are then employed for both position-aware self attention and dynamic conv. Since the PE of bound-ing box is only computed from the global image coordinate and shape size, we design a centerness-based PE to repre-sent different locations within the RoI as compensation. By combining the PE of bounding box and centerness within dynamic conv, our RecursiveDet model is able to fully ex-ploit both proposal features and boxes in the end-to-end region-based detector.
To validate the effectiveness of the proposed Recur-siveDet, intensive experiments and ablation studies are con-ducted on MS-COCO dataset. We implement RecursiveDet in three mainstream detectors, including Sparse R-CNN,
AdaMixer and DiffusionDet, and achieve consistent perfor-mance boosts. We point that Sparse R-CNN and AdaMixer are end-to-end, while DiffusionDet is not. In summary, the contribution of this paper lies in the following aspects.
• We propose to share the decoder parameters among different stages in the region-based detector, which signiﬁcantly reduces the model size without severely degrading the performance. Moreover, we repeatedly use the dynamic layer to generate conv kernels for more layers in a single stage, increasing the model depth for further performance gain.
• We design the bounding box PE according to the ge-ometry information from predictions. Besides, the lo-cal coordinate is represented based on centerness PE, discriminating each feature within RoI. We make these
PEs to participate in self attention and dynamic conv in the region-based detector.
• The proposed RecursiveDet is implemented in differ-ent end-to-end region-based detectors, showing that it enhances all of them and reduces the model size at the same time. 2.