Abstract
Estimating the 6-DoF pose of a rigid object from a single RGB image is a crucial yet challenging task. Re-cent studies have shown the great potential of dense correspondence-based solutions, yet improvements are still needed to reach practical deployment.
In this paper, we propose a novel pose estimation algorithm named Check-erPose, which improves on three main aspects. Firstly,
CheckerPose densely samples 3D keypoints from the sur-face of the 3D object and finds their 2D correspondences progressively in the 2D image. Compared to previous so-lutions that conduct dense sampling in the image space, our strategy enables the correspondence searching in a 2D grid (i.e., pixel coordinate). Secondly, for our 3D-to-2D correspondence, we design a compact binary code representation for 2D image locations. This representa-tion not only allows for progressive correspondence refine-ment but also converts the correspondence regression to a more efficient classification problem. Thirdly, we adopt a graph neural network to explicitly model the interac-tions among the sampled 3D keypoints, further boosting the reliability and accuracy of the correspondences. To-gether, these novel components make CheckerPose a strong pose estimation algorithm. When evaluated on the pop-ular Linemod, Linemod-O, and YCB-V object pose esti-mation benchmarks, CheckerPose clearly boosts the accu-racy of correspondence-based methods and achieves state-of-the-art performances. Code is available at https:
//github.com/RuyiLian/CheckerPose. 1.

Introduction
Object pose estimation from RGB images aims to es-timate the rotation and translation of a given rigid object relative to the camera. It is crucial in various applications including robot grasping and manipulation [75, 61, 62], au-tonomous driving [36, 69, 29], augmented reality [37, 58], etc. Most existing methods [48, 59, 38, 18, 43, 72, 40, 33,
Figure 1: Illustration of CheckerPose. We evenly sam-ple dense keypoints from the object surface, and predict the 2D locations in the input image. We design a binary code representation to progressively localize each keypoint in the iteratively refined 2D grids. To improve the localization, we also use graph neural networks to explicitly model the inter-actions between 3D keypoints. Note: we plot 8 keypoints for better visualization, while use 512 keypoints in practice. 53] first estimate an intermediate geometric representation, i.e., the correspondences between 3D object keypoints and 2D image locations, and then recover the object pose us-ing the Perspective-n-Point (PnP) algorithm. Theoretically, for a rigid object, four pairs of 3D-2D correspondences can determine a unique pose [47, 10, 44].
In practice, how-ever, sparse correspondences easily degrade due to occlu-sion, background clutter, lighting variation, etc.
Increasing the number of 3D-2D correspondences is a feasible solution to enhance robustness, especially when combined with outlier removal mechanisms such as
RANSAC. Recent methods [72, 40, 33, 15, 17, 66, 8] densely sample 2D image pixels and predict their 3D ob-ject coordinates. While these dense predictions improve the robustness of pose estimation, they have several draw-backs. Firstly, the predictions consider only visible pixels and ignore global relations between visible and occluded keypoints, making them unstable when the object is under severe occlusions. Secondly, estimating the corresponding
3D coordinates is nontrivial. Finally, the rich shape prior information is not effectively encoded.
To overcome the above issues, we propose a novel 6D pose estimation algorithm, named CheckerPose, which im-proves dense correspondence with three cooperative com-ponents: dense 3D sampling, progressive 2D localization through binary coding, and shape prior encoding with graph neural network, as illustrated in Figure 1.
For dense correspondence, CheckerPose samples 3D keypoints on the object surface and then finds their 2D pixel correspondences in the 3D-to-2D matching way. Compared to previous solutions that conduct dense sampling in the 2D image space, our strategy enables more efficient correspon-dence searching in a 2D grid (i.e., pixel coordinate) using 2D binary coding, as well as explicit shape prior modeling with graph representation.
Then, to facilitate the localization of dense keypoints, we propose a 2D hierarchical binary coding to represent a 2D image position. Specifically, we superpose a grid on the input image and predict which cells contain the desired keypoints. The precision of the 2D keypoint location is con-trolled by the resolution of the grid. This novel representa-tion allows us to refine the correspondence progressively.
We first localize the keypoints in the 2 × 2 grid, and then iteratively subdivide each cell and localize the keypoints in the refined grid. Inspired by ZebraPose [56], we use binary codes on the x and y directions to represent each cell, which makes the grids have a checkerboard pattern.
Furthermore, to capture the shape prior of the 3D object, we adopt a graph neural network to explicitly model the in-teractions among the sampled 3D keypoints and to guide the progressive correspondence estimation.
In particular, we construct the k-nearest neighbor (k-NN) graph of the dense keypoints and utilize graph network layers to fuse informa-tion from a keypoint and its neighbors. By stacking multiple such layers, we can capture non-local interactions between invisible and visible keypoints, and thus significantly im-prove the prediction robustness of invisible keypoints.
To summarize, our main contributions are as follows:
• We propose to localize dense 3D keypoints in the input image, to establish dense correspondences for instance-level object pose estimation.
• We design a hierarchical binary coding strategy for 2D projections, which enables progressive localization of dense keypoints.
• We utilize graph neural networks to explicitly model the interactions between 3D keypoints and improve the predictions of invisible keypoints.
Together, these novel contributions make our CheckerPose a strong pose estimation algorithm. We conduct extensive experiments on the popular benchmarks including Linemod
[14], Linemod-Occlusion [2], and YCB-V [70], and Check-erPose consistently achieves state-of-the-art performances. 2.