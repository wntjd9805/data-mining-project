The last decade has witnessed significant progress in deep learning, resulting in the development and release of numerous deep neural networks. These pre-trained models are available publicly and offer valuable resources for both practitioners and researchers. However, quantifying the relationship between these models remains a challenge. Models trained on different tasks or through different methods may exhibit varying degrees of similarity. It is crucial to understand the functional distance between models to effectively utilize these resources. Despite the availability of pre-trained models, research on model functional distance is lacking. This is due to the challenges of heterogeneity in model architectures, the opacity of deep models, and the computational efficiency of measuring functional distance. Prior works have attempted to compute model distance using weight space or representation space, but these methods have limitations. They often capture only the point-wise behavior of models and lack representation capacity. In this paper, we propose a novel method called Model Gradient Field (ModelGiF) to extract homogeneous representations from pre-trained models. ModelGiF captures the gradient vector of model outputs with respect to inputs, allowing for the measurement of functional distance based on the similarity between ModelGiFs. Unlike previous methods, which rely on point-wise features, ModelGiFs consider model gradients across the entire input space, enabling the detection of highly related models. Theoretical insights and implementation details of ModelGiFs are provided, and experiments demonstrate its effectiveness in various tasks, including transferability estimation, intellectual property protection, and model unlearning verification. In summary, this paper contributes to the field by introducing the concept of model gradient field and providing a method for quantifying functional similarity between pre-trained deep models. Experimental results show that ModelGiF outperforms state-of-the-art methods in various tasks.