Spiking Neural Networks (SNNs) have attracted enor-mous research interest due to temporal information pro-cessing capability, low power consumption, and high bio-logical plausibility. However, the formulation of efﬁcient and high-performance learning algorithms for SNNs is still challenging. Most existing learning methods learn weights only, and require manual tuning of the membrane-related parameters that determine the dynamics of a single spik-ing neuron. These parameters are typically chosen to be the same for all neurons, which limits the diversity of neu-rons and thus the expressiveness of the resulting SNNs. In this paper, we take inspiration from the observation that membrane-related parameters are different across brain re-gions, and propose a training algorithm that is capable of learning not only the synaptic weights but also the mem-brane time constants of SNNs. We show that incorporating learnable membrane time constants can make the network less sensitive to initial values and can speed up learning.In addition, we reevaluate the pooling methods in SNNs and ﬁnd that max-pooling will not lead to signiﬁcant in-formation loss and have the advantage of low computa-tion cost and binary compatibility. We evaluate the pro-posed method for image classiﬁcation tasks on both tradi-tional static MNIST, Fashion-MNIST, CIFAR-10 datasets, and neuromorphic N-MNIST, CIFAR10-DVS, DVS128 Ges-ture datasets. The experiment results show that the pro-posed method outperforms the state-of-the-art accuracy on nearly all datasets, using fewer time-steps. Our codes are available at https://github.com/fangw ei1234 56/Parametric-Leaky-Integrate-and-Fire-Spiking-N euron.*Corresponding author (a) Spiking neuron (b) The membrane potential of a LIF neuronFigure 1. (a) A Leaky Integrate-and-Fire (LIF) neuron with mem-brane potential V , membrane time constant τ , input I(t) and synaptic weight w. (b) The membrane potential V of the LIF neu-ron when constant input is received. Increasing or decreasing τ will stretch the v = f (t) curve in the t direction while increasing or decreasing w will stretch the v = f (t) curve in the V direction. 