Current neural architecture search (NAS) algorithms still require expert knowledge and effort to design a search space for network construction. In this paper, we consider automating the search space design to minimize human in-terference, which however faces two challenges: the ex-plosive complexity of the exploration space and the expen-sive computation cost to evaluate the quality of different search spaces. To solve them, we propose a novel differ-entiable evolutionary framework named AutoSpace, which evolves the search space to an optimal one with follow-ing novel techniques: a differentiable ﬁtness scoring func-tion to efﬁciently evaluate the performance of cells and a reference architecture to speedup the evolution procedure and avoid falling into sub-optimal solutions. The frame-work is generic and compatible with additional compu-tational constraints, making it feasible to learn special-ized search spaces that ﬁt different computational bud-gets. With the learned search space, the performance of recent NAS algorithms can be improved signiﬁcantly compared with using previously manually designed spaces.Remarkably, the models generated from the new search space achieve 77.8% top-1 accuracy on ImageNet under the mobile setting (MAdds≤500M), outperforming previ-ous SOTA EfﬁcientNet-B0 by 0.7%. https://github. com/zhoudaquan/AutoSpace.git.Expert  knowledgeSearch  spaceTrial &  errorHand-crafted search space (a) Evaluation/searchEvolution/mutationCandidate  block poolRandom  mutationBasic operators conv, dwise conv, zero, ... Selected  search spaceRankingOptimized search spaceHand-crafted spaceHuman interfereSearching costHighLow (b) (c)Auto-generated spaceHuman interfereSearching costLowLowFigure 1: Comparison of different search space construction schemes. (a) Most existing NAS methods deploy handcrafted search spaces whose construction heavily relies on expertise and trial-and-error. (b) Our proposed method automatically builds and optimizes the search space by learning to form the basic operators into candidate building blocks and using an efﬁcient approach to evolve and evaluate these building blocks. (c) Compared with ex-isting schemes, our proposed one involves lower human effort and searching cost. 