Abstract
Few-shot learning describes the challenging problem of recognizing samples from unseen classes given very few la-beled examples. In many cases, few-shot learning is cast as learning an embedding space that assigns test samples to their corresponding class prototypes. Previous meth-ods assume that data of all few-shot learning tasks com-ply with a ﬁxed geometrical structure, mostly a Euclidean structure. Questioning this assumption that is clearly difﬁ-cult to hold in real-world scenarios and incurs distortions to data, we propose to learn a task-aware curved embedding space by making use of the hyperbolic geometry. As a re-sult, task-speciﬁc embedding spaces where suitable curva-tures are generated to match the characteristics of data are constructed, leading to more generic embedding spaces. We then leverage on intra-class and inter-class context infor-mation in the embedding space to generate class prototypes for discriminative classiﬁcation. We conduct a comprehen-sive set of experiments on inductive and transductive few-shot learning, demonstrating the beneﬁts of our proposed method over existing embedding methods. 1.

Introduction
Few-shot learning (FSL) [2, 12, 57] aims to recog-nize samples from unseen classes, given very few labeled
In many cases, embedding meth-examples per class. ods [5, 44, 45, 53, 55] are the method of choice in address-ing the FSL problem. The underlying idea is to learn an em-bedding space from seen classes, hoping that for new FSL tasks with unseen classes, class prototypes in the embed-ding space are informative enough to assist classiﬁcation (e.g., by assigning test samples to the closest prototypes).
Prior to our work, most embedding methods assume that data of all FSL tasks have the Euclidean structure, and use a Euclidean embedding space and corresponding Euclidean
*Corresponding author
Figure 1. An example to show that a ﬁxed curvature is not suitable for all FSL tasks. We evaluate the curvature as 0, −1, and −0.01 on three FSL tasks sampled from the Mini-ImageNet dataset [50].
In Task 1, we achieve good results when the curvature is 0 (i.e., a
Euclidean space), while the curvature 0 achieves inferior results in
Task 2 and Task 3, whose suitable curvatures are −1 and −0.01, respectively. This shows that a ﬁxed curvature is not suitable for all FSL tasks. operations (e.g., distance measure in vector spaces) for clas-siﬁcation [3, 35, 38, 55]. However, such an assumption is clearly difﬁcult to hold in real-world scenarios. Although some data (e.g., remote sensing images [15]) is intrinsi-cally Euclidean, non-Euclidean structures are also widely encountered in data (e.g., face images are located in natu-ral manifolds [59]). Thus, assuming the same geometrical structure among all FSL tasks may incur distortions to data and result in inferior performance. In this paper, we pro-pose a curvature generation embedding method that learns a task-aware curved embedding space to match geometrical structures of data by using hyperbolic geometry.
Hyperbolic geometry that deﬁnes curved spaces can gracefully represent hierarchies in data and has been shown to be superior to Euclidean geometry for some problems in recent studies [33, 47, 30, 32, 36]. Curvature is a fundamen-tal concept in hyperbolic geometry, representing the devia-tion of curved spaces from a ﬂat space. Via changing the
curvature, one can hope to better capture various geometri-cal structures of data [29]. A key observation in FSL is that tasks can exhibit different geometrical structures. In other words, while a space with a ﬁxed and predetermined curva-ture might successfully capture the geometrical structure of data in an FSL task, it does not necessarily suit unseen and future tasks (an example is shown in Figure 1).
This motivates us to learn to identify suitable curvatures for FSL tasks. To this end, we need to address two chal-lenges. (1) How to generate suitable curvatures using very few samples. In an FSL task, the geometrical structure may be complex and not uniform. When very few samples are given, it is challenging to generate an appropriate curva-ture that can suitably match the complex structure. (2) How to carry out discriminative classiﬁcation in the task-aware curved embedding space. Sample features in FSL are usu-ally extracted via a common feature extractor (e.g., using a CNN). This makes the features agnostic to the generated curvatures, and hence naively combining them (e.g., aver-aging) to form class prototypes may hurt the discriminative power of the embedding space.
To address the aforementioned challenges, we make use of the higher-order statistics of samples to identify curva-tures for each class in an FSL task. This will result in describing a task with multiple geometries, where data in each class is separately characterized. Clearly, this de-sign is more ﬂexible as compared to using a single ge-ometry everywhere, and may better match complex struc-tures of data. We then beneﬁt from intra-class and inter-class context information in the curved embedding space to produce class prototypes for discriminative classiﬁca-tion. Our model is trained in a meta-learning framework that learns knowledge from some seen classes and applies it to new FSL tasks to generate both suitable curved spaces and discriminative prototypes using very few samples. We demonstrate the effectiveness of the proposed method on both inductive and transductive settings of FSL, and com-pare our method against state-of-the-art embedding meth-ods. The code is available at https://github.com/
ZhiGaomcislab/CurvatureGeneration_FSL.
In summary, our contributions are two-fold: (1) We propose a method to realize a task-aware curved embed-ding space for FSL. In doing so, our method generates task-speciﬁc curvatures, making the embedding space more generic. To the best of our knowledge, this is the ﬁrst attempt to automatically generate curvatures for different tasks, having the ability to adapt a model to different geo-metrical structures of data. (2) To capture complex struc-tures in data, we generate curvatures for each class and make use of intra-class and inter-class context information to generate class prototypes. This, as we will empirically show, leads to discriminative classiﬁcation when very few samples are available. 2.