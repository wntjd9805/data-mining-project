Abstract
Hypergraph matching is a useful tool to find feature cor-respondence by considering higher-order structural infor-mation. Recently, the employment of deep learning has made great progress in the matching of graphs, suggest-ing its potential for hypergraphs. Hence, in this paper, we present the first, to our best knowledge, unified hypergraph neural network (HNN) solution for hypergraph matching.
Specifically, given two hypergraphs to be matched, we first construct an association hypergraph over them and convert the hypergraph matching problem into a node classification problem on the association hypergraph. Then, we design a novel hypergraph neural network to effectively solve the node classification problem. Being end-to-end trainable, our proposed method, named HNN-HM, jointly learns all its components with improved optimization. For evalua-tion, HNN-HM is tested on various benchmarks and shows a clear advantage over state-of-the-arts. 1.

Introduction
Feature correspondence is essential for many computer vision tasks, such as shape matching [2], image registra-tion [17], and object recognition [26]. Given two sets of fea-tures, feature correspondence aims to match each feature in one set to a feature in the other set. Usually, features in the same set are related and have an inherent structure, which can benefit the corresponding task. Using the pairwise re-lations between features (second-order structure), one can build two graphs from the two feature sets (nodes represent features, and edges represent relations) and convert the cor-responding problem into a graph matching problem [14,33].
Similarly, to incorporate higher-order structural information (i.e. relations involving more than two features), one can build two hypergraphs and convert the problem into a hy-*Corresponding authors.
Figure 1. A hypergraph. This hypergraph has five nodes (A, B, C,
D, and E) and two hyperedges ({A, B, C} and {C, D, E}). pergraph matching problem [10, 44].
A hypergraph (illustrated in Fig. 1) is a generalization of a graph, stimulated by the idea that each hyperedge captures the relation among multiple (usually more than two) nodes.
The task of hypergraph matching is to find the node corre-spondence between two given hypergraphs by considering the affinities of their corresponding nodes and hyperedges.
Given the affinities of nodes and hyperedges, a hypergraph matching problem can be formulated as a challenging com-binatorial optimization problem. Most hypergraph match-ing algorithms focus on how to approximately solve that op-timization problem [10, 19, 20, 27, 28, 40, 44]. While these algorithms have kept pushing the frontier of performance, they are practically limited due to the hand-crafted affini-ties and task-agnostic combinatorial solver. Recently, the employment of deep learning has made great progress in the research of graph matching problems [12,30, 36,39,41, 42], suggesting its potential for hypergraph matching problems.
Inspired by the work mentioned above, in this paper, we present the first, to our best knowledge, unified hypergraph neural network (HNN) solution for hypergraph matching (illustrated in Fig. 2). Specifically, given two hypergraphs
G1 and G2 to be matched, we first construct an association hypergraph Ga over them. Each node in Ga represents a pair of nodes from G1 and G2, and each hyperedge in Ga captures the higher-order relationship between two hyper-edges from G1 and G2. With Ga, the matching between G1 and G2 is converted to a node selection problem on Ga.
Then, we propose a novel hypergraph neural network to
Figure 2. An illustration of our proposed hypergraph neural network (HNN-HM). To match hypergraphs G1 and G2, we first construct an association hypergraph Ga over them and convert the matching problem into a node classification problem on Ga. The classification problem is then solved by our proposed HNN-HM, which comprises several hypergraph neural network blocks (the encoder module, the core module, and the decoder module). The encoder module transforms Ga from the input space to an embedding space, using update functions (ϕr enc) for each attribute independently. Then the core module is applied multiple times to update the state of the Ga in the embedding space, in which the update functions for hyperedges (ϕr core, ϕc core), the update function for nodes (ϕv core) are applied sequentially. Finally, the decoder module transforms the association hypergraph from the embedding space to the desired probability space, using an update function for nodes (ϕv core), and the update function for the global attribute (ϕg enc, and ϕg core, ϕe enc, ϕv enc, ϕe enc, ϕc dec). solve the node selection/classification problem. The pro-posed network is comprised of several hypergraph neural network blocks. Each block accepts an association hyper-graph as input and returns an updated version as output.
Concretely, in each block, node attributes related to a hyper-edge will be aggregated to update the hyperedge attributes; and the updated hyperedge attributes will also be aggregated to update the attributes of related nodes. This way, the struc-ture of the association hypergraph will be utilized to update its attributes dynamically. Both the node and hyperedge up-date operations are shift-invariant, thus waiving the limita-tion of the size of the association hypergraph. Finally, we can decode the updated state of the association hypergraph, and reinterpret the attribute of each node as the probability that the node will be selected.
The proposed method, denoted by HNN-HM, is end-to-end trainable and hence allows all components to be jointly optimized. In particular, it allows affinity learning and com-binatorial optimization to be learned together to assimilate their interaction. For evaluation, HNN-HM is tested on four benchmarks in comparison with seven state-of-the-art hy-pergraph matching algorithms. The results clearly show the advantage of our method over previous solutions.
In summary, our main contributions include
• we present the first unified hypergraph neural network (HNN) solution for hypergraph matching;
• we convert the problem of hypergraph matching into a node classification problem and develop a hypergraph neural network to solve it; and
• we test our proposed HNN-HM on various bench-marks and achieve state-of-the-art results.
The source code of our work is made available at https:
//github.com/xwliao/HNN-HM. 2.