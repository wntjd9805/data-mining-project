Abstract
Convolution on 3D point clouds that generalized from 2D grid-like domains is widely researched yet far from per-fect. The standard convolution characterises feature cor-respondences indistinguishably among 3D points, present-ing an intrinsic limitation of poor distinctive feature learn-ing. In this paper, we propose Adaptive Graph Convolution (AdaptConv) which generates adaptive kernels for points according to their dynamically learned features. Compared with using a ﬁxed/isotropic kernel, AdaptConv improves the
ﬂexibility of point cloud convolutions, effectively and pre-cisely capturing the diverse relations between points from different semantic parts. Unlike popular attentional weight schemes, the proposed AdaptConv implements the adaptive-ness inside the convolution operation instead of simply as-signing different weights to the neighboring points. Exten-sive qualitative and quantitative evaluations show that our method outperforms state-of-the-art point cloud classiﬁca-tion and segmentation approaches on several benchmark datasets. Our code is available at https://github.com/ hrzhou2/AdaptConv-master. 1.

Introduction
Point cloud is a standard output of 3D sensors, e.g., Li-DAR scanners and RGB-D cameras; it is considered as the simplest yet most efﬁcient shape representation for 3D ob-jects. A variety of applications arise with the fast advance of 3D point cloud acquisition techniques, including robotics
[31], autonomous driving [20, 43] and high-level semantic analysis [35, 15]. Recent years have witnessed consider-able attempts to generalize convolutional neural networks (CNNs) to point cloud data for 3D understanding. However, unlike 2D images, which are organized as regular grid-like structures, 3D points are unstructured and unordered, dis-cretely distributed on the underlying surface of a sampled object.
∗Co-corresponding authors (mqwei@nuaa.edu.cn/lutong@nju.edu.cn)
Figure 1. Illustration of adaptive kernels and ﬁxed kernels in the convolution. (a) The standard graph convolution applies a
ﬁxed/isotropic kernel (black arrow) to compute features for each point indistinguishably. (b) Based on these features, several at-tentional weights ai are assigned to determine their importance. (c) Differently, AdaptConv generates an adaptive kernel ˆei that is unique to the learned features of each point.
One common approach is to convert point clouds into regular volumetric representations and hence traditional convolution operations can be naturally applied to them
[24, 30]. Such a scheme, however, often introduces exces-sive memory cost and is difﬁcult to capture ﬁne-grained ge-ometric details. In order to handle the irregularity of point clouds without conversions, PointNet [27] applies multi-layer perceptrons (MLPs) independently on each point, which is one of the pioneering works to directly process sparse 3D points.
More recently, several researches have been proposed to utilize the graph-like structures for point cloud analy-sis. Graph CNNs [44, 21, 41, 4, 7] represent a point cloud as graph data according to the spatial/feature similarity be-tween points, and generalize 2D convolutions on images to 3D data. In order to process an unordered set of points with varying neighborhood sizes, standard graph convolutions harness shared weight functions over each pair of points to extract the corresponding edge feature. This leads to a
ﬁxed/isotropic convolution kernel, which is applied identi-cally to all point pairs while neglecting their different fea-ture correspondences. Intuitively, for points from different semantic parts of the point cloud (see the neighboring points in Fig. 1), the convolution kernel should be able to distin-guish them and determine their different contributions.
To address this drawback, several approaches [41, 38] are proposed inspired by the idea of attention mechanism
[3, 5]. As shown in Fig. 1 (b), proper attentional weights ai corresponding to the neighboring points are assigned, try-ing to identify their different importance when performing the convolution. However, these methods are, in principle, still based on the ﬁxed kernel convolution, as the attentional weights are just applied to the features obtained similarly (see the black arrows in Fig. 1 (b)). Considering the intrin-sic isotropy of current graph convolutions, these attempts are still limited for detecting the most relevant part in the neighborhood.
Differently, we propose to adaptively establish the rela-tionship between a pair of points according to their learned features. This adaptiveness represents the diversity of ker-nels unique to each pair of points rather than relying on the predeﬁned weights. To achieve this, in this paper, we propose a new graph convolution operator, named adap-tive graph convolution (AdaptConv). AdaptConv gener-ates adaptive kernels ˆei for points in the convolution which replace the aforementioned isotropic kernels (see Fig. 1 (c)). The key contribution of our work is that the proposed
AdaptConv is employed inside the graph convolution rather a weight function that is based on the resulting feature. Fur-thermore, we explore several choices for the feature con-volving design, offering more ﬂexibility to the implemen-tation of the adaptive convolution. Extensive experiments demonstrate the effectiveness of the proposed AdaptConv, achieving state-of-the-art performances in both classiﬁca-tion and segmentation tasks on several benchmark datasets. 2.