Abstract
We propose a novel method for reconstructing floor plans from noisy 3D point clouds. Our main contribution is a principled approach that relies on the Monte Carlo Tree
Search (MCTS) algorithm to maximize a suitable objective function efficiently despite the complexity of the problem.
Like previous work, we first project the input point cloud to a top view to create a density map and extract room propos-als from it. Our method selects and optimizes the polygo-nal shapes of these room proposals jointly to fit the density map and outputs an accurate vectorized floor map even for large complex scenes. To do this, we adapt MCTS, an al-gorithm originally designed to learn to play games, to se-lect the room proposals by maximizing an objective function combining the fitness with the density map as predicted by a deep network and regularizing terms on the room shapes.
We also introduce a refinement step to MCTS that adjusts the shape of the room proposals. For this step, we propose a novel differentiable method for rendering the polygonal shapes of these proposals. We evaluate our method on the recent and challenging Structured3D and Floor-SP datasets and show a significant improvement over the state-of-the-art, without imposing any hard constraints nor assumptions on the floor plan configurations. 1.

Introduction
Scene understanding from images is one of the main top-ics in computer vision, as it aims both at replicating one of the key abilities of human beings and producing solutions for many applications such as robotics or augmented re-ality. We focus here on the creation of a structured floor plan where each room of an indoor environment is repre-sented as a polygon with one edge per wall. Many types of input have been considered: Monocular perspective color views [18, 19, 22, 31], panoramic views [32, 38, 40], depth
Point cloud
Density map
Our result
Figure 1: Given a density map i.e. the top view of the 3D point cloud of a floor, we retrieve an accurate floor map that successfully recovers a variety of room shapes. maps [36, 39]. Here, we focus on unstructured 3D point clouds as in [2, 7, 23, 26], as they can now be generated easily with an RGB-D camera and can cover an entire floor.
To estimate the floor plan from a given point cloud,
[7, 23] proposes to first project the point cloud into a vir-tual top view to create a ’density map’, as the walls, the main features for creating the floor map, appear relatively clearly in the density map. As shown in Figure 1, the den-sity maps can be noisy, and it is still challenging to repre-sent the rooms as vector drawings with a minimal number of edges as a human designer would do especially for non-Manhattan floor maps. To deal with this complexity, [7] proposes a graph-based solution with a sound energy term but still assumes the existence of some dominant wall direc-tions in the scene.
In this paper, we also aim at estimating a floor plan from a density map. Our contribution is a method, which we call
MonteFloor, that is conceptually simple and robust and re-turns high-quality floor plans. Figure 1 shows an example from the Floor-SP test set that demonstrates we can recon-struct complex floor maps, including very large ones with complex room shapes without having to tune hyperparame-ters.
Like [7], our method starts from room proposals gener-ated by Mask-RCNN [17] from the density map. However,
the way we handle these room proposals is fundamentally different from [7]. Where [7] adjusts the room walls and corners in a greedy fashion, we select the correct room pro-posals jointly while adjusting their locations and shapes, guided by a learned scoring function.
This is possible thanks to two main contributions.
Our first contribution is based on the Monte Carlo Tree
Search (MCTS) algorithm [3, 8]. MCTS is a stochas-tic algorithm that efficiently explores search trees and has been used for example in AlphaGo and AlphaZero to select moves when playing Go or other games with high combina-torials [30]. We use it to search among the room proposals the ones actually belonging to the correct floor plan. In our case, a move corresponds to the selection of a room pro-posal. In contrast with other tree search algorithms, MCTS is based only on the evaluations of leaves. This means that we can select a set of proposals based on how well they explain the density map together. After evaluating a leaf,
MCTS updates a score in the visited nodes, which will be used to guide the next tree explorations.
To evaluate how well a set of proposals explains an in-put density map, we introduce an objective function that combines a ’metric score’ predicted by a deep network and regularization terms. This network takes as input the den-sity map and an image of the selected proposals to predict the Intersection-over-Union between the selected proposals and the ground truth. The regularization terms encourage the selected room proposals to be in contact with each other without overlapping, and angles close to 90◦ to be exactly 90◦—note this is different from enforcing Manhattan World conditions as other angles are also accepted.
Moreover, to adapt MCTS and obtain accurate plan es-timates, we extended it by adding a refinement step before evaluating the objective function. The step performs an op-timization of the objective function and adjusts the shapes of the selected room proposals to better fit the density map.
This is made possible by our second contribution, which is a novel differentiable method to optimize the shapes of 2D polygons. Note that very recently, [16] has also used MCTS for a scene understanding problem. However, it proposes a straightforward application of MCTS. By contrast, we rely on a learned objective function suitable to our problem, and we introduce an optimization step to obtain accurate esti-mates.
While we focus in this work on floor plan estimation, we believe our approach is general and could be applied to other scene understanding problems, as its components are generic: We start from proposals for the target objects (the rooms in this case). This step does not have to perform well to obtain good final results as our MCTS-based algorithm can deal with many false positives. This algorithm looks for the final solution by maximizing a data-driven score, which can thus be easily replaced to adapt to another problem. Our solution to refine the proposals is more specific to 2D poly-gons, but could inspire other authors to develop their own method adapted to their target objects.
To evaluate our method and compare it with Floor-SP [7], which is the state-of-the-art for our problem, we first perform experiments on the Structured3D dataset [37] that contains a variety of complex layout configurations. We show significant improvements regarding both the accuracy and time complexity over Floor-SP (after retraining their method on Structured3D). As the authors of Floor-SP could not provide the training set for their method (as stated on their project page 1), we could not re-train our network for predicting the metric specifically for this dataset, and we had to use the one trained on Structured3D. Despite this do-main gap, we achieve better performance on the Floor-SP test set without imposing any hard constraints nor assump-tions on the floor plan configurations. 2.