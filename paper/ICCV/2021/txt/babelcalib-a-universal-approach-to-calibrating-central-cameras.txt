Abstract
Existing calibration methods occasionally fail for large ﬁeld-of-view cameras due to the non-linearity of the underlying problem and the lack of good initial values for all parameters of the used camera model. This might occur because a simpler projection model is assumed in an initial step, or a poor initial guess for the internal parameters is pre-deﬁned. A lot of the difﬁculties of general camera calibration lie in the use of a forward projection model.
We side-step these challenges by ﬁrst proposing a solver to calibrate the parameters in terms of a back-projection model and then regress the parameters for a target for-ward model. These steps are incorporated in a robust estimation framework to cope with outlying detections.
Extensive experiments demonstrate that our approach is very reliable and returns the most accurate calibration parameters as measured on the downstream task of abso-lute pose estimation on test sets. The code is released at https://github.com/ylochman/babelcalib. 1.

Introduction
Cameras with very wide ﬁelds of view, such as ﬁsh-eye lenses and catadioptric rigs [44], usually require highly nonlinear models with many parameters. Calibrating these cameras can be a tedious process because of the camera model’s complexity and its underlying non-linearity. If the calibration is inaccurate or even fails, then the user is often required to manually remove problematic images or ﬁdu-cials, capture additional images, or provide better initial guesses for the unknown model parameters. A second com-mon problem is that the choice of calibration toolbox limits the user to a particular set of supported camera models and extending the toolbox to accommodate more ﬂexible cam-era models can be a difﬁcult task.
This paper proposes a method that robustly estimates ac-curate camera models for central projection cameras [39] with ﬁelds of view ranging from both narrow to omni-†Part of this work was done when Yaroslava Lochman and James Pritts were at Facebook Reality Labs.
Figure 1: Method overview and result. (left) BabelCalib pipeline: the camera model proposal step ensures a good initialization, (right) example result showing residuals of re-projected corners of test images. directional. Furthermore, the proposed framework can es-timate the most widely used camera models for these lens types, while also providing an easy and common path to extend the method to new camera models.
Camera calibration is a very non-linear task, hence a good initial guess is typically needed to obtain accurate pa-rameters. Poor initial estimates are frequent source of fail-ures. Sensible initial guesses are often available only for some of the model unknowns, e.g., initial values are of-ten unavailable for parameters describing substantial lens distortions. A second failure mode is caused by incorrect or grossly inaccurate measurements, e.g., corner detections, which are matched to ﬁducials on the calibration target. If corrupted data is used to estimate the initial guess, then the downstream model reﬁnement will likely fail.
Our method addresses both failure modes. We introduce a solver that recovers all calibration parameters for a wide range of cameras (and lenses) such as pinhole, ﬁsheye and catadioptric ones. We show that the proposed solver pro-vides a good initialization for all critical intrinsics, which includes the center of projection and pixel aspect ratio. Our solver assumes only a planar calibration target.
In addi-tion, the initialization simultaneously improves the accu-racy of corner detections while estimating the center of pro-jection and camera pose by enforcing projective constraints.
MODEL
PARAMETERS, θ
Brown-Conrady (BC) [8]
{k1, k2}
Kannala-Brandt (KB) [20]
{k1, . . . , k4} d r a w r o
F d r a w k c a
B
Uniﬁed Camera (UCM) [26]
Field of View (FOV) [7]
{ξ}
{w}
Extended Uniﬁed Camera (EUCM) [21]
{α, β}
Double Sphere (DS) [41]
{ξ, α}
Division (DIV) [34, 40]
Division-Even [22]
{a1, a2, a3}
{λ1, . . . , λN }
RADIAL (BACK-)PROJECTION FUNCTION
φθ(R, Z) = (R/Z) · (cid:16) 1 + (cid:80)2 n=1 kn (R/Z)2n(cid:17)
φθ(R, Z) = ζ + (cid:80)4 n=1 knζ2n+1,
√
φθ(R, Z) = R(ξ + 1)/(ξ(
R2 + Z2) + Z)
ζ = atan2(R, Z)
φθ(R, Z) = 1 w atan2 (2R tan w 2 , Z)
φθ(R, Z) = R/(αd + (1 − α)Z), (cid:113)
φθ(R, Z) = R/(αd2 + (1 − α)Z2), d2 = d = (cid:112)βR2 + Z2
√
R2 + Z2 2 , Z2 = ξ
R2 + Z2 + Z
ψθ(r) = 1 + (cid:80)3
ψθ(r) = 1 + (cid:80)N n=1 anrn+1 n=1 λnr2n
Table 1: Supported camera models. Models compute either radially-symmetric projection, r = φθ(R, Z), or back-projection, r : rZ − Rψθ(r) = 0, where R and Z are the radial and depth components of a scene point, and r is the distance from the center of projection of a retinal point. The right column lists functions for published models.
The solver is used within a RANSAC framework for efﬁ-cient model generation. The model proposals are evaluated for consistency with the extracted features, and poorly ex-tracted features and incorrect correspondences are rejected.
Our approach uses a back-projection model as an in-termediate camera model. Back-projection models map-ping image points to 3D ray directions are able to model a wide range of cameras (such as pinhole, ﬁsheye and omni-directional cameras). Our approach (and therefore our main contribution) is to decouple the calibration task for general camera models into a much simpler calibration task for a powerful back-projection model followed by a regression task to obtain the parameters of the general target camera model. Effectively, we remove the need to generate a solver for each target camera model, which can be intractable, or result in solvers that are computationally expensive or nu-merically unstable in practice. Instead, we use an efﬁcient solver for a back-projection model followed by an easier re-gression task to recover the target model parameters. The motivation for such an approach is given in Table 1, where it shows that projection equations are relatively simple once the radial component R and the depth component Z are known. These values are provided by the back-projection model. E.g., for the Kannala-Brandt model [20], estimation of its parameters is linear for given R and Z.
Overall, our stratiﬁed approach to calibration circum-vents many of the issues that are due to the highly non-linear behavior of many ﬂexible camera models. BabelCalib per-forms both back-projection estimation and target model re-gression inside of a robust estimation framework, and di-rectly returns the parameters of the target model. Fig. 1 illustrates the accuracy of our method for a ﬁsheye lens on hold-out test images. The achieved high accuracy is spa-tially coherent across the entire calibration target over all test images. 1.1.