Abstract
We present an out-of-core variational approach for sur-face reconstruction from a set of aligned depth maps. Input depth maps are supposed to be reconstructed from regular photos or/and can be a representation of terrestrial LIDAR point clouds. Our approach is based on surface reconstruc-tion via total generalized variation minimization (T GV ) because of its strong visibility-based noise-ﬁltering prop-erties and GPU-friendliness. Our main contribution is an out-of-core OpenCL-accelerated adaptation of this numeri-cal algorithm which can handle arbitrarily large real-world scenes with scale diversity. 1.

Introduction
The structure from motion pipeline makes it possible to take photos of the same object/scene and then not only align and calibrate these photos, but also reconstruct an observed surface with a high amount of details. At the moment, the progress in camera sensor development opens a possibility for a regular user to take photos with a size up to hundreds of megapixels, the number which has been increasing rapidly over the past decades. Additionally, due to help of UAVs, affordable quadrocopters and automatic
ﬂight planners, it becomes possible to gradually increase the amount of pictures one can take in a short span of time.
Therefore, in the area of photogrammetry, the task of being able to use all of the available data for a detailed noise-free surface reconstruction in an out-of-core fashion is necessary to make a highly detailed large scale reconstruction possible on affordable computers with limited RAM.
We present a surface reconstruction method that has strong noise-ﬁltering properties and can take both depth maps and terrestrial LIDAR scans as an input. The whole method is implemented in an out-of-core way: the required memory usage is low even for very large datasets - we tar-geted the usage to be around 16 GB even for a Copenhagen city dataset with 27472 photos - see Fig. 1. Each process-ing stage is divided into independent parts for out-of-core guarantees, thus additionally obtaining a massive parallelism
Figure 1. Our method can handle an arbitrary large scene – even 425 km2 of the Copenhagen city (this polygonal model was recon-structed from 27472 aerial photos – see supplementary for details). property (i.e. pipeline is cluster-friendly). Calculation-heavy stages (the computation of histograms and iterative numeric scheme) are accelerated with GPUs via OpenCL API. 2.