Abstract
Bayesian optimization (BO) is a powerful approach for optimizing black-box, expensive-to-evaluate functions. To enable a ﬂexible trade-off between the cost and accuracy, many applications allow the function to be evaluated at different
ﬁdelities. In order to reduce the optimization cost while maximizing the beneﬁt-cost ratio, in this paper we propose Batch Multi-ﬁdelity Bayesian Optimization with Deep Auto-Regressive Networks (BMBO-DARN). We use a set of Bayesian neural networks to construct a fully auto-regressive model, which is expressive enough to capture strong yet complex relationships across all the ﬁdelities, so as to improve the surrogate learning and optimization performance. Furthermore, to enhance the quality and diversity of queries, we develop a simple yet efﬁcient batch querying method, without any combinatorial search over the ﬁdelities. We propose a batch acquisition function based on Max-value Entropy Search (MES) principle, which penalizes highly correlated queries and encourages diversity. We use posterior samples and moment matching to fulﬁll efﬁcient computation of the acquisition function, and conduct alternating optimization over every ﬁdelity-input pair, which guarantees an improvement at each step. We demonstrate the advantage of our approach on four real-world hyperparameter optimization applications. 1

Introduction
Many applications demand we optimize a complex function of an unknown form that is expensive to evaluate. Bayesian optimization (Mockus, 2012; Snoek et al., 2012) is a powerful approach to optimize such functions. The key idea is to use a probabilistic surrogate model, typically Gaussian processes (Rasmussen and Williams, 2006), to iteratively approximate the target function, integrate the posterior information to compute and maximize an acquisition function so as to generate new inputs at which to query, update the model with new examples, and meanwhile approach the optimum.
In practice, to enable a ﬂexible trade-off between the computational cost and accuracy, many appli-cations allow us to evaluate the target function at different ﬁdelities. For example, to evaluate the performance of the hyperparameters for a machine learning model, we can train the model thoroughly, i.e., with sufﬁcient iterations/epochs, to obtain the accurate evaluation (high-ﬁdelity yet often costly) or just run a few iterations/epochs to obtain a rough estimate (low-ﬁdelity but much cheaper).
Many multi-ﬁdelity BO algorithms (Lam et al., 2015; Kandasamy et al., 2016; Zhang et al., 2017;
Song et al., 2019; Takeno et al., 2019) have therefore been proposed to identify both the ﬁdelities and inputs at which to query, so as to reduce the cost and achieve a good beneﬁt-cost balance.
Notwithstanding their success, these methods often overlook the strong yet complex relationships between different ﬁdelities or adopt an over-simpliﬁed assumption, (partly) for the sake of convenience in calculating/maximizing the acquisition function considering ﬁdelities. This, however, can restrict the performance of the surrogate model, impair the optimization efﬁciency and increase the cost. For 35th Conference on Neural Information Processing Systems (NeurIPS 2021).
example, Lam et al. (2015); Kandasamy et al. (2016) learned an independent GP for each ﬁdelity,
Zhang et al. (2017) used multitask GPs with a convolved kernel for multi-ﬁdelity modeling and have to use a simple smoothing kernel (e.g., Gaussian) for tractable convolutions. The recent work (Takeno et al., 2019) imposes a linear correlation across different ﬁdelities. In addition, the standard one-by-one querying strategy needs to sequentially run each query and cannot utilize parallel computing resources to accelerate, e.g., multi-core CPUs/GPUs and clusters. While incrementally absorbing more information, it does not explicitly account for the correlation between different queries, hence still has a risk to bring in highly correlated examples that includes redundant information.
To address these issues, we propose BMBO-DARN, a novel batch multi-ﬁdelity Bayesian optimization method. First, we develop a deep auto-regressive model to integrate training examples at various
ﬁdelities. Each ﬁdelity is modeled by a Bayesian neural network (NN), where the output predicts the objective function value at that ﬁdelity and the input consists of the original inputs and the outputs of all the previous ﬁdelities. In this way, our model is adequate to capture the complex, strong correlations (e.g., nonstationary, highly nonlinear) across all the ﬁdelities to enhance the surrogate learning. We use Hamiltonian Monte-Carlo (HMC) sampling for posterior inference. Next, to improve the quality of the queries, we develop a simple yet efﬁcient method to jointly fetch a batch of inputs and ﬁdelities. Speciﬁcally, we propose a batch acquisition function based on the state-of-the-art Max-value Entropy Search (MES) principle (Wang and Jegelka, 2017). The batch acquisition function explicitly penalizes highly correlated queries and encourages diversity. To efﬁciently compute the acquisition function, we use the posterior samples of the NN weights and moment matching to construct a multi-variate Gaussian posterior for all the ﬁdelity outputs and the function optimum. To prevent a combinatorial search over multiple ﬁdelities in maximizing the acquisition function, we develop an alternating optimization algorithm to cyclically update each pair of input and ﬁdelity, which is much more efﬁcient and guarantees an improvement at each step.
For evaluation, we examined BMBO-DARN in both synthetic benchmarks and real-world applications.
The synthetic benchmark tasks show that given a small number of training examples, our deep auto-regressive model can learn a more accurate surrogate of the target function than other state-of-the-art multi-ﬁdelity BO models. We then evaluated BMBO-DARN on four popular machine learning models (CNN, online LDA, XGBoost and Physics informed NNs) for hyperparameter optimization.
BMBO-DARN can ﬁnd more effective hyperparameters leading to superior predictive performance, and meanwhile spends smaller total evaluation costs, as compared with state-of-the-art multi-ﬁdelity
BO algorithms and other popular hyperparameter tuning methods. 2