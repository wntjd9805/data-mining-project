Abstract
We consider the task of learning latent community structure from multiple corre-lated networks. First, we study the problem of learning the latent vertex correspon-dence between two edge-correlated stochastic block models, focusing on the regime where the average degree is logarithmic in the number of vertices. We derive the precise information-theoretic threshold for exact recovery: above the threshold there exists an estimator that outputs the true correspondence with probability close to 1, while below it no estimator can recover the true correspondence with probability bounded away from 0. As an application of our results, we show how one can exactly recover the latent communities using multiple correlated graphs in parameter regimes where it is information-theoretically impossible to do so using just a single graph. 1

Introduction
Learning community structure in networks is a ubiquitous inference task in several domains, including biology [13, 41], sociology [26], and machine learning [57, 37, 60]. Recent decades have therefore seen an explosion of work on the topic, leading to determining the fundamental information-theoretic limits for learning communities in probabilistic generative models [1, 2, 3, 45, 44, 42, 46], as well as algorithms that work well in practice [55, 33, 22]. Typically, such algorithms only leverage the structure of the network (i.e., the configuration of node-node links). Increasingly, one often has access to side information that can greatly improve the performance of inference algorithms.
There is a vast literature on designing algorithms that incorporate various types of side information to aid in recovering communities in networks. The works [21, 38, 47, 32, 8, 63, 11, 56, 39] leverage node-level information that is correlated with community memberships; here the sharp limits for community detection were conjectured by Deshpande et al. [21] and recently proven by Lu and
Sen [38]. Another line of work [30, 5, 51, 52, 36, 4, 7, 43, 39] recovers communities from a multi-layer network, where the different layers are conditionally independent given the same community structure. Recently Ma and Nandy [39] synthesized these two strands of literature.
In contrast to prior work, we explore scenarios where the side information comes in the form of multiple correlated networks, which is natural in several domains including social networks [49, 53, 35], computational biology [59], and machine learning [15, 14]. In the context of social networks, for instance, many datasets are anonymized to protect the identity of users. Nevertheless, one may be able to infer additional information about users from additional networks by noting that the interaction patterns of the same set of users are likely to be similar across networks [49, 53, 35].
In computational biology, an important goal is to study the functional properties of protein groups 35th Conference on Neural Information Processing Systems (NeurIPS 2021).
through a protein-protein interaction (PPI) network. Using the insight that functionally similar protein groups will have similar interaction structures, one can compare PPIs across species to infer protein functions [59]. In all of these examples, an important task, commonly known as graph matching, is to synthesize the information from multiple correlated networks in a sensible manner.
To the best of our knowledge, we are the first to consider the use of multiple correlated networks for recovering communities. Specifically, we quantify, in an information-theoretic sense, how much information we can gain from correlated networks in order to infer community structure. To this end, we focus on correlated graphs G1 and G2 drawn marginally according to the stochastic block model (SBM), which is widely recognized as the canonical probabilistic generative model for networks with community structure [31, 1]. The reason for studying this probabilistic model is twofold. For one, it serves as a prototypical model for networks with community structure found in practice, hence the algorithms we develop will serve as a starting point for applications. Moreover, the SBM has well-defined ground-truth communities, so we can concretely study the correctness of algorithms in terms of whether the communities they output align with the ground truth. 2 Models and Questions
The stochastic block model (SBM). The SBM is perhaps the simplest and most well-known probabilistic generative model for networks with community structure. It was initially proposed by
Holland, Laskey, and Leinhardt [31] and subsequently used as a theoretical testbed for evaluating clustering algorithms on average-case networks (see, e.g., [24, 12, 9]). A striking fact about the SBM is that it exhibits sharp information-theoretic phase transitions for various inference tasks, leading to a precise understanding of when community information can be extracted from network data.
Such phase transitions were first conjectured by Decelle et al. [20] and were subsequently proven rigorously by several authors [44, 42, 46, 2, 45, 3, 10, 1]. In summary, the SBM is a well-motivated and mathematically rich setting for studying inference tasks.
∈
+1,
[0, 1], we construct G
In this work we focus on the simplest setting, a SBM with two symmetric communities. For a
SBM(n, p, q) as follows. The graph G has n positive integer n and p, q
[n] has a community label vertices, labeled by the elements of [n] :=
. Each vertex i n i=1 be the
σi
σi
∈ {
{
} vector of community labels, with the two communities given by the sets V+ :=
[n] : σi = +1
}
∈
. Then, given the community labels σ, the edges of G are drawn and V 1
}
− independently across vertex pairs as follows. For distinct i, j
[n], if σiσj = 1, then the edge (i, j)
∈ is in G with probability p; else (i, j) is in G with probability q.
; these are drawn i.i.d. uniformly at random across all i
∼ 1, . . . , n
}
{
∈
[n]. Let σ :=
[n] : σi = 1
} i
{ i
{
:=
−
∈
∈
−
Community recovery. Generally speaking, a community recovery algorithm takes as input G (without knowledge of the community labels σ) and outputs a community labeling (cid:98)σ. The overlap between the estimated labeling and the ground truth is given by (cid:12) (cid:12) (cid:12) (cid:12) (cid:12) ov((cid:98)σ, σ) := (cid:98)σiσi n (cid:88) 1 n (cid:12) (cid:12) (cid:12) (cid:12) (cid:12)
. i=1
In the formula for the overlap, we take an absolute value since the labelings σ and
σ specify the same community partition (and it is only possible to recover σ up to its sign). Moreover, notice that ov((cid:98)σ, σ) is always between 0 and 1, where a larger value corresponds to a better match between the estimated communities and the ground truth. Indeed, the algorithm succeeds in exactly recovering the communities (i.e., (cid:98)σ = σ or (cid:98)σ =
In the logarithmic degree regime—that is, when p = α log(n)/n and q = β log(n)/n for some fixed constants α, β 0—it is well-known that there is a sharp information-theoretic threshold for exactly recovering communities in the SBM [2, 45, 3, 1]. Specifically, if
σ) if and only if ov((cid:98)σ, σ) = 1.
−
−
≥ (cid:12) (cid:12) (cid:12)√α
− (cid:112) (cid:12) (cid:12) (cid:12) > √2,
β (2.1) then exact recovery is possible: there is a polynomial-time algorithm which outputs an estimator (cid:98)σ satisfying limn
→∞
P(ov((cid:98)σ, σ) = 1) = 1. On the other hand, if (cid:12) (cid:12) (cid:12)√α (cid:12) (cid:12) (cid:12) < √2, (cid:112)
β
− (2.2)
P(ov((cid:101)σ, σ) = 1) = 0.
→∞ then exact recovery is impossible: for any estimator (cid:101)σ, we have that limn 2
Figure 1: Schematic showing the construction of correlated SBMs (see text for details).
∈
Correlated SBMs. The goal of our work is to understand how side information in the form of multiple correlated SBMs affects the threshold given by (2.1) and (2.2). To construct a pair of
[0, 1] which controls the level of correlation correlated SBMs, we define an additional parameter s between the two graphs. Formally, we construct (G1, G2)
CSBM(n, p, q, s) as follows. First,
SBM(n, p, q), and let σ denote the community labels. Next, given G, generate a parent graph G we construct G1 and G′2 by independent subsampling: each edge of G is included in G1 with probability s, independently of everything else, and non-edges of G remain non-edges in G1; we obtain G′2 independently in the same fashion. Note that G1 and G′2 inherit the vertex labels from the parent graph G, and the community labels are given by σ in both graphs. Finally, we let π
∗ be a uniformly random permutation of [n], independently of everything else, and generate G2 by relabeling the vertices of G′2 according to π (i) in G2). This last step in the construction of G2 reflects the observation that in applications, node labels are often obscured. This construction is visualized in Figure 1. (e.g., vertex i in G′2 is relabeled to π
∼
∼
∗
∗
This model of correlated SBMs was first studied by Onaran, Erkip, and Garg [50]. This process of generating correlated graphs (i.e., by first generating a parent graph, independently subsampling it, and randomly permuting the labels) is a natural and common approach for inducing correlation in the formation of edges, and has been employed to study correlated graphs from the Erd˝os-Rényi model (see, e.g., [53], as well as further references in Section 4), the Chung-Lu model [62], and the preferential attachment model [35].
An important property of the construction is that marginally G1 and G2 are both SBMs. Specifically, since the subsampling probability is s, we have that G1
SBM(n, ps, qs). In the logarithmic degree regime, where p = α log(n)/n and q = β log(n)/n, (2.1) implies that the communities can be exactly recovered from G1 alone if
∼ (cid:12) (cid:12) (cid:12)√α
− (cid:112)
β (cid:12) (cid:12) (cid:12) > (cid:114) 2 s
. (2.3)
A central question of our work is how one can utilize the side information in G2 to go beyond the single-graph threshold (2.3). This is formalized as follows.
Objective 1 (Exact community recovery). Given (G1, G2)
, s mine conditions on α, β, and s so that there exists an estimator (cid:98)σ = (cid:98)σ(G1, G2) satisfying
CSBM
∼ n, α log n n
, β log n n (cid:16) (cid:17)
, deter-P(ov((cid:98)σ, σ) = 1) = 1. lim n
→∞ is known, then one can readily improve
A key observation is that if the latent correspondence π is known, then one can reconstruct G′2 from G2. We the achievability region in (2.3). Indeed, if π by “overlaying" G1 and G′2 (i.e., taking their union). Formally, can then construct a new graph H if and only if (i, j) is an edge in G1 or G′2. An equivalent interpretation is (i, j) is an edge in H
∗ that (i, j) is an edge in the parent graph G and it is included in either G1 or G′2 in the subsampling s)2, so it follows process. The probability that the edge is not included in either G1 or G′2 is (1
− s)2) log(n)/n(cid:1). By (2.1) it thus follows that H that exact community recovery is possible if s)2) log(n)/n, β(1
SBM (cid:0)n, α(1
∗ ∼ (1 (1
−
−
−
−
∗
∗
∗ (cid:12) (cid:12) (cid:12)√α
− (cid:112) (cid:12) (cid:12) (cid:12) >
β 2 (1
− 1
− s)2 . (cid:115) 3 (2.4)
Since 1
−
− implies that if π (1 s)2 > s for s
∈ is known and if (cid:114)
∗ (0, 1), (2.4) is a strict improvement over (2.3). Remarkably, this (cid:12) (cid:12) (cid:12)√α
>
− (cid:112)
β (cid:12) (cid:12) (cid:12) > (cid:115) 1 2 s 2 (1
−
− s)2 , then it is information-theoretically impossible to exactly recover σ from G1 (or G2) alone, but one can recover σ exactly by combining information from G1 and G2. To make this rigorous, we study when it is possible to exactly recover π from G1 and G2. This task is known as graph matching.
∗ (cid:16)
, β log n
Objective 2 (Exact graph matching). Given (G1, G2) n conditions on α, β, and s so that there exists an estimator (cid:98)π = (cid:98)π(G1, G2) satisfying lim n
→∞
P((cid:98)π = π n, α log n n
CSBM
) = 1.
∼
∗ (cid:17)
, s
, determine
While we have motivated graph matching as an intermediate step in recovering communities, it is an important problem in its own right, with applications to data privacy in social networks [49, 53], protein-protein interaction networks [59], and machine learning [15, 14], among others. In particular, it is well known that graph matching algorithms can be used to de-anonymize social networks [49], showing that anonymity is not the same as privacy. Studying the fundamental limits of when graph matching is possible can serve to highlight the precise conditions when anonymity can indeed guarantee privacy, and when additional safeguards are necessary.
∗
∗
∗
−
−
√1 is possible if s(1 with probability tending to 1 if s2α > 1. When α
Although Objective 2 has not been studied previously, there is strong evidence of a phase transition for in the logarithmic degree regime. In the special case of correlated Erd˝os-Rényi exact recovery of π graphs—that is, when α = β—Cullina and Kiyavash [16, 17] showed that the maximum likelihood estimate exactly recovers π
= β, and assuming that the community labels are known in both graphs, Onaran, Garg, and Erkip [50] showed that exact s2) (α + β) /2 > 3. Cullina et al. [19], also assuming that recovery of π community labels are known in both graphs, stated (without proof) that exact recovery is possible if s2(α + β)/2 > 2. Since these works assume knowledge of community labels, it is unclear if these conditions allow to recover π based on knowledge of only G1 and G2. Nevertheless, they suggest that exact graph matching may be possible in the logarithmic degree regime.
Turning to impossibility results, in correlated Erd˝os-Rényi graphs, if s2α < 1, then there is no with probability bounded away from zero [16, 17, 61]. For estimator which exactly recovers π
∗ when s2(α+β)/2 < 1. correlated SBMs, Cullina et al. [19] showed that one cannot exactly recover π
In particular, for correlated Erd˝os-Rényi graphs the information-theoretic threshold s2α = 1 is the connectivity threshold for the intersection graph of G1 and G′2. (Given two graphs H1 and H2, the edge (i, j) is in the intersection graph of H1 and H2 if and only if it is an edge in both H1 and H2.)
For correlated SBMs the connectivity threshold for the intersection graph is
∗
∗ (cid:18) α + β 2
This suggests that (2.5) may be the information-theoretic threshold for exact recovery of π correlated SBMs. Our main result, Theorem 3.1, shows that this is indeed the case.
= 1. s2 (cid:19) (2.5) for
∗ 3 Results
We now describe our results, which address Objectives 1 and 2.
In Section 3.1, we precisely characterize the fundamental information-theoretic limits for exact graph matching, thereby fully achieving Objective 2. In Section 3.2, we provide partial answers to Objective 1; in particular, these provide the information-theoretic threshold for exact community recovery in the regime where s2(α + β)/2 > 1. Finally, in Section 3.3, we extend the ideas of Section 3.2 to establish achievability and impossibility results for exact community recovery with K correlated SBMs. 3.1 Exact Graph Matching
We start with our main result, which determines the achievability region for exact graph matching in correlated SBMs, providing an estimator that correctly recovers the latent vertex correspondence above the information-theoretic threshold. 4
̸
Theorem 3.1. Fix constants α, β > 0 and s
.
, s
Let (cid:98)π(G1, G2) be a vertex mapping that maximizes the number of agreeing edges between G1 and G2 (that is, the number of matched pairs of vertices for which an edge exists between them in both graphs). If
[0, 1]. Let (G1, G2)
CSBM
∼
∈ n, α log n n
, β log n n (cid:16) (cid:17) then s2 (cid:19) (cid:18) α + β 2
> 1, (3.1) lim n
→∞
P ((cid:98)π(G1, G2) = π
) = 1.
∗
∗
We remark that the estimator (cid:98)π used in Theorem 3.1 is a natural and well-motivated estimator for the latent mapping π
. It was first considered by Pedarsani and Grossglauser [53] in the context of the correlated Erd˝os-Rényi model, where it is the maximum a posteriori (MAP) estimate [16, 17, 50]. in the correlated
As a result, it achieves the information-theoretic threshold for exact recovery of π
Erd˝os-Rényi model [17, 61]. This estimator has also been studied in the context of correlated SBMs by Onaran, Erkip, and Garg [50]; they show that if the commmunity labels of all vertices in G1 and
G2 are known, then the permutation which maximizes the number of agreeing edges and is consistent 1) succeeds with the community labels (i.e., does not map a vertex with label +1 to a vertex of label s2) (α + β) /2 > 3 in recovering π exactly, provided that the (suboptimal) condition s(1 holds. Theorem 3.1 improves on this result using a more refined analysis, obtaining the optimal condition (3.1), and not assuming any knowledge of community labels.
√1
−
−
−
∗
∗
The next result establishes a converse to Theorem 3.1. This was previously proven in [19].
Theorem 3.2. Fix constants α, β > 0 and s and suppose that
∈ (cid:18) α + β 2
Then for any estimator (cid:101)π(G1, G2), we have that s2
[0, 1]. Let (G1, G2) (cid:16)
CSBM n, α log n n
, β log n n (cid:17)
, s
∼ (cid:19)
< 1. (3.2) lim n
→∞
P((cid:101)π(G1, G2) = π
) = 0.
∗
Together, Theorems 3.1 and 3.2 establish the fundamental information-theoretic limits for exact
. This is the natural generalization of the corresponding results for correlated Erd˝os-recovery of π
Rényi graphs: when α = β, the same estimator (cid:98)π succeeds if s2α > 1, else if s2α < 1, then no estimator can exactly recover π with probability bounded away from zero [17, 61].
∗
∗
An overview of the proofs of Theorems 3.1 and 3.2 is given in Section 5, with full details provided in the Supplementary Material. 3.2 Exact Community Recovery
We now turn to exact community recovery with two correlated SBMs, formalizing the arguments of Section 2. The strategy is to first perform exact graph matching, then to combine the two graphs by taking their union with respect to the matching, and finally to run an exact community recovery algorithm on this new graph.
Theorem 3.3. Fix constants α, β > 0 and s
Suppose that s2 (α + β) /2 > 1 and
∈
[0, 1]. Let (G1, G2)
∼ (cid:16)
CSBM n, α log n n
, β log n n (cid:17)
, s
. (cid:115) (cid:12) (cid:12) (cid:12)√α
− (cid:112) (cid:12) (cid:12) (cid:12) >
β 2 (1
− 1
− s)2 . (3.3)
Then there is an estimator (cid:98)σ = (cid:98)σ(G1, G2) such that
P (ov ((cid:98)σ, σ) = 1) = 1. lim n
→∞
The proof readily follows from Theorem 3.1 and existing results on exact community recovery in the
SBM [2, 45, 3, 1]. 5
(a) Fixed s = 0.25. (b) Fixed s = 0.5. (c) Fixed s = 0.75.
Figure 2: Phase diagrams for exact community recovery for fixed s, with α
[0, 40] on the axes. Green region: exact community recovery is possible from G1 alone; Cyan region: exact community recovery is impossible from G1 alone, but it is possible from (G1, G2); Yellow region: exact community recovery is impossible from G1 alone, unknown if it is possible from (G1, G2);
Red region: exact community recovery is impossible from (G1, G2).
[0, 40] and β
∈
∈ (a) Fixed β = 2. (b) Fixed β = 10. (c) Fixed β = 20.
Figure 3: Phase diagrams for exact community recovery for fixed β, with α on the axes. (Colors as in Fig. 2.)
∈
[0, 40] and s
[0, 1]
∈
Proof. Given a permutation π mapping [n] to [n], we let G1 to π, so that (i, j) is an edge in G1
∨ edge in G2. In the special case where π = π
G consisting of edges that are in either G1 or G′2. It is readily seen that
π G2 be the union graph with respect
π G2 if and only if (i, j) is an edge in G1 or (π(i), π(j)) is an
π∗ G2 is the subgraph of the parent graph
, H
∗
:= G1
∨
∨
∗ (cid:18)
H
∗ ∼
SBM n, α(1 (1
−
− s)2) log n n
, β(1 (1
−
− s)2) (cid:19)
. log n n (3.4)
The algorithm we study first computes (cid:98)π(G1, G2) according to Theorem 3.1. We then pick any community recovery algorithm that is known to succeed until the information-theoretic limit, and run it on (cid:98)H := G1
∨(cid:98)π G2; we denote the result of this algorithm by (cid:98)σ( (cid:98)H). We can then write
)
= 1)
) + P( (cid:98)H (cid:98)H = H
P(ov((cid:98)σ( (cid:98)H), σ)
= H
∗
P(
{
P(ov((cid:98)σ(H ov((cid:98)σ( (cid:98)H), σ)
), σ)
∗
≤
≤
= 1
} ∩ {
= 1) + P((cid:98)π
∗}
= π⋆), where, to obtain the inequality in the second line, we have used that (cid:98)σ( (cid:98)H) = (cid:98)σ(H
∗
= π (cid:98)H = H
= H
{ when (3.3) holds [2, 45, 3, 1], we know that P(ov((cid:98)σ(H
∗
Theorem 3.1 we also have that P((cid:98)π
. Since exact community recovery on H
= 1)
∗ 0 when s2(α + β)/2 > 1, concluding the proof.
) on the event is possible
∗
. In light of
→ ∞
, and that (cid:98)H implies (cid:98)π 0 as n
), σ)
= π
→
∗}
)
∗
∗
→
By the discussion in Section 2, Theorem 3.3 establishes the existence of a region of the parameter space where (i) there exists an algorithm that can exactly recover the communities using both G1 and
G2, but (ii) it is information-theoretically impossible to do so using G1 (or G2) alone. Figures 2, 3, and 4 illustrate phase diagrams of the parameter space, where this region is highlighted in cyan.
To complement the achievability result of Theorem 3.3, our next result provides a condition under which exact community recovery is information-theoretically impossible. 6
̸
̸
̸
̸
̸
̸
̸
̸
̸
(a) Fixed α/β = 2. (b) Fixed α/β = 4. (c) Fixed α/β = 6.
Figure 4: Phase diagrams for exact community recovery for fixed α/β, with α on the axes. (Colors as in Fig. 2.)
∈
[0, 40] and s
[0, 1]
∈
Theorem 3.4. Fix constants α, β > 0 and s and suppose that
∈ 1
Then for any estimator (cid:101)σ = (cid:101)σ(G1, G2), we have that
− (cid:115) (cid:12) (cid:12) (cid:12)√α (cid:112) (cid:12) (cid:12) (cid:12) <
β
[0, 1]. Let (G1, G2) (cid:16)
CSBM
∼ n, α log n n , β log n (cid:17) n , s 2 (1
− lim n
→∞ s)2 .
−
P(ov((cid:101)σ, σ) = 1) = 0. (3.5)
The idea behind the proof is a simulation argument. Recall H
∗
Theorem 3.3, and note that H
From H (G1, G2), then it is also possible given H recovery is not possible from H full proof.
π∗ G2 from the proof of s)2) log(n)/n(cid:1).
− it is possible to simulate (G1, G2), and so if exact community recovery is possible given
. However, it is known [2, 45, 3, 1] that exact community if (3.5) holds. See Section D in the Supplementary Material for the
∨ s)2) log(n)/n, β(1
SBM (cid:0)n, α(1
:= G1
∗ ∼ (1 (1
−
−
−
∗
∗
∗
We remark that Theorem 3.4 provides a partial converse to the achievability result in Theorem 3.3: it is tight when s2(α + β)/2 > 1, but the precise information-theoretic threshold is unknown when s2(α + β)/2 < 1, which is the regime where exact graph matching fails. This leads to an interesting follow-up question: is exact graph matching necessary for the exact recovery of communities? We conjecture that it is not, which is formalized as follows.
Conjecture 3.5. There exists ϵ = ϵ(α, β, s) > 0 such that if (3.3) holds and then there is an estimator (cid:98)σ = (cid:98)σ(G1, G2) such that s2 (cid:19) (cid:18) α + β 2 1
≥
ϵ,
−
P(ov((cid:98)σ, σ) = 1) = 1. lim n
→∞ (3.6)
In words, we believe that the communities can be exactly recovered even in regimes where exact graph matching is information-theoretically impossible. We outline a possible way to prove this conjecture. The algorithm we shall use is the same one used in the proof of Theorem 3.3: we compute (cid:98)π, the permutation which maximizes the number of agreeing edges across G1 and G2, and then run an optimal community recovery algorithm on the union graph (cid:98)H = G1
∨(cid:98)π G2. Define the
. When s2(α + β)/2 < 1, we have that correctly-matched region
[n] : (cid:98)π(i) = π
}
∗ o(1))n; that is, (cid:98)π coincides with
= [n] with high probability. However, we expect that
= (1
C ̸
|C| on all but a negligible fraction of vertices (which is known as almost exact recovery). This is the
π
∗ case in correlated Erd˝os-Rényi graphs [18, 61], so we expect it to hold for correlated SBMs as well.
Let (cid:98)H have been correctly matched, we expect that (possibly in an approximate sense) (cid:18) be the subgraph of (cid:98)H restricted to the vertices in
. Since all vertices in i
{ (i)
:=
− (cid:19)
∈
C
C
C
C s)2) log n n
, β(1 (1 s)2) log n n
. (3.7)
−
|C|
C ∼
− can be exactly recovered. For vertices
In particular, if (3.3) holds, the communities of vertices in
, which will have correct community not in labels. If α > β, then the true community label of a given vertex is the same as the true label of most neighbors with high probability (when α < β, the reverse is true) [2], hence the community labels of vertices not in
C
, note that most of the neighbors will be elements of can be correctly identified using a majority vote.
−
−
C
C (cid:98)H
SBM
, α(1 (1
C 7
Making the arguments above formal is a challenging task. For one, though we may expect (3.7) is a fixed set, it is in fact a random set depending on G1, G2, and π to hold if
, so formally proving (3.7) requires a careful analysis. Moreover, we would like to use (3.7) to argue that running a community recovery algorithm on (cid:98)H (rather than (cid:98)H
.
C
Rigorously justifying these points requires significant effort, so we leave it to future work.
) perfectly recovers the communities in
C
C
∗ 3.3 Multiple correlated stochastic block models
We next describe our results on how one can recover communities using K correlated stochastic block models, again using graph matching as a subroutine. Considering more than two networks is more and more important in many applications, for instance in computational biology, where the increasing number of species for which protein-protein interaction networks are available can be leveraged for more powerful comparative studies [59, 34].
∼
∼
CSBM(n, p, q, s, K) as follows. First, generate a parent
SBM(n, p, q), and let σ denote the community labels. Next, given G, we construct G1 as
, . . . , πK
∗
K,
Formally, we construct (G1, . . . , GK) graph G well as G′2, . . . , G′K by independently subsampling G with probability s. Finally, we let π2
∗ be i.i.d. uniformly random permutations of [n], independent of everything else, and for 2
≤ we generate Gk by relabeling the vertices of G′k according to πk
∗
As in the case of two correlated graphs, the achievability and impossibility results depend on the structure of the union graph with respect to the true permutations π2
∗
, β log n n
, . . . , πK
∗
, s, K (G1, . . . , GK)
Suppose that n, α log n n
CSBM
. (cid:17)
≤ (cid:16) k
.
.
Theorem 3.6. Let s2 (α + β) /2 > 1 and (3.8)
∼
√α
|
− (cid:112)
β
>
| (cid:115) 1
− 2 (1 s)K .
− lim n
→∞
Then there is an estimator (cid:98)σ = (cid:98)σ(G1, . . . , GK) such that
P(ov((cid:98)σ, σ) = 1) = 1.
Analogously to Theorem 3.3, Theorem 3.6 establishes the existence of a region of the parameter space where (i) there exists an algorithm that can exactly recover the communities using all of
G1, G2, . . . , GK, but (ii) it is information-theoretically impossible to do so using only a strict subset of G1, G2, . . . , GK.
Our next result establishes an impossibility result which is analogous to Theorem 3.4.
Theorem 3.7. Let (G1, . . . , GK)
CSBM
∼ (cid:16) n, α log n n , β log n n , s, K (cid:17) and suppose that (3.9)
√α
|
− (cid:112)
β
<
| (cid:115) 1
− 2 (1 s)K .
−
P(ov((cid:101)σ, σ) = 1) = 0. lim n
→∞
Then for any estimator (cid:101)σ = (cid:101)σ(G1, G2), we have that
We highlight a few interesting aspects of Theorems 3.6 and 3.7. As in the two-graph case, Theorem 3.7 provides a partial converse to the achievability result in Theorem 3.6: it is tight in the regime s2(α + β)/2 > 1, but the correct threshold remains unknown when s2(α + β)/2 < 1. Additionally, as K increases, the achievability and impossibility conditions in (3.8) and (3.9) converge to the
< √2, which are the information-theoretic conditions conditions for achievability and impossibility of community recovery in the parent graph G. In words, the more correlated graphs we observe, the less information is lost when generating the observed graphs from the parent graph via the sampling process.
> √2 and
√α
|
√α
|
√β
√β
−
−
|
| 4