Abstract
Sharing forecasts of network timeseries data, such as cellular or electricity load pat-terns, can improve independent control applications ranging from trafﬁc scheduling to power generation. Typically, forecasts are designed without knowledge of a downstream controller’s task objective, and thus simply optimize for mean pre-diction error. However, such task-agnostic representations are often too large to stream over a communication network and do not emphasize salient temporal features for cooperative control. This paper presents a solution to learn succinct, highly-compressed forecasts that are co-designed with a modular controller’s task objective. Our simulations with real cellular, Internet-of-Things (IoT), and electric-ity load data show we can improve a model predictive controller’s performance by at least 25% while transmitting 80% less data than the competing method. Further, we present theoretical compression results for a networked variant of the classical linear quadratic regulator (LQR) control problem. 1

Introduction
Cellular network and power grid operators measure rich timeseries data, such as city-wide mobility and electricity demand patterns. Sharing such data with external entities, such as a taxi ﬂeet operator, can enhance a host of societal-scale control tasks, ranging from taxi routing to battery storage optimization. However, how should timeseries owners represent their data to limit the scope and volume of information shared across a data boundary, such as a congested wireless network?1
At a ﬁrst glance, it might seem sufﬁcient to simply share generic demand forecasts with any down-stream controller. Each controller, however, often has a unique cost function and context-speciﬁc sensitivity to prediction errors. For example, cell demand forecasts should emphasize accurate peak-hour forecasts for taxi ﬂeet routing. The same underlying cellular data should instead emphasize
ﬁne-grained throughput forecasts when a video streaming controller starts a download. Despite the beneﬁts of customizing forecasts for control, today’s forecasts are mostly task-agnostic and simply optimize for mean or median prediction error. As such, they often waste valuable network bandwidth to transmit temporal features that are unnecessary for a downstream controller. Even worse, they might not minimize errors when they matter most, such as peak-hour variability.
Given the limitations of today’s task-agnostic forecasts, this paper contributes a novel problem formulation for learning task-driven forecasts for networked control. In our general problem (Fig. 1Uber processes petabytes of data per day [1] and a mobile operator can process 60 TB of daily cell metrics
[2]. Even a fraction of such data is hard to send. 35th Conference on Neural Information Processing Systems (NeurIPS 2021).
1), an operator measures timeseries st, such as electricity or cell demand, and transmits compressed representation φt, which is decoded to ˆst at the controller. Rather than simply minimize the prediction error for ˆst, we instead learn a representation that minimizes a modular controller π’s ultimate cost J.
Our key technical insight is to compute a controller’s sensitivity to prediction errors, which in turn guides how we co-design and learn a concise forecast representation that is tailored to control. As such, our scheme jointly integrates data-driven forecasting, compression, and model-based control.