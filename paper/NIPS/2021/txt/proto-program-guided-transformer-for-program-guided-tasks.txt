Abstract
Programs, consisting of semantic and structural information, play an important role in the communication between humans and agents. Towards learning general program executors to unify perception, reasoning, and decision making, we for-mulate program-guided tasks which require learning to execute a given program on the observed task speciﬁcation. Furthermore, we propose Program-Guided
Transformer (ProTo), which integrates both semantic and structural guidance of a program by leveraging cross-attention and masked self-attention to pass messages between the speciﬁcation and routines in the program. ProTo executes a program in a learned latent space and enjoys stronger representation ability than previous neural-symbolic approaches. We demonstrate that ProTo signiﬁcantly outperforms the previous state-of-the-art methods on GQA visual reasoning and 2D Minecraft policy learning datasets. Additionally, ProTo demonstrates better generalization to unseen, complex, and human-written programs. 1

Introduction
Programs are the natural interface for the communication between machines and humans [11].
In comparison to instructing machines via demonstrations [41, 52, 73, 6] or via natural language
[14, 32, 3], guiding agents by programs has multiple beneﬁts. First, programs are explicit and much cleaner than other instructions such as languages [81]. Second, programs are structured with loops and branches [1] so they can express complex reasoning processes [99]. Finally, programs are compositional, promoting the generalization and scalability of neural models [15, 64, 20]. However, while program synthesis and program induction have been deeply explored [12, 17, 18, 22, 39, 49], very few works focuses on learning to follow program guidance [81, 71]. Furthermore, previous work designs ad-hoc program executors for different functions in different tasks [81, 29, 23], which hinders the generalization and scalability of developed models.
To pursue general program executors to unify perception, reasoning, and decision making, we formulate program-guided tasks, which require the agent to follow the given program to perform tasks conditioned on task speciﬁcations. The programs may come from a program synthesis model
[99] or be written by human [81]. Two exemplar tasks are shown in Figure 1. Program-guided tasks are challenging because the agent needs to jointly follow the complex structure of the program [1], perceive the speciﬁcation, and ground the program semantics on the speciﬁcation [40].
Inspired by the recent signiﬁcant advance of transformers in diverse domains [24, 25, 59], we present the Program-guided Transformer (ProTo) for general program-guided tasks. ProTo combines the 35th Conference on Neural Information Processing Systems (NeurIPS 2021).
Figure 1: Illustration of two exemplar program-guided tasks. The ﬁrst task is program-guided visual reasoning [47], where the model needs to learn to execute a visual program on the speciﬁcation (image) to get a predicted answer. The second task is program-guided policy learning [81], where the agent learns a policy to perform tasks based on the observed speciﬁcation following the program guidance. strong representation ability of transformers with symbolic program control ﬂow. We propose to separately leverage the program semantics and the explicit structure of the given program via efﬁcient attention mechanisms. ProTo enjoys strong representation ability by executing the program in a learned latent space. In addition, ProTo can either learn from reward signals [64, 81] or from dense execution supervision [15].
We evaluate ProTo on two tasks, program-guided visual reasoning and program-guided policy learning (corresponding to Figure 1 left and Figure 1 right). The former task requires the model to learn to reason over a given image following program guidance. We experiment on the GQA dataset [47] where the programs are translated from natural language questions via a trained program synthesis model. The evaluation on the public test server shows that we outperform the previous state-of-the-art program-based method by 4.31% in terms of accuracy. Our generalization experiments show that
ProTo is capable of following human program guidance. The latter task asks the agent to learn a multi-task policy to interact with the environment according to the program. We experiment on a 2D Minecraft environment [81] where the programs are randomly sampled from the domain-speciﬁc language (DSL). We ﬁnd that ProTo has a stronger ability to scale to long and complex programs than previous methods. ProTo signiﬁcantly outperforms the vanilla transformer [87] which does not explicitly leverage the structural guidance of the program. We will release the code and pre-trained models after publishing.
In summary, our contributions are threefold. First, we formulate and highlight program-guided tasks, which are generalized from program-guided visual reasoning [99, 64] and program-guided policy learning [81]. Second, we propose the program-guided transformer for program-guided tasks. Third, we conduct extensive experiments on two domains and show promising results towards solving program-guided tasks. 2