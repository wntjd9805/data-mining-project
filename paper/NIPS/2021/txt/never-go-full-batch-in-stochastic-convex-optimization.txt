Abstract
We study the generalization performance of full-batch optimization algorithms for stochastic convex optimization: these are ﬁrst-order methods that only access the exact gradient of the empirical risk (rather than gradients with respect to individual data points), that include a wide range of algorithms such as gradient descent, mirror descent, and their regularized and/or accelerated variants. We provide a new separation result showing that, while algorithms such as stochastic gradient descent can generalize and optimize the population risk to within ε after
𝑂 (1/ε2) iterations, full-batch methods either need at least Ω(1/ε4) iterations or exhibit a dimension-dependent sample complexity. 1

Introduction
Stochastic Convex Optimization (SCO) is a fundamental problem that received considerable attention from the machine learning community in recent years [28, 15, 4, 11, 2]. In this problem, we assume a learner that is provided with a ﬁnite sample of convex functions drawn i.i.d. from an unknown distribution. The learner’s goal is to minimize the expected function. Owing to its simplicity, it serves as an almost ideal theoretical model for studying generalization properties of optimization algorithms ubiquitous in practice, particularly ﬁrst-order methods which utilize only ﬁrst derivatives of the loss rather than higher-order ones.
One prominent approach for SCO—and learning more broadly—is to consider the empirical risk (the average objective over the sample) and apply a ﬁrst-order optimization algorithm to minimize it.
The problem of learning is then decoupled into controlling the optimization error over the empirical risk (training error) and bounding the diﬀerence between the empirical error and the expected error (generalization error).
In convex optimization, the convergence of diﬀerent ﬁrst-order methods has been researched exten-sively for many years (e.g., [26, 25, 5]), and we currently have a very good understanding of this setting in terms of upper as well lower bounds on worst-case complexity. However, in SCO where the generalization error must also be taken into account, our understanding is still lacking. In fact, this is one of the few theoretical learning models where the optimization method aﬀects not only the optimization error but also the generalization error (distinctively from models such as PAC learning and generalized linear models). In particular, it has been shown [28, 15] that some minima of the empirical risk may obtain large generalization error, while other minima have a vanishingly small 35th Conference on Neural Information Processing Systems (NeurIPS 2021).
generalization error. To put diﬀerently, learning in SCO is not only a question of minimizing the empirical risk, but also a question of how one minimizes it. However, the results of [28, 15] leave open the question of whether concrete optimization also have diﬀerent generalization properties.
Towards better understanding, Amir et al. [2] recently studied the generalization properties of full-batch gradient descent (GD), where each step is taken with respect to the gradient of the empirical risk. For GD (and a regularized variant thereof), they gave a lower bound on the generalization error as a function of iteration number, which is strictly larger than the well-known optimal rate obtained by stochastic gradient descent (SGD), where each step is taken with respect to the gradient at a sampled example. Notably, the lower bound of [2] precisely matches the dimension-independent stability-based upper bound recently shown for full-batch GD by Bassily et al. [4]. The separation between full-batch GD and SGD is the ﬁrst evidence that not only abstract Empirical Risk Minimizers may fail to generalize in SCO, but in fact also basic methods such as GD could be prone to such overﬁtting. A natural question is, then, whether overﬁtting is inherent to full-batch algorithms, that minimize the objective only through access to the exact empirical risk, or whether this suboptimality can be remedied by adding regularization, noise, smoothing, or any other mechanism for improving the generalization of GD.
In this work we present and analyze a model of full-batch optimization algorithms for SCO. Namely, we focus on algorithms that access the empirical risk only via a ﬁrst-order oracle that computes the exact (full-batch) gradient of the empirical loss, rather than directly accessing gradients with respect to individual samples. Our main result provides a negative answer to the question above by signiﬁcantly generalizing and extending the result of Amir et al. [2]: we show that any optimization method that uses full-batch gradients needs at least Ω(1/ε4) iterations to minimize the expected loss to within ε error. This is in contrast with the empirical loss, which can be minimized with only
𝑂 (1/ε2) steps.
Comparing SGD and GD in terms of the sample size 𝑛, we see that SGD converges to an optimal generalization error of 𝑂 (1/
𝑛) after 𝑂 (𝑛) iterations, whereas a full-batch method must perform
𝑛) test error. We emphasize that we account here for the
Ω(𝑛2) iterations to achieve the same 𝑂 (1/ oracle complexity, which coincides with the iteration complexity in the case of gradient methods. In terms of individual gradients calculations, while SGD uses at most 𝑂 (𝑛) gradient calculations (one sample per iteration), a full-batch method will perform Ω(𝑛3) calculations (𝑛 samples per iteration).
√
√
The above result is applicable to a wide family of full-batch learning algorithms: regularized GD (with any data-independent regularization function), noisy GD, GD with line-search or adaptive step sizes, GD with momentum, proximal methods, coordinate methods, and many more. Taken together with upper bound of Bassily et al. [4], we obtain a sharp rate of Θ(1/ε4) for the generalization-complexity of full-batch methods. Surprisingly, this rate is achieved by standard GD (with an unusual step-size choice of η = Θ(ε3)), and it cannot be improved by adding regularization of any sort, nor by adding noise or any other form of implicit/explicit bias. 1.1