Abstract
The bandit problem with graph feedback, proposed in [Mannor and Shamir,
NeurIPS 2011], is modeled by a directed graph G = (V, E) where V is the collection of bandit arms, and once an arm is triggered, all its incident arms are observed. A fundamental question is how the structure of the graph affects the min-max regret. We propose the notions of the fractional weak domination number
δ∗ and the k-packing independence number capturing upper bound and lower bound for the regret respectively. We show that the two notions are inherently connected via aligning them with the linear program of the weakly dominating set and its dual — the fractional vertex packing set respectively. Based on this connection, we utilize the strong duality theorem to prove a general regret upper bound O where α is the and a lower bound Ω integrality gap of the dual linear program. Therefore, our bounds are tight up to 1 a (log |V |) 3 factor on graphs with bounded integrality gap for the vertex packing problem including trees and graphs with bounded degree. Moreover, we show that 1 for several special families of graphs, we can get rid of the (log |V |) 3 factor and establish optimal regret. (δ∗ log |V |) (δ∗/α) 3 T 2 3 T 2 (cid:17) (cid:17) (cid:16) (cid:16) 3 1 1 3 1

Introduction
The multi-armed bandit is an extensively studied problem in reinforcement learning. Imagining a player facing an n-armed bandit, each time the player pulls one of the n arms and incurs a loss. At the end of each round, the player receives some feedback and tries to make a better choice in the next round. The expected regret is deﬁned by the difference between the player’s cumulative losses and cumulative losses of the single best arm during T rounds. In this article, we assume the loss at each round is given in an adversarial fashion. This is called the adversarial bandit in the literature. The difﬁculty of the adversarial bandit problem is usually measured by the min-max regret which is the expected regret of the best strategy against the worst possible loss sequence.
Player’s strategy depends on how the feedback is given at each round. One simple type of feedback is called full feedback where the player can observe all arm’s losses after playing an arm. An important problem studied in this model is online learning with experts [14, 17]. Another extreme, introduced in [8], is the vanilla bandit feedback where the player can only observe the loss of the arm he/she just pulled. Optimal bounds for the regret, either in n or in T , are known for both types of feedback.
The work of [24] initialized the study on the generalization of the above two extremes, that is, the feedback consists of the losses of a collection of arms. This type of feedback can be naturally described by a feedback graph G where the vertex set is [n] and a directed edge (i, j) means pulling 35th Conference on Neural Information Processing Systems (NeurIPS 2021).
the arm i can observe the loss of arm j. Therefore, the “full feedback” means that G is a clique with self-loops, and the “vanilla bandit feedback” means that G consists of n disjoint self-loops.
A natural yet challenging question is how the graph structure affects the min-max regret. The work of [1] systematically investigated the question and proved tight regret bounds in terms of the time horizon T . They show that, if the graph is “strongly observable”, the regret is Θ(T 1 2 ); if the graph is “weakly observable”, the regret is Θ(T 2 3 ); and if the graph is “non-observable”, the regret is
Θ(T ). Here the notions of “strongly observable”, “weakly observable” and “non-observable” roughly indicate the connectivity of the feedback graph and will be formally deﬁned in Section 2. However, unlike the case of “full feedback” or “vanilla bandit feedback”, the dependency of the regret on n, or more generally on the structure of the graph, is still not well understood. For example, for “weakly observable” graphs, an upper bound and a lower bound of the regret in terms of the weak domination number δ(G) were proved in [1], but a large gap exists between the two. This suggests that the weak domination number might not be the correct parameter to characterize the regret.
We make progress on this problem for “weakly observable” graphs. This family of graphs is general enough to encode almost all feedback patterns of bandits. We introduce the notions of the fractional weak domination number δ∗(G), the k-packing independence number and provide evidence to show that they are the correct graph parameters. The two parameters are closely related and help us to improve the upper bound and lower bound respectively. As the name indicated, δ∗(G) is the fractional version of δ(G), namely the optimum of the linear relaxation of the integer program for the weakly dominating set. We observe that this graph parameter has already been used in an algorithm for “strongly observable” graphs in [3], where it functioned differently. In the following, when the algorithm is clear from the context, we use R(G, T ) to denote the regret of the algorithm on the instance G in T rounds. Our main algorithmic result is:
Theorem 1. There exists an algorithm such that for any weakly observable graph, any time horizon
T ≥ n3 log(n)/δ∗2(G), its regret satisﬁes R(G, T ) = O (δ∗(G) log n) 3 T 2 (cid:17) (cid:16)
. 3 1
Note that the regret of the algorithm in [1] satisﬁes R(G, T ) = O
. The frac-tional weak domination number δ∗ is always no larger than δ, and the gaps between the two can be as large as Θ(log n). We will give an explicit example in Section 4.3 in which the gap matters and our algorithm is optimal. Theorem 1 can be seamlessly extended to more general time-varying graphs and probabilistic graphs. The formal deﬁnitions of these models are in Appendix E. (δ(G) log n) (cid:16) (cid:17) 1 3 T 2 3
On the other hand, we investigate graph structures that can be used to fool algorithms. We say a set S of vertices is a k-packing independent set if S is an independent set and any vertex has at most k out-neighbors in S. We prove the following lower bound:
Theorem 2. Let G = (V, E) be a directed graph. If G contains a k-packing independent set S with
|S| ≥ 2, then for any randomized algorithm and any time horizon T , there exists a sequence of loss functions such that the expected regret is Ω max (cid:18) (cid:110) |S| k , log |S| (cid:111) 1 3
· T 2 3 (cid:19)
.
For every k ∈ N, we use ζk, the k-packing independence number, to denote the size of the maximum k-packing independent set. To prove Theorem 2, we reduce the problem of minimizing regret to statistical hypothesis testing for which powerful tools from information theory can help.
We can use Theorem 2 to strengthen lower bounds in [1]. Besides, we show that large δ∗ usually implies large ζ1 via studying the linear programming dual of fractional weakly dominating sets and applying a novel rounding procedure. This is also one of our main technical contributions.
Combinatorially, the dual linear program is to ﬁnd the maximum fractional vertex packing set in the graph. Speciﬁcally, we can establish lower bounds in terms of δ∗ by applying Theorem 2:
Theorem 3. If G is weakly observable, then for any algorithm and any sufﬁciently large time horizon
T ∈ N, there exists a sequence of loss functions such that R(G, T ) = Ω
, where α (cid:18)(cid:16) δ∗
· T 2 (cid:17)1/3 (cid:19) 3
α is the integrality gap of the linear program for vertex packing.
Clearly the exact lower bound is determined by the integrality gap of a certain linear program. In general graphs, we have a universal upper bound α = O (n/δ∗). For concrete instances, we can 2
obtain clearer and tighter bounds on α. For example, the linear program has a constant integrality gap α on graphs of bounded degree.
Corollary 4. Let ∆ ∈ N be a constant and G∆ be the family of graphs with maximum in-degree ∆.
Then for every weakly observable G = (V, E) ∈ G∆, any algorithm and any sufﬁciently large time horizon T ∈ N, there exists a sequence of loss functions such that R(G, T ) = Ω((δ∗) 1 3 · T 2 3 ).
We also show that for 1-degenerate directed graphs (formally deﬁned in Section 2.1), the integrality gap is 1. This family of graphs includes trees and directed cycles. As a consequence, we have
Corollary 5. Let G be a 1-degenerate weakly observable graph. Then for any algorithm and any sufﬁciently large time horizon T ∈ N, there exists a sequence of loss functions such that
R(G, T ) = Ω((δ∗) 1 3 · T 2 3 ).
Comparison of previous results and our results
In Table 1, we compare our new upper bounds, lower bounds and their gap with previous best results.
Graph Type
General graphs
O
Ω (cid:16) (cid:16)
Trees /
Bounded in-degree
Complete bipartite graphs
Orthogonal relation on Fk 2
Table 1: A comparison of results
Previous best results [1]
This work
Min-max regret
Gap (cid:17) (δ log n) 1 max (cid:8)( 3 · T 2 log2 n ) 1
δ 3 3 , 1(cid:9) · T 2 3 (cid:17)
See discussion below
O
Ω
Min-max regret (cid:17) (δ∗ log n) 1 max (cid:8)( δ∗
α ) 1 3 · T 2 3 , 1(cid:9) · T 2 3 3 (cid:16) (cid:16) for δ = log2 n: Ω (cid:17) (cid:16)
T 2 3
O (log n)
Same as general graphs
O (log n) (cid:17) for δ = log2 n: (cid:16) 3
Ω log log n · T 2
O (cid:0)(δ∗ log n)1/3 · T 2/3(cid:1)
Ω (cid:0)(δ∗)1/3 · T 2/3(cid:1)
Gap (cid:17)
See discussion below (cid:16) log n log log n (cid:17)
O (cid:16) (log n)1/3(cid:17)
O
O (cid:0)(log n)1/3 · T 2/3(cid:1)
Ω (cid:0)T 2/3(cid:1)
O (cid:0)(log n)2/3 · T 2/3(cid:1)
Ω (cid:0)T 2/3(cid:1) (cid:16) (cid:16)
O
O (log n) (log n) (cid:17) 1 3 (cid:17) 2 3
Θ (cid:0)(log n)1/3 · T 2/3(cid:1)
Θ (cid:0)(log n)1/3 · T 2/3(cid:1)
O (1)
O (1)
Discussion. In general, our upper bound is never worse than the previous one since δ∗ ≤ δ. Our lower bound is not directly comparable to the previously known lower bound as they are stated in terms of different parameters. In fact, we can not ﬁnd an instance such that our lower bound
Ω(max{1, (δ∗/α)1/3}) is worse than the previous lower bound Ω(max{1, (δ/(log n)2)1/3}) and there are instances on which our bound outperforms. The two key quantities, namely the integrality gap δ
δ∗ of the primal linear programming and the integrality gap α of the dual linear programming, seem to be correlated in a graph. The relation between the two bounds is worth further investigation.