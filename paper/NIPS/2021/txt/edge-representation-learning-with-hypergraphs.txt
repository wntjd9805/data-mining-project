Abstract
Graph neural networks have recently achieved remarkable success in representing graph-structured data, with rapid progress in both the node embedding and graph pooling methods. Yet, they mostly focus on capturing information from the nodes considering their connectivity, and not much work has been done in representing the edges, which are essential components of a graph. However, for tasks such as graph reconstruction and generation, as well as graph classiﬁcation tasks for which the edges are important for discrimination, accurately representing edges of a given graph is crucial to the success of the graph representation learning.
To this end, we propose a novel edge representation learning framework based on Dual Hypergraph Transformation (DHT), which transforms the edges of a graph into the nodes of a hypergraph. This dual hypergraph construction allows us to apply message-passing techniques for node representations to edges. After obtaining edge representations from the hypergraphs, we then cluster or drop edges to obtain holistic graph-level edge representations. We validate our edge representation learning method with hypergraphs on diverse graph datasets for graph representation and generation performance, on which our method largely outperforms existing graph representation learning methods. Moreover, our edge representation learning and pooling method also largely outperforms state-of-the-art graph pooling methods on graph classiﬁcation, not only because of its accurate edge representation learning, but also due to its lossless compression of the nodes and removal of irrelevant edges for effective message-passing.1 1

Introduction
The recent demand in representing graph-structured data, such as molecular, social, and knowledge graphs, has brought remarkable progress in the Graph Neural Networks (GNNs) [44, 37]. Early works on GNNs [23, 15, 39] aim to accurately represent each node to reﬂect the graph topology, by transforming, propagating, and aggregating information from their neighborhoods based on message-passing schemes [12]. More recent works focus on learning holistic graph-level representations, by proposing graph pooling techniques that condense the node-level representations into a smaller graph or a single vector. While such state-of-the-art node embedding or graph pooling methods have achieved impressive performances on graph-related tasks (e.g., node classiﬁcation and graph classiﬁcation), they have largely overlooked the edges, which are essential components of a graph.
Most existing GNNs, including ones that consider categorical edge features [32, 12], only implicitly capture the edge information in the learned node/graph representations when updating them. While a
∗Equal contribution 1Code is available at https://github.com/harryjo97/EHGNN 35th Conference on Neural Information Processing Systems (NeurIPS 2021).
Figure 1: (Left): The two molecular graphs2 have the identical set of nodes, but possess completely different properties due to the difference in edges. (Right): An illustration of the proposed edge representation learning framework with two novel edge pooling schemes. The grey box in the center describes the proposed Dual
Hypergraph Transformation, where the numbers (letters) denote the corresponding edges (nodes) in the graph and nodes (hyperedges) in the hypergraph. The two blue boxes in the right illustrate the proposed edge pooling methods, HyperCluster which clusters similar edges, and HyperDrop which drops unnecessary edges. few of them aim to obtain explicit representations for edges [20, 13, 40], they mostly use them only to augment the node-level representations, and thus suboptimally capture the edge information. This is partly because many benchmark tasks for GNN performance evaluation, such as graph classiﬁcation, do not require the edge information to be accurately preserved. Thus, on this classiﬁcation task, simple
MLPs without any connectivity information can sometimes outperform GNNs [9, 18]. However, for tasks such as graph reconstruction and generation, accurately representing the edges of a graph is crucial to success, as incorrectly reconstructing/generating edges may result in complete failure of the tasks. For example, the two molecules (a) and (b) in Figure 1 have exactly the same set of nodes and are only different in their edges (bond types), but exhibit extremely different properties.
To overcome such limitations of existing GNN methods in edge representation learning, we propose a simple yet effective scheme to represent the edges. The main challenge of handling edges is the absence or suboptimality of the message-passing scheme for edges. We tackle this challenge by representing the edges as nodes in a hypergraph, which is a generalization of a graph that can model higher-order interactions among nodes as one hyperedge can connect an arbitrary number of nodes. Speciﬁcally, we propose Dual Hypergraph Transformation (DHT) to transform edges of the original graph to nodes of a hypergraph (Figure 1), and nodes to hyperedges. This hypergraph-based approach is effective since it allows us to apply any off-the-shelf message-passing schemes designed for node-level representation learning, for learning the representation of the edges of a graph.
However, representing each edge well alone is insufﬁcient in obtaining an accurate representation of the entire graph. Thus we propose two novel graph pooling methods for the hypergraph to obtain compact graph-level edge representations, namely HyperCluster and HyperDrop. Speciﬁcally, for obtaining global edge representations for an entire graph, HyperCluster coarsens similar edges into a single edge under the global graph pooling scheme (see HyperCluster in Figure 1). On the other hand, HyperDrop drops unnecessary edges from the original graph by calculating pruning scores on the hypergraph (see HyperDrop in Figure 1). HyperCluster is more useful for graph reconstruction and generation as it does not result in the removal of any edges, while HyperDrop is more useful for classiﬁcation as it learns to remove edges that are less useful for graph discrimination.
We ﬁrst experimentally validate the effectiveness of the DHT with HyperCluster, on the reconstruction of synthetic and molecular graphs. Our method obtains extremely high performance on these tasks, largely outperforming baselines, which shows its effectiveness in accurately representing the edges. Then, we validate our method on molecular graph generation tasks, and show that it largely outperforms base generation methods, as it allows us to generate molecules with more correct bonds (edges). Further, we validate HyperDrop on 10 benchmark datasets for graph classiﬁcation, on which
HyperDrop outperforms all hierarchical pooling baselines, with larger gains on social graphs, for which the edge features are important. Our main contributions are summarized as follows:
• We introduce a novel edge representation learning scheme using Dual Hypergraph Transforma-tion, which exploits the dual hypergraph whose nodes are edges of the original graph, on which we can apply off-the-shelf message-passing schemes designed for node-level representation learning.
• We propose novel edge pooling methods for graph-level representation learning, namely Hyper-Cluster and HyperDrop, to overcome the limitations of existing node-based pooling methods.
• We validate our methods on graph reconstruction, generation, and classiﬁcation tasks, on which they largely outperform existing graph representation learning methods. 2We depict only the heavy atoms, as conventional preprocessing of molecular graphs drops hydrogen atoms. 2
2