We consider an online prediction problem in the context of network caching.Assume that multiple users are connected to several caches via a bipartite network.At any time slot, each user may request an arbitrary ﬁle chosen from a large catalog.A user’s request at a slot is met if the requested ﬁle is cached in at least one of the caches connected to the user. Our objective is to predict, prefetch, and optimally distribute the ﬁles on the caches at each slot to maximize the total number of cache hits. The problem is non-trivial due to the non-convex and non-smooth nature of the objective function. In this paper, we propose LeadCache - an efﬁcient online caching policy based on the Follow-the-Perturbed-Leader paradigm. We show thatLeadCache is regret-optimal up to a factor of ˜O(n3/8), where n is the number of users. We design two efﬁcient implementations of the LeadCache policy, one based on Pipage rounding and the other based on Madow’s sampling, each of which makes precisely one call to an LP-solver per iteration. Furthermore, with aStrong-Law-type assumption, we show that the total number of ﬁle fetches underLeadCache remains almost surely ﬁnite over an inﬁnite horizon. Finally, we derive an approximately tight regret lower bound using results from graph coloring. We conclude that the learning-based LeadCache policy decisively outperforms the state-of-the-art caching policies both theoretically and empirically. 