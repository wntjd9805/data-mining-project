Matrix trace estimation is ubiquitous in machine learning applications and has tra-ditionally relied on Hutchinson’s method, which requires O(log(1/δ)/(cid:15)2) matrix-vector product queries to achieve a (1 ± (cid:15))-multiplicative approximation to tr(A) with failure probability δ on positive-semideﬁnite input matrices A. Recently, theHutch++ algorithm was proposed, which reduces the number of matrix-vector queries from O(1/(cid:15)2) to the optimal O(1/(cid:15)), and the algorithm succeeds with constant probability. However, in the high probability setting, the non-adaptiveHutch++ algorithm suffers an extra O((cid:112)log(1/δ)) multiplicative factor in its query complexity. Non-adaptive methods are important, as they correspond to sketching algorithms, which are mergeable, highly parallelizable, and provide low-memory streaming algorithms as well as low-communication distributed protocols. In this work, we close the gap between non-adaptive and adaptive algorithms, showing that even non-adaptive algorithms can achieve O((cid:112)log(1/δ)/(cid:15) + log(1/δ)) matrix-vector products. In addition, we prove matching lower bounds demonstrating that, up to a log log(1/δ) factor, no further improvement in the dependence on δ or (cid:15) is possible by any non-adaptive algorithm. Finally, our experiments demonstrate the superior performance of our sketch over the adaptive Hutch++ algorithm, which is less parallelizable, as well as over the non-adaptive Hutchinson’s method. 