Verification is a major bottleneck in the industrial hardware design process, requiring significant time and effort. Currently, verification relies on simulating the design on test inputs, but this process is time-consuming. A new research question arises: Can we use the simulation data to learn a continuous representation of the hardware design that allows us to predict its functionality? To tackle this problem, we propose Design2Vec, a deep architecture that learns semantic abstractions of hardware designs. Design2Vec operates at the Register Transfer Level (RTL), which is a higher level of abstraction than gates or bits. RTL can be represented as a graph that incorporates control and data flow, and we utilize a graph neural network to learn representations of RTL syntax and semantics. We apply these representations to various verification tasks, such as predicting which cover points of the design will be simulated by a test and generating new tests to cover specific cover points. We evaluate Design2Vec on real-world hardware designs, including Google's TPU chip, and our results show that it outperforms baseline approaches that do not consider RTL semantics. Design2Vec is also scalable to industrial designs and generates tests that cover difficult-to-reach design points in a fraction of the time it takes for manually written tests by verification experts.