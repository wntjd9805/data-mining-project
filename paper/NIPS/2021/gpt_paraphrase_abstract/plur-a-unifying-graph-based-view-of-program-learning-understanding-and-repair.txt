The recent surge in interest in machine learning for understanding and editing source code has led to various developments in models, code representations, and tasks. However, these advancements can seem disconnected and unique, making it difficult to identify the core challenges and contributions of machine learning in this field. This study aims to simplify the landscape by proposing a general approach that maps a graph to a sequence of tokens and pointers. The main finding is that 16 different tasks can be transformed into this form, allowing a single model architecture to achieve state-of-the-art results on most tasks. This unified approach also facilitates multi-task learning and enables experiments to explore the impact of different modeling choices on code understanding and repair tasks. The framework, named PLUR, is easily expandable to accommodate more tasks and will be made available as an open-source resource.