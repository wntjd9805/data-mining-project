Computer-aided design (CAD) is a widely used method for technical design, starting with 2D sketches that are later transformed into complex 3D assemblies. These sketches consist of parametric primitives (points, lines, circular arcs) connected by geometric constraints (coincidence, parallelism, orthogonality). Sketches can be represented as graphs with primitives as nodes and constraints as edges. Training a model to automatically generate CAD sketches poses challenges due to the complexity and heterogeneity of the graphs. We propose a generative model called SketchGen, based on a transformer architecture, to tackle this heterogeneity problem. We design a sequential language for the primitives and constraints to differentiate between different types and parameters, while promoting information reuse and encoding shared structure. Our model can produce primitives linked by constraints, allowing further regularization through a constraint solver. Through evaluations, we demonstrate the prediction of constraints for given primitives and the generation of complete sketches from scratch. Our approach outperforms the current state-of-the-art in CAD sketch generation.