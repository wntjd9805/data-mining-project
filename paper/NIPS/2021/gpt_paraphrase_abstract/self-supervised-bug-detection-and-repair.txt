Recent advancements in machine learning have shown the potential of combining formal and probabilistic reasoning to assist in software development. However, the lack of extensive annotated datasets makes training these analyses difficult. To tackle this challenge, we propose BUGLAB, a method for self-supervised learning of bug detection and repair. BUGLAB employs two models: (1) a detector model that learns to identify and fix bugs in code, and (2) a selector model that generates faulty code for the detector to use as training data. By implementing BUGLAB in Python, we achieve a significant improvement of up to 30% compared to baseline methods when tested with a dataset of 2374 real-life bugs. Furthermore, we discover 19 previously unknown bugs in open-source software.