Primal heuristics are important in solving Mixed Integer Programming (MIP) problems efficiently. While solvers can find optimal solutions given enough time, real-world applications often require finding good solutions quickly. However, the management of multiple MIP heuristics in a solver has not been thoroughly explored. Typically, solvers use hard-coded rules based on empirical testing, but these rules may not be optimal for specific problems. In this study, we propose a data-driven framework for scheduling heuristics in an exact MIP solver. By analyzing data on the performance of primal heuristics, we create a problem-specific schedule that finds solutions at minimal cost. We formalize the learning process and develop an efficient algorithm to compute the schedule. Our approach outperforms the default settings of a leading academic MIP solver, reducing the average primal integral by up to 49% on challenging instances.