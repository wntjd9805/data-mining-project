Routing traffic in large-scale networks presents challenges in finding the shortest paths due to the constantly changing state of the network. Integrating machine learning (ML) models that compute edge or path lengths into path search algorithms is difficult due to the scale of the road network and low-latency requirements. This paper focuses on a setting where a path searcher has access to multiple predictions for path lengths from ML models and can query a traffic server to obtain accurate lengths. The goal is to compute the shortest path with high probability using the hints and a minimal number of probes to the server. The paper presents theoretical results and an empirical validation using real-world data from the NYC traffic network.