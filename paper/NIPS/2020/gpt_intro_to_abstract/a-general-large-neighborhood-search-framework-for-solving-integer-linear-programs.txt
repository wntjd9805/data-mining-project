The design of algorithms for solving hard combinatorial optimization problems is a challenging task. These problems are typically NP-complete or NP-hard and include various search problems through combinatorial spaces. Traditionally, designing approximation algorithms and heuristics for these problems required manual intervention and domain knowledge. However, there has been a growing interest in automatically learning algorithms for combinatorial problems from training data. One popular approach, known as "learning to search," aims to replace hard-coded heuristic components with parameterized learnable versions. Despite progress, the performance of branch-and-bound algorithms for Integer Linear Programs (ILPs) remains limited. To address this, this paper presents a framework that leverages state-of-the-art solvers as black-box subroutines to solve large-scale ILPs. The framework is evaluated on various benchmarks and shows superior wall-clock performance compared to leading commercial solvers.