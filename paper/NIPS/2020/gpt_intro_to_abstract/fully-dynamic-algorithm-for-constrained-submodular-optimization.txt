Submodular optimization has become a central topic in machine learning, with applications in various domains. The problem of maximizing a monotone submodular function under a cardinality constraint is of particular importance. While a simple and efficient greedy algorithm exists for solving this problem, it is inefficient for large datasets. To address this limitation, there has been recent interest in designing streaming and distributed algorithms. However, these algorithms are not well-suited for handling dynamically changing datasets. This paper proposes an efficient fully dynamic algorithm for submodular maximization that can handle a stream of insertions and deletions. The algorithm maintains a solution with an expected value close to the optimum and has a poly-logarithmic time complexity per update. Empirical validation of the algorithm's efficiency is also provided.