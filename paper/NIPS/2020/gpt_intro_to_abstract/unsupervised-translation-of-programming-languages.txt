Transcompilers, also known as transpilers or source-to-source compilers, are translators that convert programming languages at a similar level of abstraction. Unlike traditional compilers, which translate code to a lower-level language, transcompilers are used to port source code between different platforms or convert new languages into a popular language. This paper focuses on traditional transcompilers that translate existing codebases written in obsolete or deprecated languages to a recent one, or integrate code written in a different language into an existing codebase. The use of transcompilers can be a faster and cheaper alternative to rewriting entire codebases. However, building a translator is challenging due to differences in syntax, APIs, and standard-library functions. Most transcompilation tools are rule-based, requiring extensive knowledge of both source and target languages, and translating dynamically-typed languages to statically-typed languages poses additional difficulties. To address these challenges, this paper proposes TransCoder, a model trained on large amounts of monolingual source code from GitHub to translate between C++, Java, and Python. The model achieves high translation accuracy, outperforming rule-based and commercial baselines, and can be easily extended to other programming languages. The paper introduces a new approach to language translation, demonstrates the model's ability to understand language-specific patterns, and provides a validation and test set for evaluating translations. The code and pretrained models will be made publicly available.