In recent years, convolutional neural networks (CNNs) have achieved impressive performance in computer vision tasks. However, the high computational requirements and large storage space needed for CNNs have hindered their deployment on mobile or edge devices. Current approaches to address this issue include model compression through matrix decomposition, network quantization, and network pruning. Channel pruning, which involves removing entire input or output channels while retaining the rest of the model, has shown promise for reducing computation and storage costs. Most channel pruning approaches can be categorized as static or runtime. Static approaches evaluate channel importance across the entire training dataset and permanently prune channels accordingly, while runtime approaches dynamically evaluate channel importance on individual instances. Runtime approaches have shown improved representation capability and prediction accuracy but often trade storage cost for dynamic flexibility. Furthermore, previous runtime approaches only evaluate channel importance within individual layers without considering efficiency differences across layers. In this paper, we propose a deep reinforcement learning (DRL) based pruning framework to address these limitations. Our framework uses DRL to prune CNNs by maximizing received rewards while considering overall budget constraints and training accuracy. We introduce a novel prediction component and a DRL-based component for each layer to estimate channel importance and learn the sparsity ratio, respectively. Unlike previous runtime approaches, our framework considers both runtime and static importance, allowing for a trade-off between storage efficiency and dynamic flexibility. Our contributions include the incorporation of runtime and static information in channel pruning, the utilization of DRL to determine sparsity ratios, and the provision of a trade-off between storage efficiency and dynamic flexibility. The codes for our method can be found at the provided GitHub repository.