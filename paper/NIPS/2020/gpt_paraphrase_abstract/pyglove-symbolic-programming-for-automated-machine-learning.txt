Neural networks are influenced by the choices of hyper-parameters and architecture. AutoML is a promising approach for automating these choices, but current ML software libraries have limitations in handling the interactions within AutoML components. For example, efficient NAS algorithms like ENAS and DARTS require a coupling between the search space and search algorithm, making it difficult to implement complex search flows. In this paper, we propose a new approach to programming AutoML based on symbolic programming, where ML programs can be easily manipulated by another program. This allows for decoupling of the search algorithm, search space, and child program, enabling easy changes to the search space and algorithm, as well as adding search capabilities to existing code and implementing complex search flows. We introduce PyGlove, a Python library that implements this paradigm, and demonstrate its effectiveness through case studies on ImageNet and NAS-Bench-101. With PyGlove, users can convert static programs into search spaces, iterate on search spaces and algorithms, and create complex search flows to achieve better results.