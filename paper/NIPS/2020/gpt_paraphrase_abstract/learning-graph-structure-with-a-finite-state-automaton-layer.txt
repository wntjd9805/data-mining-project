Graph-based neural network models are achieving impressive results in various domains by leveraging the flexibility of graphs to encode domain knowledge through relational structures between nodes. These structures, represented as edges, capture both intrinsic and abstract relations that facilitate reasoning for downstream tasks. This study focuses on learning to derive abstract relations from the inherent graph structure. Inspired by their effectiveness in program analyses, the research explores relations defined by paths on a finite-state automaton. The proposed approach involves training a differentiable Graph Finite-State Automaton (GFSA) layer, which introduces a new edge type expressed as a weighted adjacency matrix. By utilizing implicit differentiation, the GFSA layer learns to establish these relations end-to-end on a graph-based Partially Observable Markov Decision Process (POMDP). Experimental results demonstrate that the GFSA layer can identify shortcuts in grid-world graphs and replicate simple static analyses on Python programs. Moreover, when integrated with a larger graph-based model trained end-to-end on the variable misuse program understanding task, the GFSA layer outperforms hand-engineered semantic edges and other baseline methods for incorporating learned edge types.