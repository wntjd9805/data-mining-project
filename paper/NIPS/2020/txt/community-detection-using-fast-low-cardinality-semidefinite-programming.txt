Abstract
Modularity maximization has been a fundamental tool for understanding the com-munity structure of a network, but the underlying optimization problem is noncon-vex and NP-hard to solve. State-of-the-art algorithms like the Louvain or Leiden methods focus on different heuristics to help escape local optima, but they still depend on a greedy step that moves node assignment locally and is prone to getting trapped. In this paper, we propose a new class of low-cardinality algorithm that generalizes the local update to maximize a semideﬁnite relaxation derived from max-k-cut. This proposed algorithm is scalable, empirically achieves the global semideﬁnite optimality for small cases, and outperforms the state-of-the-art algo-rithms in real-world datasets with little additional time cost. From the algorithmic perspective, it also opens a new avenue for scaling-up semideﬁnite programming when the solutions are sparse instead of low-rank. 1

Introduction
Community detection, that is, ﬁnding clusters of densely connected nodes in a network, is a fun-damental topic in network science. A popular class of methods for community detection, called modularity maximization [34], tries to maximize the modularity of the cluster assignment, the quality of partitions deﬁned by the difference between the number of edges inside a community and the expected number of such edges. However, optimizing modularity is NP-hard [14], so modern methods focus on heuristics to escape local optima. A very popular heuristic, the Louvain method [8], greedily updates the community membership node by node to the best possible neighboring community that maximizes the modularity function’s gain. Then it aggregates the resulting partition and repeats until no new communities are created. The Louvain method is fast and effective [48], although it still gets trapped at local optima and might even create disconnected communities. A follow-up work, the
Leiden method [43], resolves disconnectedness by an additional reﬁnement step, but it still relies on greedy local updates and is prone to local optima.
In this paper, we propose the Locale (low-cardinality embedding) algorithm, which improves the performance of community detecion above the current state of the art. It generalizes the greedy local move procedure of the Louvain and Leiden methods by optimizing a semideﬁnite relaxation of modularity, which originates from the extremal case of the max-k-cut semideﬁnite approximation
[22, 20, 2] when k goes to inﬁnity. We provide a scalable solver for this semideﬁnite relaxation by exploiting the low-cardinality property in the solution space. Traditionally, semideﬁnite programming is considered unscalable. Recent advances in Riemannian manifold optimization [38, 16, 1] provide a chance to scale-up by optimizing directly in a low-rank solution space, but it is not amenable in many relaxations like the max-k-cut SDP, where there are nonnegativity constraints on all entries of 34th Conference on Neural Information Processing Systems (NeurIPS 2020), Vancouver, Canada.
the semideﬁnite variable X. However, due to the nonnegativity constraints, the solution X is sparse and a low-cardinality solution in the factorized space V sufﬁces. These observations lead to our
ﬁrst contribution, which is a scalable solver for low-cardinality semideﬁnite programming subject to nonnegative constraints. Our second contribution is using this solver to create a generalization of existing community detection methods, which outperforms them in practice because it is less prone to local optima.
We demonstrate in the experiments that our proposed low-cardinality algorithm is far less likely to get stuck at local optima than the greedy local move procedure. On small datasets that are solvable with a traditional SDP solver, our proposed solver empirically reaches the globally optimal solution of the semideﬁnite relaxation given enough cardinality and is orders of magnitude faster than traditional
SDP solvers. Our method uniformly improves over both the standard Louvain and Leiden methods, which are the state-of-the-art algorithms for community detection, with 2.2x time cost. Additionally, from the perspective of algorithmic design, the low-cardinality formulation opens a new avenue for scaling up semideﬁnite programming when the solutions tend to be sparse instead of low-rank. Source code for our implementation is available at https://github.com/locuslab/sdp_clustering. 2