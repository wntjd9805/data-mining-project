Abstract
Predicting the motion of agents such as pedestrians or human-driven vehicles is one of the most critical problems in the autonomous driving domain. The overall safety of driving and the comfort of a passenger directly depend on its successful solution.
The motion prediction problem also remains one of the most challenging problems in autonomous driving engineering, mainly due to high variance of the possible agent’s future behavior given a situation. The two phenomena responsible for the said variance are the multimodality caused by the uncertainty of the agent’s intent (e.g., turn right or move forward) and uncertainty in the realization of a given intent (e.g., which lane to turn into). To be useful within a real-time autonomous driving pipeline, a motion prediction system must provide efﬁcient ways to describe and quantify this uncertainty, such as computing posterior modes and their probabilities or estimating density at the point corresponding to a given trajectory. It also should not put substantial density on physically impossible trajectories, as they can confuse the system processing the predictions. In this paper, we introduce the PRANK method, which satisﬁes these requirements. PRANK takes rasterized bird-eye images of agent’s surroundings as an input and extracts features of the scene with a convolutional neural network. It then produces the conditional distribution of agent’s trajectories plausible in the given scene. The key contribution of PRANK is a way to represent that distribution using nearest-neighbor methods in latent trajectory space, which allows for efﬁcient inference in real time. We evaluate
PRANK on the in-house and Argoverse datasets, where it shows competitive results. 1

Introduction
This paper focuses on the problem of predicting the motion of agents surrounding a self-driving vehicle, such as pedestrians and vehicles driven by humans. As any vehicle, a self-driving vehicle needs certain time to change its speed, and sudden changes in speed and acceleration may feel very uncomfortable to its passengers. The motion planning module of a self-driving vehicle thus needs to have a good idea of where nearby agents might end up in a few seconds, so that it can plan for the vehicle to maintain safe distance. It can also greatly beneﬁt from understanding when the situation is inherently multimodal, and multiple distinct futures are likely, as in such situations a self-driving vehicle might maintain extra caution until the situation becomes more clear.
One way to describe agent’s future motion, which we choose to follow in this paper, is to represent it as a probability distribution over agent’s future trajectories conditioned on the information about the scene up to the time the prediction was made. In order for this representation to be useful for the motion planning subsystem, it has to satisfy several requirements:
∗Skolkovo Institute of Science and Technology
†Moscow Institute of Physics and Technology, yuriy.biktairov@phystech.edu 34th Conference on Neural Information Processing Systems (NeurIPS 2020), Vancouver, Canada.
• The distribution needs to be computed with low latency, so that predictions can quickly react to new information such as a sudden change in agent’s acceleration, and promptly inform the planning subsystem about the situation change;
• The distribution representation must provide efﬁcient access to the expected and most likely future agent positions, so that the planning subsystem can use this information in real-time;
• There must be a convenient way to quantify future uncertainty and multimodality, if there’s any. One way to achieve that is to explicitly enumerate the modes of the distribution together with their probabilities and statistics such as means or, possibly, higher-order moments.
The main contribution of this paper is to propose an approach to the problem of agent’s future trajectory prediction, which we call PRANK (motion Prediction based on RANKing). The proposed approach satisﬁes the requirements listed above and is suitable for use in a production self-driving pipeline. Unlike generative approaches to this problem such as [1] or [2], the proposed method is closer to ranking techniques in its nature and heavily builds on the success of metric learning methods coupled with approximate nearest neighbor search in computer vision [3, 4] and NLP [5, 6] applications. The proposed method is based on the following ideas:
• Trajectory predictions are selected by scoring a ﬁxed dictionary (or bank, as we call it) of trajectories prepared in advance, such as a representative subset of all agent trajectories ever observed in real life by the perception system of a self-driving ﬂeet;
• The model is factorized in such a way that it can greatly beneﬁt from preprocessing the trajectory bank ofﬂine. Only the encoding of the scene needs to be performed in real-time, and the rest of inference is handled either by directly using approximate nearest neighbor search methods on the trajectory bank, or by simple Monte-Carlo estimation on top of its results. 2