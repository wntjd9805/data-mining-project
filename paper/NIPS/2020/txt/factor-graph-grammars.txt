Abstract
We propose the use of hyperedge replacement graph grammars for factor graphs, or factor graph grammars (FGGs) for short. FGGs generate sets of factor graphs and can describe a more general class of models than plate notation, dynamic graphical models, case–factor diagrams, and sum–product networks can. Moreover, inference can be done on FGGs without enumerating all the generated factor graphs.
For ﬁnite variable domains (but possibly inﬁnite sets of graphs), a generalization of variable elimination to FGGs allows exact and tractable inference in many situations. For ﬁnite sets of graphs (but possibly inﬁnite variable domains), a
FGG can be converted to a single factor graph amenable to standard inference techniques. 1

Introduction
Graphs have been used with great success as representations of probability models, both Bayesian and
Markov networks (Koller and Friedman, 2009) as well as latent-variable neural networks (Schulman et al., 2015). But in many applications, especially in speech and language processing, a ﬁxed graph is not sufﬁcient. The graph may have substructures that repeat a variable number of times: for example, a hidden Markov model (HMM) depends on the number of words in the string. Or, part of the graph may have several alternatives with different structures: for example, a probabilistic context-free grammar (PCFG) contains many trees for a given string.
Several formalisms have been proposed to ﬁll this need. Plate notation (Buntine, 1994), plated factor graphs (Obermeyer et al., 2019), and dynamic graphical models (Bilmes, 2010) address the repeated-substructure problem, but only for sequence models like HMMs. Case–factor dia-grams (McAllester et al., 2008) and sum–product networks (Poon and Domingos, 2011) address the alternative-substructure problem, so they can describe PCFGs, but only for ﬁxed-length inputs.
More general formalisms like probabilistic relational models (Getoor et al., 2007) and probabilistic programming languages (van de Meent et al., 2018) address both problems successfully, but because of their generality, tractable exact inference in them is often not possible.
Here, we explore the use of hyperedge replacement graph grammars (HRGs), a formalism for deﬁning sets of graphs (Bauderon and Courcelle, 1987; Habel and Kreowski, 1987; Drewes et al., 1997). We show that HRGs for factor graphs, or factor graph grammars (FGGs) for short, are expressive enough to solve both the repeated-substructure and alternative-substructure problems, and constrained enough allow exact and tractable inference in many situations. We make three main contributions:
• We deﬁne FGGs and show how they generalize the constrained formalisms mentioned above (§3).
• We deﬁne a conjunction operation that enables one to modularize a FGG into two parts, one which deﬁnes the model and one which deﬁnes a query (§4).
• We show how to perform inference on FGGs without enumerating the (possibly inﬁnite) set of graphs they generate. For ﬁnite variable domains, we generalize variable elimination to FGGs 34th Conference on Neural Information Processing Systems (NeurIPS 2020), Vancouver, Canada.
(§5.1). For some FGGs, this is exact and tractable; for others, it gives a sequence of successive approximations.
For inﬁnite variable domains, we show that if a FGG generates a ﬁnite set, it can be converted to a single factor graph, to which standard graphical model inference methods can be applied (§5.2). But if a FGG generates an inﬁnite set, inference is undecidable (§5.3). 2