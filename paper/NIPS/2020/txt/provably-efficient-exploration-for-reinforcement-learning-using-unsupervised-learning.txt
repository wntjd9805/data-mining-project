Abstract
Motivated by the prevailing paradigm of using unsupervised learning for efﬁcient exploration in reinforcement learning (RL) problems (Tang et al., 2017; Bellemare et al., 2016), we investigate when this paradigm is provably efﬁcient. We study episodic Markov decision processes with rich observations generated from a small number of latent states. We present a general algorithmic framework that is built upon two components: an unsupervised learning algorithm and a no-regret tabular
RL algorithm. Theoretically, we prove that as long as the unsupervised learning algorithm enjoys a polynomial sample complexity guarantee, we can ﬁnd a near-optimal policy with sample complexity polynomial in the number of latent states, which is signiﬁcantly smaller than the number of observations. Empirically, we instantiate our framework on a class of hard exploration problems to demonstrate the practicality of our theory. 1

Introduction
Reinforcement learning (RL) is the framework of learning to control an unknown system through trial and error. It takes as inputs the observations of the environment and outputs a policy, i.e., a mapping from observations to actions, to maximize the cumulative rewards. To learn a near-optimal policy, it is critical to sufﬁciently explore the environment and identify all the opportunities for high rewards.
However, modern RL applications often need to deal with huge observation spaces such as those consist of images or texts, which makes it challenging or impossible (if there are inﬁnitely many observations) to fully explore the environment in a direct way. In some work, function approximation scheme is adopted such that essential quantities for policy improvement, e.g. state-action values, can be generalized from limited observed data to the whole observation space. However, the use of function approximation alone does not resolve the exploration problem (Du et al., 2020a).
To tackle this issue, multiple empirically successful strategies are developed (Tang et al., 2017;
Bellemare et al., 2016; Pathak et al., 2017; Azizzadenesheli et al., 2018; Lipton et al., 2018; Fortunato et al., 2018; Osband et al., 2016). Particularly, in Tang et al. (2017) and Bellemare et al. (2016), the
∗Correspondence to: Simon S. Du <ssdu@cs.washington.edu>, Lin F. Yang <linyang@ee.ucla.edu> 34th Conference on Neural Information Processing Systems (NeurIPS 2020), Vancouver, Canada.
authors use state abstraction technique to reduce the problem size. They construct a mapping from observations to a small number of hidden states and devise exploration on top of the latent state space rather than the original observation space.
To construct such a state abstraction mapping, practitioners often use unsupervised learning. The procedure has the following steps: collect a batch of observation data, apply unsupervised learning to build a mapping, use the mapping to guide exploration and collect more data, and repeat. Empirical study evidences the effectiveness of such an approach at addressing hard exploration problems (e.g., the infamous Montezuma’s Revenge). However, it has not been theoretically justiﬁed. In this paper, we aim to answer this question:
Is exploration driven by unsupervised learning in general provably efﬁcient?
The generality includes the choice of unsupervised learning algorithms, reinforcement learning algorithms, and the condition of the problem structure.
We ﬁrst review some existing theoretical results on provably efﬁcient exploration. More discussion about related work is deferred to appendix. For an RL problem with ﬁnitely many states, there are many algorithms with a tabular implementation that learn to control efﬁciently. These algorithms can learn a near-optimal policy using a number of samples polynomially depending on the size of the state space. However, if we directly apply these algorithms to rich observations cases by treating each observation as a state, the sample complexities are polynomial in the cardinality of the observation space. Such a dependency is unavoidable without additional structural assumptions (Jaksch et al., 2010). If structural conditions are considered, for example, observations are generated from a small number of latent states (Krishnamurthy et al., 2016; Jiang et al., 2017; Dann et al., 2018;
Du et al., 2019a), then the sample complexity only scales polynomially with the number of hidden states. Unfortunately, the correctness of these algorithms often requires strict assumptions (e.g., deterministic transitions, reachability) that may not be satisﬁed in many real applications.
Our Contributions
In this paper we study RL problems with rich observations generated from a small number of latent states for which an unsupervised learning subroutine is used to guide exploration. We summarize our contributions below.
• We propose a new algorithmic framework for the Block Markov Decision Process (BMDP) model (Du et al., 2019a). We combine an unsupervised learning oracle and a tabular RL algorithm in an organic way to ﬁnd a near-optimal policy for a BMDP. The unsupervised learning oracle is an abstraction of methods used in Tang et al. (2017); Bellemare et al. (2016) and widely used statistical generative models. Notably, our framework can take almost any unsupervised learning algorithms and tabular RL algorithms as subroutines.
• Theoretically, we prove that as long as the unsupervised learning oracle and the tabular RL algorithm each has a polynomial sample complexity guarantee, our framework ﬁnds a near-optimal policy with sample complexity polynomial in the number of latent states, which is signiﬁcantly smaller than the number of possible observations (cf. Theorem 1). To our knowledge, this is the ﬁrst provably efﬁcient method for RL problems with huge observation spaces that uses unsupervised learning for exploration. Furthermore, our result does not require additional assumptions on transition dynamics as used in Du et al. (2019a). Our result theoretically sheds light on the success of the empirical paradigms used in Tang et al. (2017); Bellemare et al. (2016).
• We instantiate our framework with particular unsupervised learning algorithms and tabular RL algorithms on hard exploration environments with rich observations studied in Du et al. (2019a), and compare with other methods tested in Du et al. (2019a). Our experiments demonstrate our method can signiﬁcantly outperform existing methods on these environments.
Main Challenge and Our Technique We assume there is an unsupervised learning oracle (see formal deﬁnition in Section 4) which can be applied to learn decoding functions and the accuracy of learning increases as more training data are fed. The unsupervised learning algorithm can only guarantee good performance with respect to the input distribution that generates the training data.
Unlike standard unsupervised learning where the input distribution is ﬁxed, in our problem, the input distribution depends on our policy. On the other hand, the quality of a policy depends on whether the unsupervised learning oracle has (approximately) decoded the latent states. This interdependency is the main challenge we need to tackle in our algorithm design and analysis. 2
Here we brieﬂy explain our framework. Let M be the MDP with rich observations. We form an auxiliary MDP M(cid:48) whose state space is the latent state space of M. Our idea is to simulate the process of running a no-regret tabular RL algorithm A directly on M(cid:48). For each episode, A proposes a policy π for M(cid:48) and expects a trajectory of running π on M(cid:48) for updating and then proceeds. To obtain such a trajectory, we design a policy φ for M as a composite of π and some initial decoding functions. We run φ on M to collect observation trajectories. Although the decoding functions may be inaccurate initially, they can still help us collect observation samples for later reﬁnement. After collecting sufﬁcient observations, we apply the unsupervised learning oracle to retrain decoding functions and then update φ as a composite of π and the newly-learned functions and repeat running
φ on M. After a number of iterations (proportional to the size of the latent state space), with the accumulation of training data, decoding functions are trained to be fairly accurate on recovering latent states, especially those π has large probabilities to visit. This implies that running the latest φ on M is almost equivalent to running π on M(cid:48). Therefore, we can obtain a state-action trajectory with high accuracy as the algorithm A requires. Since A is guaranteed to output a near-optimal policy after a polynomial (in the size of the true state-space) number of episodes, our algorithm uses polynomial number of samples as well. 2