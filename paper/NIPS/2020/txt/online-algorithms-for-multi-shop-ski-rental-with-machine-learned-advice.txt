Abstract
We study the problem of augmenting online algorithms with machine learned (ML) advice. In particular, we consider the multi-shop ski rental (MSSR) problem, which is a generalization of the classical ski rental problem. In MSSR, each shop has different prices for buying and renting a pair of skis, and a skier has to make decisions on when and where to buy. We obtain both deterministic and randomized online algorithms with provably improved performance when either a single or multiple ML predictions are used to make decisions. These online algorithms have no knowledge about the quality or the prediction error type of the ML prediction.
The performance of these online algorithms are robust to the poor performance of the predictors, but improve with better predictions. Extensive experiments using both synthetic and real world data traces verify our theoretical observations and show better performance against algorithms that purely rely on online decision making. 1

Introduction
Uncertainty plays a critical role in many real world applications where the decision maker is faced with multiple alternatives with different costs. These decisions arise in our daily lives, such as whether to rent an apartment or buy a house, which cannot be answered reliably without knowledge of the future. In a more general setting with multiple alternatives, such as a large number of ﬁles with different execution times in a distributed computing system, it is hard to decide which ﬁle should be executed next without knowing which ﬁle will arrive in the future. These decision-making problems are usually modeled as online rent-or-buy problems, such as the classical ski rental problem and many of its generalizations [5, 6, 7, 8, 11, 15].
Two paradigms have been widely studied to deal with such uncertainty. On the one hand, online algorithms are designed without prior knowledge to the problem, and competitive ratio (CR) is used to characterize the goodness of the algorithm in lack of the future. CR is deﬁned as the ratio between the cost of the online algorithm (ALG) and that of the ofﬂine optimal (OPT), in the worst-case over all feasible inputs. On the other hand, machine learning is applied to address uncertainty by making future predictions via building robust models on prior data. Recently, there is a popular trend in the design of online algorithms by incorporating machine learned (ML) predictions to improving their performance [2, 3, 4, 9, 10, 12, 14, 16, 17, 18]. To that end, two properties are desired: (i) if the 34th Conference on Neural Information Processing Systems (NeurIPS 2020), Vancouver, Canada.
predictor is good, the online algorithm should perform close to the best ofﬂine algorithm (a design goal called consistency); and (ii) if the predictor is bad, the online algorithm should not degrade signiﬁcantly, i.e., its performance should be close to the online algorithm without predictions (a design goal called robustness). Importantly, these properties are achieved under the assumption that the online algorithm has no knowledge about the quality of the predictor or the prediction error types.
The multi-shop ski rental problem. While previous studies focused on using ML predictions for a skier to buy or rent the skis in a single shop, we study the more general setting where the skier has multiple shops to buy or rent the skis with different buying and renting prices. We call this a multi-shop ski rental (MSSR) problem. This is often the case in practice where the skier has to make a two-fold decision, i.e, when and where to buy. The MSSR not only naturally extends the classical ski rental problem, where the skier rents or buys the skis in a single shop, but also allows heterogeneity in skier’s options. This desirable feature makes the ski rental problem a more general modeling framework for online algorithm design. A few real world applications that can be modeled with MSSR are presented in the supplementary material.
Furthermore, we consider not only the case of using prediction inputs from a single ML algorithm, but also a more general setting where predictions are drawn from multiple ML models. Closest to ours is [4] where multiple experts provide advice in a single shop, which can be considered as a special case of ours. However, we incorporate multiple predictions into decision making by comparing the number of predictions to a threshold, which is much easier to implement in real applications.
Consistency and Robustness. Inspired by [12, 17, 4, 2], we also use the notions of consistency and robustness to evaluate our algorithms. We denote the prediction error as ζ, which is the absolute difference between the prediction and the actual outcome. We say that an online algorithm is
α-consistent if ALG ≤ α · OPT when the prediction is accurate, i.e., ζ = 0, and β-robust if
ALG ≤ β · OPT for all ζ and feasible outcomes to the problem. We call α and β the consistency factor and robustness factor, respectively. Thus consistency characterizes how well the algorithm does in case of perfect predictions, and robustness characterizes how well it does in worst-case predictions.
This novel analytical framework can bridge the gap between the aforementioned two radically online algorithm design methodologies, either pure worst case analysis or pure prediction based model. In this framework, a hyperparameter λ ∈ (0, 1) is leveraged to determine the trust on ML predictions, where λ = 0 indicates fully trust on ML predictions and λ = 1 indicates no trust on ML predictions.
Main Results. Our main contribution is to develop online algorithms for MSSR with consistency and robustness properties in presence of ML predictions. We develop new analysis techniques for online algorithms with ML predictions via the hyperparameter. We ﬁrst deﬁne a few notions before presenting our main results. We assume there are n shops with buying prices b1 > · · · > bn and renting prices r1 < · · · < rn. We develop several online algorithms for MSSR with prediction inputs from both a single ML algorithm and multiple ML algorithms as highlighted below:
• We ﬁrst present a best deterministic algorithm (achieving minimal competitive ratio) for MSSR without ML predictions. It turns out that the algorithm chooses exactly one shop i with the minimal value of ri + (bi − ri)/bn, and buy on the start day bn at shop i.
• Next, we consider MSSR with prediction from a single ML algorithm. We show that if this ML prediction is naively used in algorithm design, the proposed algorithm cannot ensure robustness (Section 3.1). We then incorporate ML prediction in a judicious manner by ﬁrst proposing a determin-istic online algorithm that is ((λ + 1)rn + b1/bn)-consistent, and (max{rn, b1/bn} + 1/λ)-robust (Section 3.2). We further propose a randomized algorithm with consistency and robustness guarantees (Section 3.3). We numerically evaluate the performance of our online algorithms (Section 3.4). We show that with a natural prediction error model, our algorithms are practical, and achieve better performance than the ones without ML predictions. We also investigate the impacts of several param-eters and provide insights on the beneﬁts of using ML predictions. It turns out that the predictions need to be carefully incorporated in online algorithm design.
• We then study a more general setting where we get predictions from m ML algorithms. We propose both a deterministic algorithm (Section 4.1) and a randomized algorithm (Section 4.2) with consistency and robustness guarantees. Numerical results are given to demonstrate the impact of multiple ML predictions.
All detailed proofs in the paper are relegated to the supplemental material and can be found in [20]. 2