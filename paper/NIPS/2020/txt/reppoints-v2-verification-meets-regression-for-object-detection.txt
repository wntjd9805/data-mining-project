Abstract
Veriﬁcation and regression are two general methodologies for prediction in neural networks. Each has its own strengths: veriﬁcation can be easier to infer accurately, and regression is more efﬁcient and applicable to continuous target variables.
Hence, it is often beneﬁcial to carefully combine them to take advantage of their beneﬁts. In this paper, we take this philosophy to improve state-of-the-art object detection, speciﬁcally by RepPoints. Though RepPoints provides high performance, we ﬁnd that its heavy reliance on regression for object localization leaves room for improvement. We introduce veriﬁcation tasks into the localization prediction of RepPoints, producing RepPoints v2, which provides consistent improvements of about 2.0 mAP over the original RepPoints on the COCO object detection benchmark using different backbones and training methods. RepPoints v2 also achieves 52.1 mAP on COCO test-dev by a single model. Moreover, we show that the proposed approach can more generally elevate other object detection frameworks as well as applications such as instance segmentation. The code is available at https://github.com/Scalsol/RepPointsV2. 1

Introduction
Two common methodologies for neural network prediction are veriﬁcation and regression. While either can drive network features to ﬁt the ﬁnal task targets, they each have different strengths. For the object localization problem, veriﬁcation can be easier to infer because each feature is spatially aligned with the target to be veriﬁed. On the other hand, regression is often more efﬁcient and it can also predict continuous target variables that enable subtle localization reﬁnement.
To take advantage of all these beneﬁts, earlier object localization methods [9, 20, 19] combined veriﬁcation and regression by ﬁrst performing coarse localization through verifying several anchor box hypotheses, and then reﬁning the localization by regressing box offsets. This combination approach was shown to be effective and led to state-of-the-art performance at the time. However, recent methods based purely on regression, which directly regress the object extent from each feature map position [32, 29, 34], could perform competitively or even better, when comparing a representative regression method, RepPoints, to RetinaNet [19].
In this work, we examine whether pure regression based methods can be enhanced by the inclusion of veriﬁcation methodology. We observe that veriﬁcation has proven to be advantageous when used in certain ways. In CornerNet [16], feature map points are veriﬁed as a bounding box corner or
∗Most work was done when Yihong Chen was an intern at Microsoft Research Asia. 34th Conference on Neural Information Processing Systems (NeurIPS 2020), Vancouver, Canada.
not, in contrast to verifying anchor boxes for coarse hypothesis localization in RetinaNet [19]. This use of veriﬁcation leads to signiﬁcantly better localization performance as shown in Table 1. The difference may be attributed to corner points representing the exact spatial extent of a ground-truth object box, while an anchor box gives only a coarse hypothesis. In addition, each feature in corner point veriﬁcation is well aligned to the corresponding point, while in anchor veriﬁcation, the center feature used for veriﬁcation lies away from the boundary area.
To elevate the performance of regression-based methods, speciﬁcally RepPoints [32], we thus seek to incorporate effective and compatible forms of veriﬁcation. However, the different granularity of object representations processed by the two methods, i.e., whole objects in RepPoints and object parts (corners) in corner veriﬁcation, presents an obstacle. To address this issue, we propose to model veriﬁcation tasks by auxiliary side-branches that are added to the major regression branch at only the feature level and result level, without affecting intermediate representations. Through these auxiliary side-branches, veriﬁcation can be fused with regression to provide the following beneﬁts: better features by multi-task learning, feature enhancement through inclusion of veriﬁcation cues, and joint inference by both methodologies. The fusion is simple, intuitive, general enough to utilize any kind of veriﬁcation cue, and does not disrupt the ﬂow of the RepPoints algorithm.
Through different techniques for harnessing veriﬁcation, the localization and classiﬁcation ability of
RepPoints is substantially improved. The resulting detector, called RepPoints v2, shows consistent improvements of about 2.0 mAP over the original RepPoints on the COCO benchmark with different backbones. It also achieves 52.1 mAP on the COCO object detection test-dev set with a single
ResNeXt-101-DCN model.
The proposed approach of choosing proper veriﬁcation tasks and introducing them into a regression framework as auxiliary branches is ﬂexible and general. It can be applied to object detection frame-works other than RepPoints, such as FCOS [29]. The additional corner and within-box veriﬁcation tasks are shown to improve a vanilla FCOS detector by 1.3 mAP on COCO test-dev using a
ResNet-50 model. This approach can be also applied beyond object detection, such as to instance segmentation by Dense RepPoints [33], where additional contour and mask veriﬁcation tasks improve performance by 1.3 mAP using a ResNet-50 model on the COCO instance segmentation test-dev set, reaching 38.9 mask mAP.
Table 1: Analysis of the performance on COCO val set among different methods. “RepPoints*” indicates our improved re-implementation of RepPoints.
Method
RetinaNet [19]
CornerNet [16]
RepPoints* [32]
RepPoints v2 methodology ver.+reg. veriﬁcation regression ver.+reg. backbone
ResNeXt-101
HG-104
ResNet-50
ResNet-50
AP 40.0 40.6 39.1 41.0 2