Abstract
BERT is incapable of processing long texts due to its quadratically increasing memory and time consumption. The most natural ways to address this problem, such as slicing the text by a sliding window or simplifying transformers, suffer from insufﬁcient long-range attentions or need customized CUDA kernels. The maximum length limit in BERT reminds us the limited capacity (5∼ 9 chunks) of the working memory of humans –— then how do human beings Cognize Long
TeXts? Founded on the cognitive theory stemming from Baddeley [2], the pro-posed CogLTX 1 framework identiﬁes key sentences by training a judge model, concatenates them for reasoning, and enables multi-step reasoning via rehearsal and decay. Since relevance annotations are usually unavailable, we propose to use interventions to create supervision. As a general algorithm, CogLTX outperforms or gets comparable results to SOTA models on various downstream tasks with memory overheads independent of the length of text. 1

Introduction
Pretrained language models, pioneered by BERT [12], have emerged as silver bullets for many NLP tasks, such as question answering [38] and text classiﬁca-tion [22]. Researchers and engineers breezily build state-of-the-art applications following the standard
ﬁnetuning paradigm, while might end up in disap-pointment to ﬁnd some texts longer than the length limit of BERT (usually 512 tokens). This situation may be rare for normalized benchmarks, for example
SQuAD [38] and GLUE [47], but very common for more complex tasks [53] or real-world textual data.
A straightforward solution for long texts is sliding window [50], processing continuous 512-token spans by BERT. This method sacriﬁces the possibility that the distant tokens “pay attention” to each other, which becomes the bottleneck for BERT to show its efﬁcacy in complex tasks (for example Figure 1). Since the problem roots in the high O(L2) time and space com-plexity in transformers [46] (L is the length of the
Figure 1: An example from HotpotQA (dis-tractor setting, concatenated). The key sen-tences to answer the question are the ﬁrst and last ones, more than 512 tokens away from each other. They never appear in the same
BERT input window in the sliding window method, hence we fail to answer the question. 1Codes are available at https://github.com/Sleepychord/CogLTX. 34th Conference on Neural Information Processing Systems (NeurIPS 2020), Vancouver, Canada.
Figure 2: The CogLTX inference for main genres of BERT tasks. MemRecall is the process to extract key text blocks z from the long text x. Then z is sent to the BERT, termed reasoner, to fulﬁll the speciﬁc task. A (c) task is converted to multiple (b) tasks. The BERT input w.r.t. z is denoted by z+. text), another line of research attempts to simplify the structure of transformers [20, 37, 8, 42], but currently few of them have been successfully applied to BERT [35, 4].
The maximum length limit in BERT naturally reminds us the limited capacity of Working Memory [2], a human cognitive system storing information for logical reasoning and decision-making. Experi-ments [27, 9, 31] already showed that the working memory could only hold 5∼9 items/words during reading, so how do humans actually understand long texts?
“The central executive – the core of the (working memory) system that is responsible for coordinating (multi-modal) information”, and “functions like a limited-capacity attentional system capable of selecting and operating control processes and strategies”, as Baddeley [2] pointed out in his 1992 classic. Later research detailed that the contents in the working memory decay over time [5], unless are kept via rehearsal [3], i.e. paying attention to and refreshing the information in the mind. Then the overlooked information is constantly updated with relevant items from long-term memory by retrieval competition [52], collecting sufﬁcient information for reasoning in the working memory.
The analogy between BERT and working memory inspires us with the CogLTX framework to Cognize
Long TeXts like human. The basic philosophy behind CogLTX is rather concise — reasoning over the concatenation of key sentences (Figure 2) — while compact designs are demanded to bridge the gap between the reasoning processes of machine and human.
The critical step in CogLTX is MemRecall, the process to identify relevant text blocks by treating the blocks as episodic memories. MemRecall imitates the working memory on retrieval competition, rehearsal and decay, facilitating multi-step reasoning. Another BERT, termed judge, is introduced to score the relevance of blocks and trained jointly with the original BERT reasoner. Moreover,
CogLTX can transform task-oriented labels to relevance annotations by interventions to train judge.
Our experiments demonstrate that CogLTX outperforms or achieves comparable performance with the state-of-the-art results on four tasks, including NewsQA [44], HotpotQA [53], 20NewsGroups [22] and Alibaba, with constant memory consumption regardless of the length of text. 2