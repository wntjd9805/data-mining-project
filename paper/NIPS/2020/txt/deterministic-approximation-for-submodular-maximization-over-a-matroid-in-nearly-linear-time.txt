Abstract
We study the problem of maximizing a non-monotone, non-negative submodular function subject to a matroid constraint. The prior best-known deterministic ap-proximation ratio for this problem is 1 4 − (cid:15) under O((n4/(cid:15)) log n) time complexity.
We show that this deterministic ratio can be improved to 1 4 under O(nr) time com-plexity, and then present a more practical algorithm dubbed TwinGreedyFast which achieves 1 4 − (cid:15) deterministic ratio in nearly-linear running time of O( n (cid:15) ). Our approach is based on a novel algorithmic framework of simultaneously construct-ing two candidate solution sets through greedy search, which enables us to get improved performance bounds by fully exploiting the properties of independence systems. As a byproduct of this framework, we also show that TwinGreedyFast 2p+2 − (cid:15) deterministic ratio under a p-set system constraint with the same achieves time complexity. To showcase the practicality of our approach, we empirically evaluated the performance of TwinGreedyFast on two network applications, and observed that it outperforms the state-of-the-art deterministic and randomized algorithms with efﬁcient implementations for our problem. (cid:15) log r 1 1

Introduction
Submodular function maximization has aroused great interests from both academic and industrial societies due to its wide applications such as crowdsourcing [47], information gathering [35], sensor placement [33], inﬂuence maximization [37, 48] and exemplar-based clustering [30]. Due to the large volume of data and heterogeneous application scenarios in practice, there is a growing demand for designing accurate and efﬁcient submodular maximization algorithms subject to various constraints.
Matroid is an important structure in combinatorial optimization that abstracts and generalizes the notion of linear independence in vector spaces [8]. The problem of submodular maximization subject to a matroid constraint (SMM) has attracted considerable attention since the 1970s. When the considered submodular function f (·) is monotone, the classical work of Fisher et al. [27] presents a deterministic approximation ratio of 1/2, which keeps as the best deterministic ratio during decades until Buchbinder et al. [14] improve this ratio to 1/2 + (cid:15) very recently.
When the submodular function f (·) is non-monotone, the best-known deterministic ratio for the SMM problem is 1/4 − (cid:15), proposed by Lee et al. [38], but with a high time complexity of O((n4 log n)/(cid:15)).
Recently, there appear studies aiming at designing more efﬁcient and practical algorithms for this problem. In this line of studies, the elegant work of Mirzasoleiman et al. [44] and Feldman et al.
[25] proposes the best deterministic ratio of 1/6 − (cid:15) and the fastest implementation with an expected ratio of 1/4, and their algorithms can also handle more general constraints such as a p-set system constraint. For clarity, we list the performance bounds of these work in Table 1. However, it is still unclear whether the 1/4 − (cid:15) deterministic ratio for a single matroid constraint can be further improved, or whether there exist faster algorithms achieving the same 1/4 − (cid:15) deterministic ratio. 34th Conference on Neural Information Processing Systems (NeurIPS 2020), Vancouver, Canada.
Table 1: Approximation for Non-monotone Submodular Maximization over a Matroid
Algorithms
Lee et al. [38]
Mirzasoleiman et al. [44]
Feldman et al. [25]
Buchbinder and Feldman [10]
Ratio
Time Complexity 1/4 − (cid:15) O((n4 log n)/(cid:15)) 1/6 − (cid:15) O(nr + r/(cid:15)) 1/4 0.385
O(nr) poly(n)
Type
Deterministic
Deterministic
Randomized
Randomized
TwinGreedy (Alg. 1)
TwinGreedyFast (Alg. 2) 1/4
Deterministic 1/4 − (cid:15) O((n/(cid:15)) log(r/(cid:15))) Deterministic
O(nr)
In this paper, we propose an approximation algorithm TwinGreedy (Alg. 1) with a deterministic 1/4 ratio and O(nr) running time for maximizing a non-monotone, non-negative submodular function subject to a matroid constraint, thus improving the best-known 1/4 − (cid:15) deterministic ratio of Lee et al.
[38]. Furthermore, we show that the solution framework of TwinGreedy can be implemented in a more efﬁcient way, and present a new algorithm dubbed TwinGreedyFast with 1/4 − (cid:15) deterministic ratio and nearly-linear O( n (cid:15) ) running time. To the best of our knowledge, TwinGreedyFast is the fastest algorithm achieving the 1 4 − (cid:15) deterministic ratio for our problem in the literature. As a byproduct, we also show that TwinGreedyFast can be used to address a more general p-set system constraint and achieves a 2p+2 − (cid:15) approximation ratio with the same time complexity. (cid:15) log r 1
It is noted that most of the current deterministic algorithms for non-monontone submodular maxi-mization (e.g., [25, 44, 45]) leverage the “repeated greedy-search” framework proposed by Gupta et al. [31], where two or more candidate solution sets are constructed successively and then an unconstrained submodular maximization (USM) algorithm (e.g., [12]) is called to ﬁnd a good so-lution among the candidate sets and their subsets. Our approach is based on a novel “simultaneous greedy-search” framework different from theirs, where two disjoint candidate solution sets S1 and S2 are built simultaneously with only single-pass greedy searching, without calling a USM algorithm.
We call these two solution sets S1 and S2 as “twin sets” because they “grow up” simultaneously.
Thanks to this framework, we are able to bound the “utility loss” caused by greedy searching using
S1 and S2 themselves, through a careful classiﬁcation of the elements in an optimal solution O and mapping them to the elements in S1 ∪ S2. Furthermore, by incorporating a thresholding method in-spired by Badanidiyuru and Vondrák [2] into our framework, the TwinGreedyFast algorithm achieves nearly-linear time complexity by only accepting elements whose marginal gains are no smaller than given thresholds.
We evaluate the performance of TwinGreedyFast on two applications: social network monitoring and multi-product viral marketing. The experimental results show that TwinGreedyFast runs more than an order of magnitude faster than the state-of-the-art efﬁcient algorithms for our problem, and also achieves better solution quality than the currently fastest randomized algorithms in the literature. 1.1