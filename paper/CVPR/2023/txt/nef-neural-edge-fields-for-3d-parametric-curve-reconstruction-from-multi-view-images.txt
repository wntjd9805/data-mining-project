Abstract
We study the problem of reconstructing 3D feature curves of an object from a set of calibrated multi-view im-ages. To do so, we learn a neural implicit ﬁeld repre-senting the density distribution of 3D edges which we re-fer to as Neural Edge Field (NEF). Inspired by NeRF [20],
NEF is optimized with a view-based rendering loss where a 2D edge map is rendered at a given view and is com-pared to the ground-truth edge map extracted from the im-age of that view. The rendering-based differentiable opti-mization of NEF fully exploits 2D edge detection, without needing a supervision of 3D edges, a 3D geometric oper-ator or cross-view edge correspondence. Several technical designs are devised to ensure learning a range-limited and view-independent NEF for robust edge extraction. The ﬁ-nal parametric 3D curves are extracted from NEF with an iterative optimization method. On our benchmark with syn-thetic data, we demonstrate that NEF outperforms exist-ing state-of-the-art methods on all metrics. Project page: https://yunfan1202.github.io/NEF/. 1.

Introduction
Feature curves “deﬁne” 3D shapes to an extent, not only geometrically (surface reconstruction from curve net-works [15, 16]) but also perceptually (feature curve based shape perception [4, 35]). Therefore, feature curve extrac-*Corresponding author. tion has been a long-standing problem in both graphics and vision. Traditional approaches to 3D curve extraction often work directly on 3D shapes represented by, e.g., polygo-nal meshes or point clouds. Such approaches come with a major difﬁculty: Sharp edges may be partly broken or com-pletely missed due to imperfect 3D acquisition and/or re-construction. Consequently, geometrically-based methods, even the state-of-the-art ones, are sensitive to parameter set-tings and error-prune near rounded edges, noise, and sparse data. Recently, learning-based methods are proposed to ad-dress these issues but with limited generality [18,19,33,39].
In many cases, edges are visually prominent and easy to detect in the 2D images of a 3D shape. To resolve occlusion, one may think of 3D curve reconstruction from multi-view edges. This solution, however, relies strongly on cross-view edge correspondence which itself is a highly difﬁcult prob-lem [28]. This explains why there is rarely a work on multi-view curve reconstruction even in the deep learning era. We ask this question: Can we learn 3D feature curve extraction directly from the input of multi-view images?
In this work, we try to answer the question through learn-ing a neural implicit ﬁeld representing the density distribu-tion of 3D edges from a set of calibrated multi-view im-ages, inspired by the recent success of neural radiance ﬁeld (NeRF) [20]. We refer to this edge density ﬁeld as Neu-ral Edge Field (NEF). Similar to NeRF, NEF is optimized with a view-based rendering loss where a 2D edge map is rendered at a given view and is compared to the ground-truth edge map extracted from the image of that view. The
volumetric rendering is based on edge density and color (gray-scale) predicted by MLPs along viewing rays. Dif-ferent from NeRF, however, our goal is merely to optimize the NEF which is later used for extracting parametric 3D curves; no novel view synthesis is involved. The rendering-based differentiable optimization of 3D edge density fully exploits 2D edge detection, without needing a 3D geomet-ric operator or cross-view edge correspondence. The latter is implicitly learned with multi-view consistency.
Directly optimizing NEF as NeRF-like density is prob-lematic since the range of density can be arbitrarily large and different from scene to scene, and it is hard to select a proper threshold to extract useful geometric shapes (e.g., 3D surfaces for NeRF and 3D edges for NEF). Moreover,
NeRF density usually does not approximate the underlying 3D shape well due to noise. Therefore, we seek for conﬁn-ing the edge density in the range of [0, 1] through learning a mapping function with a learnable scaling factor to map the edge density to the actual NEF density. By doing so, we can easily choose a threshold to extract edges robustly from the optimized edge density.
Another issue with NEF optimization is the incompatible visibility of the edge density ﬁeld and the edges detected in images. While the former is basically a wireframe represen-tation of the underlying 3D shape and all edges are visible from any view (i.e., no self-occlusion), edges in 2D images can be occluded by the object itself. This leads to inconsis-tent supervisions of different views with different visibility and may cause false negative: An edge that should have been present in NEF according to one view visible to the edge may be suppressed by other views invisible. To ad-dress this issue, we opt to 1) impose consistency between density and color in NEF and 2) give less punishment on non-edge pixels in the rendering loss, to allow the NEF to keep all edges seen from all views. This essentially makes
NEF view-independent which is reasonable.
Having obtained the edge density, we ﬁt parametric curves by treating the 3D density volume as a point cloud of edges. We optimize the control points of curves in a coarse-to-ﬁne manner. Since initialization is highly important to such a non-convex optimization, we ﬁrst apply line ﬁtting in a greedy fashion to cover most points. Based on the ini-tialization, we then upgrade lines to cubic B´ezier curves by adding extra control points and optimize all curves simulta-neously with an extra endpoint regularization.
We build a benchmark with a synthetic dataset consist-ing of 115 CAD models with complicated shape structures from ABC dataset [14] and utilize BlenderProc [7] to ren-der posed images. Extensive experiments on the proposed dataset show that NEF, which is self-trained with only 2D supervisions, outperforms existing state-of-the-art methods on all metrics. Our contributions include:
• A self-supervised 3D edge detection from multi-view 2D edges based neural implicit ﬁeld optimization.
• Several technical designs to ensure learning a range-limited and view-independent NEF and an iterative op-timization strategy to reconstruct parametric curves.
• A benchmark for evaluating and comparing various edge/curve extraction methods. 2.