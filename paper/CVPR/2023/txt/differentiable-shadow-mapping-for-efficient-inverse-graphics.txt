Abstract
We show how shadows can be efficiently generated in differentiable rendering of triangle meshes. Our central ob-servation is that pre-filtered shadow mapping, a technique for approximating shadows based on rendering from the perspective of a light, can be combined with existing dif-ferentiable rasterizers to yield differentiable visibility infor-mation. We demonstrate at several inverse graphics prob-lems that differentiable shadow maps are orders of mag-nitude faster than differentiable light transport simulation with similar accuracy – while differentiable rasterization without shadows often fails to converge. 1.

Introduction
Differentiable renderers have become an essential tool for solving inverse problems in computer vision. They cur-rently come in two flavors: (1) forward rasterization us-ing local shading models [9, 10, 39] and (2) path tracing and/or Monte Carlo methods for global light transport sim-ulation [22, 36, 53, 76]. While local methods are orders of magnitude faster, they lack effects of global light interaction such as shadows, caustics, or indirect illumination.
Modern methods in real-time graphics can generate sur-prisingly realistic images by using efficient approximations of global effects. The single most important aspect for in-creasing the realism of local shading is the consideration of shadows (see Figure 1): for each pixel to be shaded, check if the path to a light source is unobstructed before evaluating a local shading model. Doing this accurately is costly and many approximate techniques have been developed. Our central observation is that one of the oldest and most widely used, shadow maps [71] (see Section 3), can be adapted to work in differentiable rendering frameworks.
In Section 4 we explain how (certain approximations of) shadow mapping can be differentiated, exploiting ex-isting differentiable rasterizers. Our main idea is simi-lar to shadow maps: exploit efficient rasterization from the light’s point of view.
For differentiable shadows this means: Existing differentiable rasterizers handle dis-Figure 1. Adding shadows (middle) to local shading (left) is a significant step towards global light transport simulation (right).
Figure 2. Complex scene (330k triangles) rendered in real time with our differentiable shadow mapping. It shows self-shadowing of objects, shadowing between objects, and colored surfaces. Fi-nite differences and our automatic derivatives w.r.t. movement of the light (note the non-zero derivatives at shadow boundaries). continuities of primary visibility along primitive borders; we use this machinery to handle dis-continuities of secondary visibility along shadow borders. The resulting images contain shadows and are differentiable (see Figure 2). For many inverse graph-ics problems the level of realism they provide will suffice, while being gener-ated significantly faster than with global methods. This is important for machine learning tasks, where the renderings (and their derivatives w.r.t. scene parameters) are computed repeatedly. We provide de-tails of the implementation and how parameters affect opti-mization based on target images in Section 5.
Given the importance of shadows for realistic image syn-thesis, it is unsurprising that many inverse problems heavily depend on them. We demonstrate the trade-off and possi-billities of differentiable shadow mappings in several appli-cations, ranging from pose estimation, over different types of geometry reconstruction, to interactive editing by manip-ulating shadows (Section 6).
The main idea of this work, using existing differentiable rendering frameworks that readily resolve the problem of visibility discontinuities for dealing with discontinuities of secondary rays, may be useful for various other scenarios beyond shadows. We elaborate on this and other immediate consequences of our approach in Section 7. 2.