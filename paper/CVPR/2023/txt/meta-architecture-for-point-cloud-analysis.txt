Abstract
Recent advances in 3D point cloud analysis bring a di-verse set of network architectures to the field. However, the lack of a unified framework to interpret those networks makes any systematic comparison, contrast, or analysis challenging, and practically limits healthy development of the field. In this paper, we take the initiative to explore and propose a unified framework called PointMeta, to which the popular 3D point cloud analysis approaches could fit.
This brings three benefits. First, it allows us to compare different approaches in a fair manner, and use quick ex-periments to verify any empirical observations or assump-tions summarized from the comparison. Second, the big pic-ture brought by PointMeta enables us to think across differ-ent components, and revisit common beliefs and key design decisions made by the popular approaches. Third, based on the learnings from the previous two analyses, by doing simple tweaks on the existing approaches, we are able to derive a basic building block, termed PointMetaBase.
It shows very strong performance in efficiency and effective-ness through extensive experiments on challenging bench-marks, and thus verifies the necessity and benefits of high-level interpretation, contrast, and comparison like Point-Meta.
In particular, PointMetaBase surpasses the previ-ous state-of-the-art method by 0.7%/1.4/%2.1% mIoU with only 2%/11%/13% of the computation cost on the S3DIS datasets. The code and models are available at https:
//github.com/linhaojia13/PointMetaBase.
*Corresponding author: rrji@xmu.edu.cn
Figure 1. Segmentation performance of PointMetaBase on S3DIS
[1]. PointMetaBase surpasses the state-of-the-art method Point-NeXt [16] significantly with a large FLOPs reduction. 1.

Introduction
In the past two decades, the popularity of 3D data ac-quisition technology has led to great interest in point cloud analysis. Unlike images, point clouds are inherently sparse, unordered, and irregular. These characteristics make it challenging for the powerful convolutional neural networks (CNN) [4, 18] to extract useful information from point clouds. Early studies attempt to convert the point cloud into grids by either voxelization or 2D projections, such that the standard CNN can be applied, but the applications are lim-ited by the extra computation and information loss.
With the introduction of permutation equivariance and invariance by PointNet [13] and PointNet++ [14], it is pos-sible to use CNNs to process point clouds in their unstruc-tured format. Following PointNet++ [14], many point-based networks have been introduced, most of which fo-cus on the development of complex building blocks to ex-tract local features, such as the X − Conv convolution in
PointCNN [22] and the self-attention layer in Point Trans-former [32]. Although brought significant performance gains, these models are very complicated. On one hand, this makes the approaches computational demanding and thus limited in applications. On the other hand, it also gives ex-tra challenges in systematic comparison and analysis among the models, and thus impacts efficient development of the field, which ideally would benefit from theoretic and empir-ical guidance.
The community is well aware of this issue, and research efforts have been put on looking for a unified perspective to compare these methods and identify the most crucial imple-mentation details. PosPool [10] and PointNeXt [16] take a step toward this goal. Adopting a deep residual architecture as the base network, PosPool [10] evaluates the representa-tive building blocks [8, 14, 22, 26] and finds that they per-form similarly well. PointNeXt [16] revisits the improved training and scaling strategies adopted by previous SotA methods [7, 15, 22, 32] and tweaks the early model Point-Net++ [14] with the learnings, which achieves state-of-the-art performance. Both of them give insights and inspira-tions to the community via dedicated experiment designs and extensive empirical analysis. However, neither of them provides a framework that is general enough to fit a broad range of point cloud analysis approaches, such that large scale comparison and contrast could be done.
In this paper, we argue that if viewed from the perspec-tive of basic building blocks, the majority of existing ap-proaches could be fit into a single meta architecture (Sec. 3). We call it PointMeta. PointMeta abstracts the compu-tation pipeline of the building blocks for point cloud analy-sis into four meta functions: a neighbor update function, a neighbor aggregation function, a point update function and a position embedding function (implicit or explicit). As will be discussed in more details in the next sections, this frame-work brings three benefits, which are also our core technical contributions:
• In the dimension of models, it allows us to compare and contrast different models in a fair manner. So it becomes practical to observe and summarize learnings and assumptions, whose correctness could be further verified through experiments with variables controlled under the same framework. For example, among the systematic analysis on all the components across pop-ular models, we found for the positional embedding function, explicit positional embedding is empirically the best choice (Sec. 4.2). a higher level view across components, and thus to re-visit the common beliefs and design decisions of the existing approaches. For example, despite the com-mon perception, we find that the neighbor aggregation blocks may collaborate or compete with the learned neighbor features (Sec. 4.3), and thus should be de-signed carefully.
• Based on the learnings from the previous two di-mensions, we are then able to do simple tweaks on the building blocks to apply the best practices (Sec. 4.5). The result building block, PointMetaBase, achieves very strong performance, surpassing the pre-vious state-of-the-art method [16] by 0.7%/1.4/%2.1% mIoU with only 2%/11%/13% of the computation cost on S3DIS [1] (Fig. 1), and can act as a baseline for further research. 2.