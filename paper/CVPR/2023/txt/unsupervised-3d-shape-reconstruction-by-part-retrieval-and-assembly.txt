Abstract
Representing a 3D shape with a set of primitives can aid perception of structure, improve robotic object manipula-tion, and enable editing, stylization, and compression of 3D shapes. Existing methods either use simple paramet-ric primitives or learn a generative shape space of parts.
Both have limitations: parametric primitives lead to coarse approximations, while learned parts offer too little control over the decomposition. We instead propose to decompose shapes using a library of 3D parts provided by the user, giving full control over the choice of parts. The library can contain parts with high-quality geometry that are suit-able for a given category, resulting in meaningful decom-positions with clean geometry. The type of decomposition can also be controlled through the choice of parts in the li-brary. Our method works via a unsupervised approach that iteratively retrieves parts from the library and refines their placements. We show that this approach gives higher recon-struction accuracy and more desirable decompositions than existing approaches. Additionally, we show how the decom-position can be controlled through the part library by using different part libraries to reconstruct the same shapes. 1.

Introduction
The ability to compactly represent a 3D shape as a com-bination of primitive elements has applications in multiple domains. In computer vision, the ability to automatically decompose a shape into parts can aid machine perception of the 3D structure of objects, which can in turn help au-tonomous agents plan how to manipulate such objects.
In computer graphics, a combination of primitives can be used as a compressed geometry representation, as a way to abstract, stylize, or edit a 3D shape by allowing users to alter the underlying primitive library. Ideally, a system that performs this kind of shape decomposition should be able to do so without supervision in the form of ground-truth decompositions, as such data is rarely available at scale.
Past research in vision and graphics has studied this unsupervised shape decomposition problem.
Initially, re-searchers sought methods for decomposing 3D shapes into sets of simple parametric primitives, such as cuboids or su-perquadric surfaces [18,21,23,26]. These methods produce clean, parametric geometry as output, and the choice of primitive type allows a small degree of user control over the decomposition. However, parametric primitives produce only a coarse approximation of the input shape, which may not be desirable in all applications. Thus, more recent work has investigated unsupervised decomposition of shapes into arbitrarily-shaped primitives whose geometries are deter-mined by a neural network [4, 10, 17]. These methods pro-duce a set of “neural primitives” whose union closely ap-proximates the input shape. However, the geometries of these primitives may contain artifacts (e.g. bumps, blobs).
Further, these methods offer little to no control over the type of decomposition they produce – the network outputs what-ever primitives it thinks are best to reconstruct the input shape since it lacks access to a supervised part prior.
Is it possible to obtain a decomposition of a 3D shape whose primitives exhibit clean geometry and closely recon-struct the input shape, while also providing more control
over the type of decomposition produced? This is possible if, rather than using simple parametric primitives or arbi-trary neural primitives, one chooses a middle point between these two extremes: reconstruct an input shape by retrieving and assembling primitives from a library of pre-defined 3D parts. This retrieve-and-assemble approach has several ad-vantages. First, the parts in the library can be high-quality 3D meshes, guaranteeing clean geometry as output. Sec-ond, a large part library can contain parts that are good geometric matches for different regions of various shapes, meaning that accurate reconstructions of input shapes are possible. Finally, this approach offers a high degree of con-trollability, as the user can change the part library to produce different decompositions of the same input shape.
In this paper, we present a method for unsupervised de-composition of 3D shapes using a user-defined library of parts. Finding a subset of parts from a large part library which best reconstructs an input shape is a large-scale com-binatorial search problem. To make this problem tractable, we represent the library of parts on a continuous manifold by training a part autoencoder. This continuous representa-tion of the part library allows us jointly optimize for the identities and poses of parts which reconstruct the input shape. To escape the many worst of local optimas in this optimization landscape, the algorithm periodically uses its current predicted set of parts to segment the input shape; these segments are then re-encoded into the part feature manifold to produce a new estimate of the parts that best reconstruct the input shape. This data-driven, discontinu-ous jump in the optimization state is similar to stages from other non-gradient-based algorithms for global optimiza-tion or latent variable estimation, including the mean shift step from the mean shift algorithm and the E-step from ex-pectation maximization [2].
Our algorithm can be run independently for any individ-ual target shape, allowing it to work in a “zero-shot” set-ting. When a larger dataset of related shapes is available, we can also optimize for their part decomposition in advance (a
“training” phase) and then perform fast decomposition of a new shape from that category by initializing its decomposi-tion using its nearest neighbor from the “training” set.
We evaluate our algorithm by using it to reconstruct shapes from point clouds, using parts from the PartNet dataset. We compare to the recent Neural Parts unsuper-vised decomposition system [17] and show that our al-gorithm produces qualitatively more desirable decomposi-tions that also achieve higher reconstruction accuracy. We demonstrate the control offered by our method by show-ing how it is possible to reconstruct shapes from one cat-egory using parts from another (e.g. make a chair out of lamp parts). This also has application for 3D graphics con-tent creation, which we demonstrate by reconstructing tar-get shapes using parts from a modular 3D asset library.
In summary, our contribution is an unsupervised algo-rithm which retrieves and poses 3D parts to reconstruct in-put 3D shapes. We will release our code upon publication. 2.