Abstract
Dataset Distillation (DD), a newly emerging field, aims at generating much smaller but efficient synthetic training datasets from large ones. Existing DD methods based on gradient matching achieve leading performance; however, they are extremely computationally intensive as they re-quire continuously optimizing a dataset among thousands of randomly initialized models. In this paper, we assume that training the synthetic data with diverse models leads to better generalization performance. Thus we propose two model augmentation techniques, i.e. using early-stage models and parameter perturbation to learn an informative synthetic set with significantly reduced training cost. Exten-sive experiments demonstrate that our method achieves up to 20× speedup and comparable performance on par with state-of-the-art methods.
Figure 1.
Performances of condensed datasets for training
ConvNet-3 v.s. GPU hours to learn the 10 images per class con-densed CIFAR-10 datasets with a single RTX-2080 GPU. Ours5,
Ours10, and Ours20 accelerates the training speed of the state-of-the-art method IDC [22] 5×, 10×, and 20× faster. 1.

Introduction
Dataset Distillation (DD) [3, 48] or Dataset Condensa-tion [55, 56], aims to reduce the training cost by generat-ing a small but informative synthetic set of training exam-ples; such that the performance of a model trained on the small synthetic set is similar to that trained on the origi-nal, large-scale dataset. Recently, DD has become an in-creasingly more popular research topic, and has been ex-plored in a variety of contexts, including federated learn-ing [17, 42], continual learning [33, 40], neural architecture search [43, 57], medical computing [25, 26] and graph neu-ral networks [21, 30].
DD has been typically cast as a meta-learning prob-lem [16] involving bilevel optimization.
For instance,
Wang et al. [48] formulate the network parameters as a function of the learnable synthetic set in the inner-loop
*Equal contribution.
†Corresponding author: Dongkuan Xu. optimization; then optimize the synthetic set by minimiz-ing classification loss on the real data in the outer-loop.
This recursive computation hinders its application to real-world large-scale model training, which involves thousands to millions of gradient descent steps. Several methods have been proposed to improve the DD method by introducing ridge regression loss [2, 36], trajectory matching loss [3], etc. To avoid unrolling the recursive computation graph,
Zhao et al. [57] propose to learn synthetic set by matching gradients generated by real and synthetic data when training deep networks. Based on this surrogate goal, several meth-ods have been proposed to improve the informativeness or compatibility of synthetic datasets from other perspectives, ranging from data augmentation [55], contrastive signal-ing [24], resolution reduction [22], and bit encoding [41].
Although model training on a small synthetic set is fast, the dataset distillation process is typically expensive. For instance, the state-of-the-art method IDC [22] takes ap-proximately 30 hours to condense 50,000 CIFAR-10 im-1
ages into 500 synthetic images with a single RTX-2080
GPU, which is equivalent to the time it takes to train 60
ConvNet-3 models on the original dataset. Furthermore, the distillation time cost will rapidly increase for large-scale datasets e.g. ImageNet-1K, which prevents its application in computation-limited environments like end-user devices.
Prior work [56] on reducing the distillation cost results in significant regression from the state-of-the-art performance.
In this paper, we aim to speed up the dataset distillation process, while preserving even improving the testing per-formance over state-of-the-art methods.
Prior works are computationally expensive as they fo-cus on generalization ability such that the learned synthetic set is useful to train many different networks as opposed to a targeted network. This requires optimizing the syn-thetic set over thousands of differently initialized networks.
For example, IDC [22] learns the synthetic set over 2000 randomly initialized models, while the trajectory matching method (TM) [3] optimizes the synthetic set for 10000 dis-tillation steps with 200 pre-trained expert models. Dataset distillation, which learns the synthetic data that is generaliz-able to unseen models, can be considered as an orthogonal approach to model training which learns model parameters that are generalizable to unseen data. Similarly, training the synthetic data with diverse models leads to better general-ization performance. This intuitive idea leads to the follow-ing research questions:
Question 1. How to design the candidate pool of models to learn synthetic data, for instance, consisting of randomly initialized, early-stage or well-trained models?
Prior works [3, 22, 48, 57] use models from all training stages. The underlying assumption is that models from all training stages have similar importance. Zhao et al. [56] show that synthetic sets with similar generalization perfor-mance can be learned with different model parameter dis-tributions, given an objective function in the form of feature distribution matching between real and synthetic data. In this paper, we take a closer look at this problem and show that learning synthetic data on early-stage models is more efficient for gradient/parameter matching based dataset dis-tillation methods.
Question 2. Can we learn a good synthetic set using only a few models?
Our goal is to learn a synthetic set with a small number of (pre-trained) models to minimize the computational cost.
However, using fewer models leads to poor generalization ability of the synthetic set. Therefore, we propose to apply parameter perturbation on selected early-stage models to incorporate model diversity and improve the generalization ability of the learned synthetic set.
In a nutshell, we propose two model augmentation techniques to accelerate the training speed of dataset dis-tillation, namely using early-stage models and parameter perturbation to learn an informative synthetic set with sig-nificantly less training cost. As illustrated in Fig. 1., our method achieves up to 20× speedup and comparable per-formance on par with state-of-the-art DD methods. 2.