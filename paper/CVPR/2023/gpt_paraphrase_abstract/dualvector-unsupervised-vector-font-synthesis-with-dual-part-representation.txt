The automatic generation of fonts is a valuable tool for typeface design. However, current methods that treat glyphs as pixelated images often result in scaling artifacts and quality loss after vectorization. Conversely, existing vector font synthesis techniques either fail to represent shapes concisely or require vector supervision during training. To improve the quality of vector font synthesis, we propose a new approach called DualVector. This method represents glyphs as a combination of "positive" and "negative" path pairs, allowing for boolean operations to obtain the glyph contour. We initially learn this representation solely from glyph images and then refine the contour by aligning it with an image representation to enhance details. DualVector surpasses state-of-the-art methods in both quantitative and qualitative vector font synthesis. Additionally, our synthesized vector fonts can be easily converted to popular digital font formats such as TrueType Font for practical usage. The code for DualVector is available at https://github.com/thuliu-yt16/dualvector.