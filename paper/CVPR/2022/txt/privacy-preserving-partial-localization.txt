Abstract
Recently proposed privacy preserving solutions for cloud-based localization rely on lifting traditional point-based maps to randomized 3D line clouds. While the lifted representation is effective in concealing private informa-tion, there are two fundamental limitations. First, without careful construction of the line clouds, the representation is vulnerable to density-based inversion attacks. Secondly, af-ter successful localization, the precise camera orientation and position is revealed to the server. However, in many scenarios, the pose itself might be sensitive information.
We propose a principled approach overcoming these lim-itations, based on two observations. First, a full 6 DoF pose is not always necessary, and in combination with egomotion tracking even a one dimensional localization can reduce un-certainty and correct drift. Secondly, by lifting to parallel planes instead of lines, the map only provides partial con-straints on the query pose, preventing the server from know-ing the exact query location. If the client requires a full 6
DoF pose, it can be obtained by fusing the result from multi-ple queries, which can be temporally and spatially disjoint.
We demonstrate the practical feasibility of this approach and show a small performance drop compared to both the conventional and privacy preserving approaches. 1.

Introduction
Over the last years, an increasing number of indus-trial solutions have emerged for cloud-based localization and mapping in mixed reality and robotics (e.g., Microsoft
Azure Spatial Anchors [23], Facebook LiveMaps [1], or
Google VPS [35]). The need for cloud-based solutions is primarily motivated by the requirement for scalability as well as to enable shared experiences and crowd-sourced mapping. This trend, however, raises a host of privacy con-cerns [25, 33, 36, 58], as localization and mapping systems typically rely on camera images as the primary sensory in-formation. The ﬁrst works on tackling the privacy issues are based on the principle of lifting traditional point-based features to lines to conceal the appearance of images and maps [12, 17, 50, 53, 54].
Figure 1. System architecture: We lift the original point cloud map to privacy-preserving parallel plane maps to only allow con-straints in a single direction. This can be duplicated with multiple maps and localization services to accumulate different constraints locally. The clients send their localization queries to each server, which compute partial camera localization poses. Only the client can assemble the full localization result from the partial answers.
Although we need three orthogonal maps for full 6 DoF pose es-timation, additional constraints, such as localization in the ground plane, can reduce this requirement.
As already mentioned in the ﬁrst works by Speciale et al. [53, 54], their proposed privacy-preserving representa-tion of maps comes with two fundamental limitations. First, without careful construction, their maps are easily attack-able using a density analysis on the line or plane clouds, as recently also studied in more detail by Chelani et al. [8].
Sparsifying the line cloud is one mitigation to this prob-lem [8, 53] but comes with signiﬁcant performance trade-offs in terms of recall and accuracy of the localization re-sults. Second, after successful server-side localization in privacy preserving line cloud maps, the client reveals their precise camera location in the scene. In many scenarios, the user’s location itself is sensitive information that should be protected [2, 4, 16, 55], especially when tracked over time.
The method presented in this paper is orthogonal to previ-ous works in the sense that it explicitly ignores protection of the scene appearance, but prevents leaking the user’s precise location to the server. To this end, we accept the potential privacy risks of sending a 3D query point cloud that were previously discussed and tackled [34, 53].
An important observation is that, depending on the ap-plication, it is often not even necessary to estimate the full 6 degree of freedom (DoF) pose all the time. While appli-cations like augmented reality can only function with the a fully known pose, many common localization tasks are solved on a restricted manifold. As a classical example, navigation for autonomous driving is generally restricted to the ground plane and therefore rarely beneﬁts from also es-timating the vertical component. Furthermore, local ego-motion tracking is a crucial part of many real-time local-ization systems, where the tracking-based pose estimate is globally corrected using less frequent full localization queries. In these cases, the current pose is generally already known up to some uncertainty. By only correcting the pose estimate in one dimension at a time, the potentially revealed pose information is signiﬁcantly reduced. In the scenarios where we do not require full 6 DoF poses, we can further push the ideas of Speciale et al. [53, 54] and remove infor-mation from our map representations. Our main idea is to remove the constraints along two dimensions in the map, so that each query can only be localized along the remaining dimension. Instead of lifting each point to a randomly ori-ented line, we add another degree of freedom and lift the points to parallel planes. As such, we can only observe the motion orthogonal to the planes. Estimating the pose against this map using a local point cloud allows us to de-termine three of the six degrees of freedom, namely one row of the rotation matrix and a single translation component.
Combining multiple partial queries in different direc-tions enables us to obtain a 2D or full 3D pose. To maintain the privacy of the queries, we assume that these cannot be co-registered on the server-side. This can be achieved by distributing the partial maps to different service providers that must not be able to associate corresponding queries (e.g., must not communicate or cooperate with each other).
A practical example could be a theme park aiming to pro-vide visual localization for AR experiences to their guests using external infrastructure. The park would be respon-sible for creating the plane maps and distributing them to three independent cloud service providers. Co-registration can also be hindered client-side by submitting temporally or spatially disjoint queries, where only the client knows the relative pose between them (e.g., obtained via local ego-motion tracking). In some settings, other client-side infor-mation allows for recovering the full pose from the 1D lo-calization. For example, a car driving in a GPS-denied ur-ban canyon might know which street it is currently on, but not its exact position. The remaining degree of freedom can be recovered using our method with a single partial query.
In contrast to the random line clouds presented in [53], our maps can be thought of as a set of parallel planes. This representation is inherently safe from density-based attacks as proposed by Chelani et al. [8]. With this work, we hope to make another important step to allow for a widespread adoption of cloud localization services in mixed reality and robotics.
In summary, this paper makes the following contribu-tions: (i) We present a principled approach with stronger guarantees on the privacy-preservation of the map by pre-venting known vulnerabilities of the existing approaches. (ii) Our work is the ﬁrst to provide location privacy in the domain of image-based localization. (iii) Extensive experi-ments on real-world datasets show only minor accuracy and recall trade-offs compared to the previous approaches. This underlines the high practical relevance of our work. 2.