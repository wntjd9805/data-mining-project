Abstract
We propose the deep progressive image compression using trit-planes (DPICT) algorithm, which is the first learning-based codec supporting fine granular scalability (FGS). First, we transform an image into a latent tensor us-ing an analysis network. Then, we represent the latent ten-sor in ternary digits (trits) and encode it into a compressed bitstream trit-plane by trit-plane in the decreasing order of significance. Moreover, within each trit-plane, we sort the trits according to their rate-distortion priorities and trans-mit more important information first. Since the compression network is less optimized for the cases of using fewer trit-planes, we develop a postprocessing network for refining re-constructed images at low rates. Experimental results show that DPICT outperforms conventional progressive codecs significantly, while enabling FGS transmission. Codes are available at https://github.com/jaehanlee-mcl/DPICT. 1.

Introduction
Image compression is a fundamental problem in image processing and analysis. Classical image codecs, such as
JPEG [44], JPEG2000 [37], WebP [18], and BPG [8], have been developed to achieve the goal of efficient data storage and transmission. They contain several modules to process hand-crafted features. For example, for transform coding,
JPEG uses discrete cosine transform, and JPEG2000 adopts wavelet transform.
Recently, with the availability of substantial training data and computing resources, deep learning has been adopted for image compression, as well as other image and vision problems. Some learning-based codecs are based on con-volutional neural networks (CNNs) [5, 6, 26, 30], while oth-ers on recurrent neural networks (RNNs) [19, 24, 40, 41].
In terms of the rate-distortion (RD) performance, recent learning-based codecs [11, 13, 47] are competitive with or even superior to the classical codecs.
Progressive compression, or scalable coding [32], is a crucial issue. A progressive codec encodes an image into
Figure 1. Illustration of progressive reconstruction of the proposed
DPICT algorithm. a single bitstream that can decoded at various bit-rates, as illustrated in Figure 1. There are various terminals from small wearable devices to big TVs, requiring different im-age qualities at different bit-rates. It is inefficient to encode multiple non-scalable bitstreams for these diverse devices.
In contrast, a scalable bitstream can be efficiently truncated at multiple points to reconstruct the scene at different qual-ities. Moreover, when a network has a limited bandwidth, the receiver of a scalable bitstream can first check a pre-view image by receiving a small portion of the bitstream, and then reconstruct a higher quality image by decoding the remaining bits.
There are several learning-based progressive codecs [10, 19,24,40,41], which, however, support coarse granular scal-ability only: a bitstream can be decoded at a limited num-ber of rates. To the best of our knowledge, the proposed algorithm is the first learning-based codec with fine gran-ular scalability (FGS) [28, 36]: a single bitstream can be truncated at any points to reconstruct the scene faithfully.
Furthermore, despite this additional functionality, the pro-posed algorithm provides better RD performance than the conventional learning-based progressive codecs.
In this paper, we propose the deep progressive image codec using trit-planes (DPICT) with FGS. First, we trans-form an image into a latent tensor, each element of which is
represented by ternary digits (trits). Then, we encode the latent tensor trit-plane by trit-plane in the decreasing or-der of significance. Moreover, even in the same trit-plane, we sort the trits according to the RD priorities to transmit more important information first. At the decoder, when fewer trit-planes are used, the reconstructed image is de-graded by quantization errors and contain noisy artifacts. To reduce such artifacts, we also develop postprocessing net-works. Experimental results demonstrate that DPICT out-performs the conventional progressive codecs significantly, while supporting FGS. 2.