Abstract
Several recent works seek to create lightweight deep net-works for video object detection on mobiles. We observe that many existing detectors, previously deemed computa-tionally costly for mobiles, intrinsically support adaptive inference, and offer a multi-branch object detection frame-work (MBODF). Here, an MBODF is referred to as a so-lution that has many execution branches and one can dy-namically choose from among them at inference time to sat-isfy varying latency requirements (e.g. by varying resolution of an input frame). In this paper, we ask, and answer, the wide-ranging question across all MBODFs: How to expose the right set of execution branches and then how to sched-ule the optimal one at inference time? In addition, we un-cover the importance of making a content-aware decision on which branch to run, as the optimal one is conditioned on the video content. Finally, we explore a content-aware scheduler, an Oracle one, and then a practical one, leverag-ing various lightweight feature extractors. Our evaluation shows that layered on Faster R-CNN-based MBODF, com-pared to 7 baselines, our SMARTADAPT achieves a higher
Pareto optimal curve in the accuracy-vs-latency space for the ILSVRC VID dataset. 1.

Introduction
Object detection is arguably one of central problems in computer vision. Much progress has been made over the past few years in deep learning based object detectors. De-spite their impressive accuracy results on standard bench-marks, these models come at a price of their complexity and computational cost. This imposes a major barrier to de-ploy these models under resource-constrained settings with strict latency requirements, such as real-time detection in streaming videos on mobile or embedded devices. Several recent works seek to address this challenge by designing light-weight models on mobiles [11,14,35,44,58], in partic-ular, for video object detection [6, 21, 22, 24]. The assump-tion and the common belief are that the object detectors that are optimized for accuracy, such as Faster R-CNN with a
ResNet-50 backbone, are too expensive for mobile vision.
Indeed, detectors optimized for accuracy are rather com-plex, often trained with different input resolutions, and equipped with multiple stages (e.g. proposal generation).
It is perhaps not surprising that these detectors can adapt to different settings at inference time. Consider the exam-ple of Faster R-CNN [30], one can reduce the input resolu-tion or the number of proposals for a lower latency while still maintaining a reasonable accuracy. Such combina-tions of choices of tunable parameters would constitute a multi-branch object detection framework (MBODF). The
Faster R-CNN detector using a speciﬁc input resolution and a particular number of proposals from our previous example could be considered as one execution branch.
Our key observation is that if one is allowed to select, at inference time, from a large set of ﬁne-grained execu-tion branches, the detection accuracy and latency can be signiﬁcantly improved (see Figure 1). Then, the key re-search questions are: How to expose the right set of exe-cution branches in an existing object detector and then how to schedule the optimal one at inference time?
An ideal scheduler must not only consider the branches in the model and their properties (accuracy and latency), but also the input content. For example, if the input video only contains larger objects, using a lower input resolution for the detector sufﬁces. Another example is using inexpensive tracking to replace the costly detector, if the video content remains mostly stationary. However, the design of such a scheduler is challenging for streaming videos. This is be-cause the scheduler has to “predict” potential future content change in order to select the best branch at the current time.
In this paper, we focus on the challenging and practical task of streaming video object detection on mobile devices, and present a simple adaptive object detection method. Our key innovation is to leverage standard existing object de-tectors (Faster R-CNN, EfﬁcientDet, SSD, YOLO) to con-struct an MBODF for adaptive video object detection. An
MBODF combines an object detector and an object tracker, and provides many execution choices (branches).
We demonstrate that our method, notwithstanding its simplicity, can adapt to a wide range of latency require-ments, ranging from 10 to 50 FPS on a mobile GPU de-vice — the NVIDIA Jetson TX2 (a widely used device for embedded/mobile vision benchmarks [19, 33, 41, 43]) with only a minor accuracy loss. For example, our method when running at 20 FPS in streaming mode on TX2, achieves an mAP of 70% on a large-scale dataset (ImageNet video ob-ject detection benchmark). In contrast, the best performing detector, MEGA [5] that supports streaming videos, has an mAP of 75.4%, and runs only at 1.2 FPS. Further, SMAR-TADAPT achieves 20.9% to 23.6% higher mAP than our previous multi-branch algorithm [17] given the same con-straint on the streaming latency (33-100 msec per frame) (Figure 6, FR+MB vs. FastAdapt).
Next, we uncover the importance of making a content-aware decision on which branch to run, as the optimal one is conditioned on the video content. We explore a content-aware scheduler — an Oracle one, and then a prac-tical one, which uses various light-weight feature extrac-tors, to adapt (at runtime) to the content. We show that our content-aware Oracle scheduler achieves 6.6%–8.3% higher mAP than a content-agnostic one (Table 3, FR+MB+Oracle vs. FR+MB). With our realistic content-aware scheduler (CAS), the gains are more modest, albeit, still present, ranging from 0.1%–2.3% mAP (Table 3, FR+MB+CAS vs.
FR+MB, FastAdapt+CAS vs. FastAdapt). The strength of
SMARTADAPT is due to the synergistic use of a carefully or-chestrated set of features that demonstrate both a low com-putational overhead and high accuracy, and expose a ﬁne-grained set of branches using MBODF.
Thus, our contributions can be summarized as: 1. We point out that modern detectors are intrinsically adap-tive, and can be re-purposed as an MBODF, achieving varying latency and accuracy tradeoffs at inference time, using a set of (individually) proven adaptive attributes. 2. Different from previous solutions [6, 54–56], our work provides a systematic study on the design of MBODF.
The result is SMARTADAPT, which combines a set of knobs (e.g., the input resolution and number of propos-als), and tunes the ranges and step sizes of these knobs in a ﬁne-grained manner. SMARTADAPT enables deploy-ing existing detectors on a mobile device to span a wide range of latency requirements with minor accuracy drops. 3. We show that an MBODF can achieve signiﬁcant perfor-mance gains when the choice of the execution branches is optimally conditioned on the input content (e.g. size and speed of objects). We also take an exploratory step to-wards practical content-aware adaptive object detection. 2.