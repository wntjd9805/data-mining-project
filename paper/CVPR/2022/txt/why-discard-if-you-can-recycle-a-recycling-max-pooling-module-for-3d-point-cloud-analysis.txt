Abstract
In recent years, most 3D point cloud analysis models have focused on developing either new network architec-tures or more efficient modules for aggregating point fea-tures from a local neighborhood. Regardless of the network architecture or the methodology used for improved feature learning, these models share one thing, which is the use of max-pooling in the end to obtain permutation invariant fea-tures. We first show that this traditional approach causes only a fraction of 3D points contribute to the permutation-invariant features, and discards the rest of the points. In order to address this issue and improve the performance of any baseline 3D point classification or segmentation model, we propose a new module, referred to as the Recycling Max-Pooling (RMP) module, to recycle and utilize the features of some of the discarded points. We incorporate a refine-ment loss that uses the recycled features to refine the pre-diction loss obtained from the features kept by traditional max-pooling. To the best of our knowledge, this is the first work that explores recycling of still useful points that are traditionally discarded by max-pooling. We demonstrate the effectiveness of the proposed RMP module by incorporat-ing it into several milestone baselines and state-of-the-art networks for point cloud classification and indoor semantic segmentation tasks. We show that RPM, without any bells and whistles, consistently improves the performance of all the tested networks by using the same base network imple-mentation and hyper-parameters. The code is provided in the supplementary material. 1.

Introduction 3D point cloud data analysis has a wide range of appli-cation areas, including autonomous driving, robotics, and
*The information, data, or work presented herein was funded in part by
National Science Foundation under Grant 1816732 and by the Advanced
Research Projects Agency-Energy (ARPA-E), U.S. Department of Energy, under Award Number DE-AR0000940. The views and opinions of au-thors expressed herein do not necessarily state or reflect those of the United
States Government or any agency thereof.
Figure 1. Motivation. In most point-based models, after several layers of neighbor feature aggregation and learning, an N × M feature matrix is obtained, where N is the number of points and
M is each point’s dimension. Max-pooling is performed at the end to obtain permutation-invariant features. Max-pooling keeps features from only part of the points (red boxes), while discarding some points’ features entirely (all purple rows). simultaneous localization and mapping (SLAM). With the ever-increasing availability of 3D sensors, deep learning-based 3D point cloud processing has made significant strides over the past few years. However, different from 2D structured image data, 3D point cloud data is a set of unordered points, and has varying cardinality. Thus, tra-ditional Convolution Neural Networks (CNNs) cannot be readily applied to 3D point cloud data.
PointNet [12] is a pioneering 3D point cloud anal-ysis work using end-to-end deep learning. It employs max-pooling operation as a symmetric function to obtain permutation-invariant features from 3D point clouds. Each point is processed independently by a shared multilayer per-ceptron (MLP), which does not account for local relation-ship of neighboring points. To remedy this, later works pro-posed other network structures or improved point feature aggregation approaches [13, 14, 22, 24, 27], while still em-ploying the same max pooling operation. However, as the point feature aggregation module becomes more complex, the computational cost of the whole network increases,
since it needs to go through several neighbor feature ag-gregation layers to learn a good feature representation.
One common theme with most of the existing ap-proaches is their use of traditional max-pooling. Fig. 1 il-lustrates the max-pooling operation, where red and purple boxes are the kept and discarded features, respectively. For each of the M features, the feature with the highest value among N points is kept. Thus, some points (all-purple rows) may have no contribution in this process, since none of their features are included in the final permutation-invariant fea-ture vector. Moreover, for most point cloud classification or segmentation networks, the main computational load is due to the neighbor feature aggregation or point feature learn-ing module. At the end, if only a small group of points contribute to the final prediction vector, and the rest of the point features are discarded, then this is also an inefficient use of the computational resources.
So, why discard if you can recycle? In order to recy-cle the precious set of discarded features, which are usually obtained by some complex feature aggregation and learn-ing modules or complex network structures, we propose a novel Recycling Max-Pooling (RMP) module. The pro-posed RMP module performs repeated max-pooling opera-tions among the points that were discarded by the previous max-pooling step to obtain the corresponding permutation-invariant features for training. The proposed RMP module uses the new set(s) of permutation-invariant features, ob-tained from the discarded points, to refine the original set of features obtained by the first max-pooling operation, and increase the performance of the original network.
Contributions. The main contributions of this work in-clude the following:
• We first show that many baseline approaches throw away a significant portion of points after using traditional max-pooling, and this affects the model performance.
• We also show that the features thrown away indeed pro-vide comparable performance, to the features that are kept by a baseline model, when used by themselves. Thus, it is wasteful to discard them for not only computational rea-sons but also for performance reasons.
• We propose a novel Recycling Max-Pooling Module (RPM) to recycle these still informative features for im-proved performance. To the best of our knowledge, this is the first work to explore the recycling of discarded point features, and investigate how to take advantage of a big-ger portion of the point cloud.
• Our method allows refining the original permutation-invariant features only during the training process to im-prove a baseline network’s performance.
• We provide extensive experimental results and compar-isons with multiple milestone and state-of-the-art (SOTA) methods on various datasets, including ModelNet40 [23],
ScanObjectNN [21] and S3DIS [1]. The results show that when the proposed RPM module is incorporated into these networks, it consistently improves the performance on point cloud classification and indoor point cloud se-mantic segmentation tasks. 2.