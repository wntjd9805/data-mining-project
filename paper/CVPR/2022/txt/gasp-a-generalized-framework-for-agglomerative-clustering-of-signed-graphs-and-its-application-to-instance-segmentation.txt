Abstract
We propose a theoretical framework that generalizes simple and fast algorithms for hierarchical agglomerative clustering to weighted graphs with both attractive and re-pulsive interactions between the nodes. This framework deﬁnes GASP, a Generalized Algorithm for Signed graph
Partitioning1, and allows us to explore many combinations of different linkage criteria and cannot-link constraints.
We prove the equivalence of existing clustering methods to some of those combinations and introduce new algo-rithms for combinations that have not been studied before.
We study both theoretical and empirical properties of these combinations and prove that some of these deﬁne an ultra-metric on the graph. We conduct a systematic compari-son of various instantiations of GASP on a large variety of both synthetic and existing signed clustering problems, in terms of accuracy but also efﬁciency and robustness to noise. Lastly, we show that some of the algorithms included in our framework, when combined with the predictions from a CNN model, result in a simple bottom-up instance seg-mentation pipeline. Going all the way from pixels to ﬁnal segments with a simple procedure, we achieve state-of-the-art accuracy on the CREMI 2016 EM segmentation bench-mark without requiring domain-speciﬁc superpixels. 1.

Introduction
In computer vision, the partitioning of weighted graphs has been successfully applied to tasks as diverse as image segmentation, object tracking and pose estimation. Most
∗Heidelberg Collaboratory for Image Processing (HCI/IWR), Heidel-berg, Germany. {name.surname}@iwr.uni-heidelberg.de
†EMBL, Heidelberg, Germany. {name.surname}@embl.de
‡Institute for Computer Science, University G¨ottingen, Germany. constantin.pape@informatik.uni-goettingen.de
§MRC Laboratory of Molecular Biology, Cambridge, UK. swolf@mrc-lmb.cam.ac.uk
¶derthorstenbeier@gmail.com (cid:107)Corresponding author 1Code available at: https://github.com/abailoni/GASP graph clustering methods work with positive edge weights only, which can be interpreted as similarities or distances between the nodes. These methods require users to specify the desired numbers of clusters (as in spectral clustering) or a termination criterion (e.g. in iterated normalized cuts) or even to add a seed for each object (e.g. seeded watershed or random walker).
Other graph clustering methods work with so-called signed graphs, which feature both positive and negative edge weights corresponding to attraction and repulsion be-tween nodes. The advantage of signed graphs over unsigned graphs is that balancing attraction and repulsion allows us to obtain a clustering without deﬁning additional parameters.
A canonical formulation of the signed graph partitioning problem is the multicut or correlation clustering problem
[15, 35]. This problem is NP-hard, though many approxi-mate solvers have been proposed [8,47,62,77] together with greedy agglomerative clustering algorithms [36, 39, 51, 75].
Agglomerative clustering algorithms for signed graphs have clear advantages: they are parameter-free and efﬁcient. De-spite the fact that a variety of these algorithms exist, no overarching study has so far been conducted to compare their robustness and efﬁciency or to provide guidelines for matching an algorithm to the partitioning problem at hand.
Our ﬁrst contribution is a simple theoretical framework that generalizes over agglomerative algorithms for signed graphs by linking them to hierarchical clustering (HC) on unsigned graphs (Section 3.2). This framework deﬁnes an underlying basic algorithm and allows us to explore its combinations with different linkage criteria and cannot-link constraints (see Fig. 1a, 1b, and Table 1). As second contri-bution, in Section 3.3, we formally prove that some of the combinations correspond to existing clustering algorithms, and introduce new algorithms for combinations which have not been explored before. By analyzing their theoretical properties, we also show that some of them deﬁne an ultra-metric on the graph (see Table 1).
Third, we evaluate the algorithms on a large variety of both existing and synthetically generated signed graph clus-tering problems (Section 4). Fourth and ﬁnally, we also test
Figure 1. (a) Some iterations of GASP on a graph with attractive (green) and repulsive (red) interactions. At each iteration, the yellow edge with highest weight is contracted (example with sum linkage criterion is shown). (b) Linkage criteria used in this paper demonstrated on two small clusters (see deﬁnitions in Table 1 below). (c) Application of GASP to instance segmentation: we show raw data from the
CREMI neuron-segmentation challenge and some predictions of our CNN model, where white pixels represent boundary evidence. (d)
Seemingly similar linkage criteria can result in very different clustering dynamics, as shown in this example: color coded sequence of merges from early (white) via late (brown) to never (black).
GASP
Sum
Linkage (cid:88) we e∈Eij
Absolute Maximum
Linkage we with e = arg max t∈Eij
|wt| (cid:88) we (cid:12) (cid:12)Eij e∈Eij
Average
Linkage (cid:30)
Single
Linkage max e∈Eij we (cid:12) (cid:12)
Complete
Linkage min e∈Eij we
Unsigned graphs
-HC-Single
Signed graphs
GAEC [39]
Mutex Watershed [75]
HC-Avg
HC-Avg
HC-Single
HC-Complete
HC-Single
HC-Complete
Signed graphs + cannot-link constraints
HCC-Sum
Mutex Watershed [75]
HCC-Avg
HCC-Single
HC-Complete
Table 1. Conceptual contribution: Properties of clustering algorithms included in the proposed GASP framework, given a linkage criterion, a type of graph (signed or unsigned) and the optional use of cannot-link constraints. New constrained hierarchical clustering algorithms (HCC) proposed in this paper are highlighted in yellow. For algorithms typeset in bold font we prove that they deﬁne an ultrametric on the graph (Eq. 3). For algorithms in the green box we show that they are weight-shift invariant (Prop. 3.2). Notation: Eij denotes the set of edges connecting two clusters Si, Sj ⊆ V . the algorithms on instance segmentation – a computer vi-sion task consisting of assigning each pixel of an image to an object instance – by partitioning graphs whose edge weights are estimated by a CNN (see Fig. 1c and Section 4.2). Our experiments show that the choice of linkage cri-terion markedly inﬂuences how clusters are grown by the agglomerative algorithms (Fig. 1d), making some linkage methods more suited for certain types of clustering prob-lems. We benchmark the clustering algorithms by focus-ing on their efﬁciency, robustness and tendency to over-or under-cluster. On instance segmentation, we show that the agglomerative algorithms outperform recently proposed spectral clustering methods, and that average-linkage based agglomerative algorithms achieve state of the art results on the CREMI 2016 challenge for neuron segmentation of 3D electron microscopy image volumes of brain tissue. 2.