Abstract
We present Gradient-SDF, a novel representation for 3D geometry that combines the advantages of implict and ex-plicit representations. By storing at every voxel both the signed distance field as well as its gradient vector field, we enhance the capability of implicit representations with approaches originally formulated for explicit surfaces. As concrete examples, we show that (1) the Gradient-SDF al-lows us to perform direct SDF tracking from depth images, using efficient storage schemes like hash maps, and that (2) the Gradient-SDF representation enables us to perform photometric bundle adjustment directly in a voxel represen-tation (without transforming into a point cloud or mesh), naturally a fully implicit optimization of geometry and cam-era poses and easy geometry upsampling. Experimental results confirm that this leads to significantly sharper re-constructions. Since the overall SDF voxel structure is still respected, the proposed Gradient-SDF is equally suited for (GPU) parallelization as related approaches. 1.

Introduction
The representation of 3D geometry in computer vision is a long-studied research topic. Mathematically, a surface is a 2D manifold embedded in R3. However, when it comes to implementing this on a computer, the question of dis-cretization comes up: how can we represent a surface with possibly infinite amount of detail and large extent with a fi-nite amount of memory and variables with finite precision?
Different answers to this question exist, and which one is most suitable highly depends on the concrete problem one wants to solve.
On the one hand, there are explicit representations, such as point clouds, surfel clouds or polygon meshes. They di-rectly sample points on the surface together with additional information like surface normals or point radius (for sur-∗ These authors contributed equally.
Figure 1. Our Gradient-SDF (middle) is a hybrid representation between standard signed distance fields stored in a voxel grid (left) and the explicit geometry representation using surfels (right): while we inherit the implicit nature of standard SDF voxels, we store gradients per voxel, which is similar to the surface normal property of a surfel. This combines the advantages of implicit rep-resentations, such as the possibility for direct SDF tracking, with those of explicit ones, for instance the possibility to perform bun-dle adjustment. fels), or connectivity of points (for meshes). This is useful for applications such as bundle adjustment, where surface points are reprojected into different camera frames.
On the other hand, we have implicit representations, that take a different approach: the surface is encoded implicitly by assigning each point p in the ambient space R3 a scalar value, such as a binary occupancy, or a (signed) distance to the nearest surface point. Signed distance fields (SDFs) have some useful properties, for instance, unlike explicit representations, they allow for changes of surface topology, and they can be updated very easily. There are different ways to store SDFs, the more traditional one being a voxel grid, where 3D space is partitioned into voxels, i.e., cubes of a given size. Each voxel contains the SDF value of its cen-ter point, sometimes truncated to a certain value. Such voxel grids can be stored either densely, or sparsely using e.g. oc-trees or hash maps. Extracting a surface from an implicit representation requires an additional step, marching cubes being a popular choice [17]. Only recently, implicit param-eterizations of implicit representations have become more popular. Neural networks regress the SDF value for a sur-face at any point, and the set of network weights uniquely characterizes the surface geometry. While these doubly im-plicit representations are very elegant as they theoretically provide an infinite level of detail, updating the geometry is less trivial than for voxel-based implicit representations, and surface extraction often requires voxelization.
In this work, we propose a hybrid between explicit and implicit representations called Gradient-SDF: we use a voxel-based implicit SDF representation, and augment it with the SDF gradient. To summarize, we propose the fol-lowing contributions:
• We propose Gradient-SDF as an implicit geometry representation with explicit features. It exploits first-order Taylor expansion to perform interpolation with-out accessing several voxels.
• We prove that our stored Gradient-SDF vectors are significantly more accurate than gradients obtained by standard finite difference schemes.
• We show theoretically and experimentally how
Gradient-SDF can be used in a depth-based tracking and mapping system, where efficient storage in a hash map is combined with direct SDF tracking.
• We provide a formulation for photometric bundle ad-justment (BA) on our implicit voxel-based Gradient-SDF representation and evaluate the benefits of this. 2.