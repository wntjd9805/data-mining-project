Abstract
Excellent performance has been achieved on instance segmentation but the quality on the boundary area remains unsatisfactory, which leads to a rising attention on bound-ary refinement. For practical use, an ideal post-processing refinement scheme are required to be accurate, generic and efficient. However, most of existing approaches pro-pose pixel-wise refinement, which either introduce a mas-sive computation cost or design specifically for different backbone models. Contour-based models are efficient and generic to be incorporated with any existing segmentation methods, but they often generate over-smoothed contour and tend to fail on corner areas.
In this paper, we pro-pose an efficient contour-based boundary refinement ap-proach, named SharpContour, to tackle the segmentation of boundary area. We design a novel contour evolution pro-cess together with an Instance-aware Point Classifier. Our method deforms the contour iteratively by updating offsets in a discrete manner. Differing from existing contour evo-lution methods, SharpContour estimates each offset more independently so that it predicts much sharper and accu-rate contours. Notably, our method is generic to seamlessly work with diverse existing models with a small computa-tional cost. Experiments show that SharpContour achieves competitive gains whilst preserving high efficiency. 1.

Introduction
Instance segmentation is a fundamental topic in com-puter vision which plays important role in scene under-standing [45], intelligent robots [36], clinical analysis [6, 46] and autonomous driving [10, 14]. The mainstream of instance segmentation approaches follow the design of detection-then-segmentation framework like Mask R-CNN [13] and achieve promising performance. However, high fidelity segmentation of fine details especially in the
†The two authors contribute equally to this paper.
‡Corresponding author: hanxiaoguang@cuhk.edu.cn
Figure 1. Instance segmentation with SharpContour. Top: A is the coarse mask predicted by Mask R-CNN and B is the refinement result of SharpContour. Bottom: C is the coarse contour generated by DANCE and D is the refinement result of SharpContour. In the corner areas, SharpContour yields significant improvements. boundary area remains extremely challenging.
To address this issue, the refinement of boundaries is raised as a new topic in recent years. A novel evalua-tion metric called Boundary AP [7] and a number of ap-proaches [8, 18, 33, 42] are proposed. Boundary AP [7] fo-cuses on the accuracy of the object boundary region thus can better reflect boundary refinement. As for the approaches, refinement can be generally recognized as a post-processing operation which is expected to meet three basic require-ments: accurate, efficient and generic. It is worth mention-ing that “generic” is also a significant factor. However, ex-isting top-performing refinement methods mainly focus on accuracy and lacks consideration of other two factors which are actually important in the practical application scenar-ios. For example, Boundary Patch Refinement method [33] proposed to additionally process patches along boundaries after the instance segmentation model, resulting in massive computational cost. RefineMask [42] designed a new archi-tecture built upon Mask-RCNN [13] to refine the quality of instance mask with fine-grained features. Though the com-putational cost is not extremely expensive, this method is
too specific to be applied to other types of instance segmen-tation models. It is intrinsically hard for the pixel-wise re-finement methods to achieve the three requirements at once, since the dense pixel maps usually bring excessive compu-tation cost.
Another group of trending segmentation approaches pro-posed contour-based segmentation methods [1, 3, 23, 27, 29, 38, 39] which directly process and generate sparse points along the boundaries. They are advantageous on efficiency and naturally generic to be appended after mask-based algo-rithms since it is straightforward to extract a contour from a mask. Thus, an interesting question can be raised up: “
Is it possible to use contour-based methods to address the boundary refinement problem?”
However, contour-based methods, like existing
DANCE [26] and DeepSnake [10], tend to produce over-smoothed contours especially on the sharp turner areas (as shown in Fig. 1) so that their performances on boundary areas is still lagging behind. We figure out the major reason which leads to the oversmoothing problem is that all the vertices on the contour are tied together by their feature learning strategies (e.g. circular convolutions [10]) and the smoothness regularization in their contour evo-lution process. As a result, a slight offset on one vertex will cause a wide chain reaction on all vertices of the contour. To address this, we elaborate a drastically different contour evolution process that estimates the deformation offsets independently for each vertex. Based on this, we propose an accurate, efficient and generic refinement approach, named SharpContour, for boundary area using contour-based representation.
Specifically, our SharpContour takes a coarse contour as input and deforms each vertex on the contour individually.
To avoid artefacts caused by the involved “independency”, we constrain each vertex to move along its normal direc-tion and conduct the deformation in an iterative procedure, making the deformation stably. For the sake of balancing between efficiency and accuracy for each vertex’s move-ment, instead of directly regressing the offset, we propose to determine the target position by performing classification on a few discrete points. Specifically, we first sample some points along the moving direction and classify them into
“inner/outer” status to obtain the flipping position which in-dicates the boundary. The classifier plays a pivotal role in this contour evolution process. Thus, we carefully design an Instance-aware Point Classifier (IPC), which can predict
“inner/outer” of a vertex with respect to different instance boundaries in the form of a probability score. There are two important factors for IPC to achieve high fidelity: 1) It is required to be instance-aware, which is essential to en-able generating different results for a pixel with respect to different instances. For this purpose, the parameters of the
IPC are predicted on-the-fly for each instance. 2) It should capture the information of the boundary details. Thus IPC takes the fine-grained feature, which is derived from the high-resolution feature map, as input to predict the vertex state.
With IPC, we can determine how to move each vertex during the deformation. The moving distance is further de-fined by the object size and IPC probability score. We it-eratively adjust the vertices of the predicted contour, until they match the object boundary. In this process, SharpCon-tour avoids the high-dependency over neighbouring vertices without using any smooth term, thus overcoming the over-smoothing issue. Notably, SharpContour only introduces a handful of parameters and involves a negligible amount of points in the calculation. Therefore, our approach is consid-erably efficient. Experiments manifest that SharpContour can work seamlessly with various segmentation models by introducing a small computational cost and producing high-quality object boundaries.
We validate the effectiveness of our SharpContour ap-proach quantitatively and qualitatively on various large scale segmentation benchmarks. On COCO datasets [22], we use both AP and the Boundary AP metrics. Coupled with DANCE [26], SharpContour brings significant im-provements of 1.5 AP and 3.2 Boundary AP. Coupled with the Mask R-CNN [13] and CondInst [34] as the refinement approach, our approach surpasses the baseline by a signifi-cant gain of 2.3, 2.2 AP and 3.4, 3.3 Boundary AP respec-tively. On Cityscapes datasets [9], SharpContour achieves 3.9 AP boost when combined with Mask R-CNN [13].
Compared with other boundary refinement models, Sharp-Contour consistently produces high-quality boundaries with a low computational cost. Taking the output of the state-of-the-art contour refinement method, RefineMask, as initial contour, SharpContour still gains 0.5 AP and 1.1 Bound-ary AP. The qualitative results further demonstrate the ef-fectiveness of our approach. 2.