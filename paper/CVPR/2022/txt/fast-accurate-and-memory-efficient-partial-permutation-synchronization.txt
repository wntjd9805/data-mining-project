Abstract
Previous partial permutation synchronization (PPS) algo-rithms, which are commonly used for multi-object matching, often involve computation-intensive and memory-demanding matrix operations. These operations become intractable for large scale structure-from-motion datasets. For pure permuta-tion synchronization, the recent Cycle-Edge Message Passing (CEMP) framework suggests a memory-efficient and fast solu-tion. Here we overcome the restriction of CEMP to compact groups and propose an improved algorithm, CEMP-Partial, for estimating the corruption levels of the observed partial permu-tations. It allows us to subsequently implement a nonconvex weighted projected power method without the need of spectral initialization. The resulting new PPS algorithm, MatchFAME (Fast, Accurate and Memory-Efficient Matching), only involves sparse matrix operations, and thus enjoys lower time and space complexities in comparison to previous PPS algorithms. We prove that under adversarial corruption, though without addi-tive noise and with certain assumptions, CEMP-Partial is able to exactly classify corrupted and clean partial permutations. We demonstrate the state-of-the-art accuracy, speed and memory efficiency of our method on both synthetic and real datasets. 1.

Introduction
The problem of partial permutation synchronization (PPS) naturally arises from the task of multi-object matching (MOM).
MOM assumes multiple objects (e.g. images), where each sin-gle object contains some keypoints associated with underlying distinct labels. The set of all distinct labels is called the universe.
Ideally, any two keypoints, from different objects, that share a common label should be matched. Given partially observed and corrupted pairwise keypoint matches, MOM asks to recover the ground truth labels of each keypoint, or equivalently, the keypoint-to-universe matches. In structure from motion (SfM), where the objects are images, MOM is often referred to as multi-image matching. Here a keypoint is characterized by a specific location in the image and its associated label is the index of its corresponding 3D point, which can be viewed at this location of the image. In this case, the initial pairwise keypoint matches are typically obtained by SIFT [12] and the MOM problem asks to identify the corresponding 3D point index for each keypoint in each image, up to an arbitrary permutation of the indices.
The mathematical formulation of PPS represents the images in the latter problem as nodes of an unweighted and undirected graph, which is commonly referred to as the viewing graph, and further represents both “relative” keypoint-to-keypoint matches among pairs of images and the “absolute” keypoint-to-universe matches as partial permutation matrices. We recall that a partial permutation matrix is binary with at most one nonzero element at each row and column. PPS thus asks to recover the “absolute” partial permutations (which are associated with nodes of the graph) given possibly corrupted and noisy measurements of the
“relative” partial permutations (which are associated with edges of the graph). We remark that when restricting the partial per-mutation matrices to be full permutations (bi-stochastic, binary and square), PPS reduces to permutation synchronization (PS), which is a special case of the group synchronization problem.
Probably, the most well-known group synchronization problem is rotation averaging [4,8,19] where the group is SO(3). Various approaches from rotation averaging, such as the spectral method
[22] and SDP relaxation [24], can be similarly employed to
PS [9, 16]. However, when considering PS for image matching, all images must share the same set of keypoints. This is restric-tive, since images taken from different viewing directions may share very few (or even no) keypoints. Therefore, PPS is more realistic for image matching, and in particular, SfM, than PS.
The PPS problem is challenging for three different reasons.
First of all, the corruption of pairwise measurements in real data can be highly nonuniform, which violates the common assump-tions of uniform corruption in [6, 16]. Indeed, as is pointed out in [20], the corruption in keypoint matches in real data can concentrate at local regions of the viewing graph. Second, the number of rows or columns of each partial permutation can be in the order of hundreds or even higher, which is much larger than dimension 3 in rotation averaging. This makes PPS a computationally-intensive task in comparison to rotation aver-aging. Finally, the relative partial permutations in PPS are no longer square matrices, as in PS, and can have very different
sizes and sparsity levels. Consequently, they may introduce addi-tional bias and numerical instability to common PPS algorithms.
This work addresses the above challenges and develops a fast, accurate and memory efficient PPS algorithm that works well for nontrivial corruption models and large scale real data. 1.1.