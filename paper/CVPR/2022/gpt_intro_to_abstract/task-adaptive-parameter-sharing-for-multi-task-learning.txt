Real-world applications of deep learning often involve performing multiple tasks simultaneously, leading to the need for Multi-Task Learning (MTL). One common approach is to train separate models for each task, starting from a shared pre-trained model. However, this approach results in increased training, inference, and memory costs as the number of tasks grows. Additionally, these models are learned independently, missing the opportunity for task-related sharing.In this paper, we propose a method called Task Adaptive Parameter Sharing (TAPS) to address these challenges. Instead of modifying the network architecture or adding a fixed set of task-specific parameters, TAPS adaptively selects a minimal subset of existing layers and retrains them. This layer selection process is formulated as a continuous optimization problem, allowing for joint optimization using stochastic gradient descent.The key advantages of TAPS are its applicability to any architecture without the need for task-specific branches, its ability to maintain accuracy compared to full fine-tuning while introducing fewer task-specific parameters, and its interpretable layer selection process that does not require learning a policy network. Furthermore, TAPS enables efficient incremental and joint multi-task learning without competition or forgetting.Experimental evaluations on standard benchmarks demonstrate that TAPS outperforms alternative methods and produces results aligned with standard fine-tuning practices in the community. The contributions of this work include the proposal of TAPS, a differentiable approach for determining which layers to tune when adapting a pre-trained network to a target task, the automatic discovery of effective architecture-specific sharing patterns, and the enablement of efficient incremental and joint multi-task learning.Overall, TAPS provides a flexible and efficient solution for multi-task learning that can be applied to various architectures, achieving performance on par with existing methods while introducing fewer task-specific parameters.