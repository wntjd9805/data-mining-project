Neural Architecture Search (NAS) methods have emerged as a promising solution to automate the design of deep learning models, reducing the need for manual effort. These methods search for optimal architectures that outperform human-designed networks in various tasks. However, many NAS approaches are computationally expensive, requiring training over numerous candidate architectures. Moreover, in scenarios where networks for multiple tasks are needed, repeating the NAS process for each task discards valuable knowledge accumulated during the search. Recent attempts have focused on transferable NAS, mining task correlations to improve efficiency. However, these approaches often have limitations or assumptions that restrict their applicability.To address these challenges, we propose Arch-Graph, a novel NAS method that treats architecture search as a ranking problem. Arch-Graph constructs a pairwise relation graph based on a predictor that captures the superiority of one architecture over another. By formulating NAS as a graph ordering problem, Arch-Graph benefits from added constraints that provide extra learning signals. We introduce task embeddings as a means of transferring knowledge between tasks during predictor training. Unlike previous works, our task embedding method is general and applicable to various vision domains.The construction of the relation graph is followed by solving the Maximal Weighted Acyclic Subgraph (MWAS) problem with Trust Score, ensuring the graph adheres to the properties of a partial order. We propose an approximation solution to the MWAS problem using the max-MAS algorithm. Our experiments on TransNAS-Bench-101 demonstrate the effectiveness of Arch-Graph, with average rankings of 5.24 (top 0.16%) and 12.2 (top 0.29%) on macro and micro search spaces, respectively. Remarkably, Arch-Graph achieves these results by sampling only 50 architectures, saving at least 37.5% of training samples compared to other methods.In summary, our contributions include the proposal of Arch-Graph as a task transferable NAS method, treating NAS as a graph ordering problem and utilizing a pairwise relation predictor for efficiency. We generalize task embeddings and introduce the MWAS problem for constructing the relation graph. Extensive experiments validate the superior performance of Arch-Graph compared to existing transferable NAS methods.