Multi-view stereo (MVS) is a challenging task in geometric computer vision, involving reconstructing the dense geometry of a scene from a collection of images with known camera parameters. Traditional MVS methods have struggled with problems such as occlusion, illumination changes, untextured areas, and non-Lambertian surfaces. The success of Convolutional Neural Networks (CNNs) in computer vision has led to the hope that data-driven models can address these challenges. Many learning-based methods have shown promise in MVS benchmarks, outperforming traditional methods. However, most of these methods only focus on benchmark performance and overlook scalability, memory, and run-time considerations. Current learning-based MVS methods construct a 3D cost volume, regularize it with a 3D CNN, and regress the depth, but this approach is computationally expensive. Some methods down-sample the input during feature extraction to reduce time and memory consumption, but this compromises accuracy. Methods that cannot handle realistic image sizes are limited by memory constraints and cannot fully utilize the resolution. Low memory and time consumption are crucial for processing on devices like phones and mixed reality headsets. To address these limitations, researchers have proposed approaches such as R-MVSNet, which processes the cost volume sequentially with decoupled memory requirements and a runtime penalty. This work introduces PatchmatchNet, a cascade formulation of learning-based Patchmatch, to decrease memory consumption and run-time for high-resolution MVS. PatchmatchNet incorporates the efficiency of classical Patchmatch while leveraging deep learning for improved performance. The contributions of this work include embedding the Patchmatch idea into an end-to-end trainable deep learning framework, augmenting traditional Patchmatch steps with learnable adaptive modules, estimating visibility information during cost aggregation, proposing a robust training strategy for improved robustness and generalization, and demonstrating competitive performance on various MVS datasets while reducing memory consumption and run-time compared to most learning-based methods.