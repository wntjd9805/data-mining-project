Abstract 3D two
Aligning partially-overlapped line reconstructions in Euclidean space is challenging, as we need to simultaneously solve correspondences and relative pose between line reconstructions. This paper proposes a neural network based method and it has three modules connected in sequence: (i) a Multilayer Perceptron (MLP) based network takes Pl¨ucker representations of lines as inputs, to extract discriminative line-wise features and matchabilities (how likely each line is going to have a match), (ii) an Optimal Transport (OT) layer takes two-view line-wise features and matchabilities as inputs to estimate a 2D joint probability matrix, with each item describes the matchness of a line pair, and (iii) line pairs with Top-K matching probabilities are fed to a 2-line minimal solver in a RANSAC framework to estimate a six Degree-of-Freedom (6-DoF) rigid transformation. Experiments on both indoor and outdoor datasets show that registration (rotation and translation) precision of our method outperforms baselines signiﬁcantly. 1.

Introduction laser scanning [31].
Lines contain strong structural geometry information of environments (even for texture-less indoor scenes), and are widely used in many applications, e.g., SLAM [47, 64], visual servoing [3, 30], event camera [50, 38, 39], image restoration [43, 36, 37], place recognition [48, 27] and camera pose estimation [28, 24]. 3D lines can be obtained from structure from motion [49], SLAM [61] or
Compared with 3D points, scene represented by lines is more complete and requires signiﬁcantly less amount of storage [22, 18, 59]. Given 3D line reconstructions, a fundamental problem is how to register them (Figure 1). This technique can be used in building a complete 3D map, robot localization, SLAM, etc.
This paper studies the problem of aligning two partially-overlapped 3D line reconstructions in Euclidean space. This is not doable for traditional methods as it’s very hard to ﬁnd line matches by only checking 3D line coordinates, often
Figure 1: Our problem is to align two partially-overlapped line reconstructions or, equivalently, to estimate the relative pose between two line reconstructions. Left: Red and Black lines (depicting street-view buildings and landmarks) are in two different coordinate systems from the Semantic3D dataset [14].
Right: our method is able to successfully align the two line reconstructions in a one-shot manner. one needs to manually set line matches [6, 5] or assumes lines are mostly located on planes [22] and windows [9].
With deep neural networks, we give a learning-based solution, dubbed as Pl¨uckerNet.
It is non-trivial to learn from lines, as we need to carefully handle line parameterization and geometry. For local structure deﬁned by geometric nearest example, neighbor is a core-component in point-based networks (e.g., PointNet++ [42]). However, for line-based network, deﬁning geometric nearest neighbor is non-trivial as there is no universally agreed error metric for comparing lines [6].
We parameterize a 3D line using a deterministic 6-dim
Pl¨ucker [41] representation with a 3-dim direction vector lying on a 3D unit hemisphere and a 3-dim moment vector.
To capture local line structure, for each line, we ﬁrst extract local features in the subspace of direction and moment, and then combine them to obtain a global high-dim line feature.
To make line-wise features discriminative for matching, we use a graph neural network with attention mechanism [44, 45], as it can integrate contextual cues considering high-dim feature embedding relationships.
As we are addressing a partial-to-partial matching lines do not necessarily have to match. We the likelihood that a given line has a match problem, model 1842
and is not an outlier by regressing line-wise prior matchability.
Combined with line-wise features from two line reconstructions, we are able to estimate line correspondences in a global feature matching module. This module computes a weighting (joint probability) matrix using optimal transport, where each element describes the matchability of a particular source line with a particular target line. Sorting the line matches in decreasing order by weight produces a prioritized match list, which can be used to recover the 6-DoF relative pose between source and target line reconstructions.
With line matches are found, we develop a 2-line minimal pose solver ([5]) to solve for the relative pose in
Euclidean space. We further show how to integrate the solver within a RANSAC framework using a score function to disambiguate inliers from outliers.
Our Pl¨uckerNet
The overall framework is illustrated in Figure 2. Our contributions are: is trained end-to-end. 1. A simple, straightforward and effective learning-based method to estimate a rigid transformation aligning two line reconstructions in Euclidean space; 2. A deep neural network extracting features from lines, while respecting the line geometry; 3. An global original network based on the optimal transport theory to ﬁnd line correspondences; feature matching 4. A 2-line minimal solver with RANSAC to register 3D line reconstructions in Euclidean space; 5. We propose two 3D line registration baselines (iterative closet three benchmark datasets build upon [63, 14, 1] and show the state-of-the-art performance of our method. lines and direct regression), 2.