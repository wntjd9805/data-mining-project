Abstract
This paper introduces a method to encode the blur op-erators of an arbitrary dataset of sharp-blur image pairs into a blur kernel space. Assuming the encoded kernel space is close enough to in-the-wild blur operators, we pro-pose an alternating optimization algorithm for blind im-age deblurring.
It approximates an unseen blur opera-tor by a kernel in the encoded space and searches for the corresponding sharp image. Unlike recent deep-learning-based methods, our system can handle unseen blur ker-nel, while avoiding using complicated handcrafted priors on the blur operator often found in classical methods. Due to the method’s design, the encoded kernel space is fully differentiable, thus can be easily adopted in deep neu-ral network models. Moreover, our method can be used for blur synthesis by transferring existing blur operators from a given dataset into a new domain. Finally, we pro-vide experimental results to conﬁrm the effectiveness of the proposed method. The code is available at https:
//github.com/VinAIResearch/blur-kernel-space-exploring. 1.

Introduction
Motion blur occurs due to camera shake or rapid move-ment of objects in a scene.
Image deblurring is the task of removing the blur artifacts to improve the quality of the captured image. Image deblurring is an important task with many applications, especially during the current age of mo-bile devices and handheld cameras. Image deblurring, how-ever, is still an unsolved problem, despite much research effort over the past decades.
Mathematically, the task of image deblurring is to re-cover the sharp image x given a blurry image y. One can assume the below mathematical model that relates x and y: y = ˆF(x, k) + ⌘
ˆF(x, k), (1)
≈ where ˆF(·, k) is the blur operator with the blur kernel k, and ⌘ is noise. In the simplest form, ˆF(·, k) is assumed to
Figure 1. The space of blur kernels is the missing element for successful blur removal and synthesis. Previous image debluring methods either overlooked the importance of this kernel space or made inadequate assumption about it. In this paper, we propose to learn this blur kernel space from a dataset of sharp-blurry image pairs (orange arrows) and leverage this encoded space for image deblurring (blue arrows). be a convolution function with k being a convolution kernel and ⌘ being white Gaussian noise. Given a blurry image y, the deblurring task is to recover the sharp image x and optionally the blur operator ˆF(·, k).
A popular approach to recover the sharp image is to use the Maximum A Posterior (MAP) estimate. That is to ﬁnd x and k to maximize the posterior propbability P(x, k|y) assuming ˆF is known. This is equivalent to optimizing: x, k = argmax
P(y|x, k)P(x)P(k). (2) x,k
However, this is an ill-posed problem and there are in-ﬁnitely many pairs of (k, x) that lead to the same probabil-ity P(y|x, k), so the key aspect of the above MAP approach is to deﬁne proper models for the prior distributions P(x) and P(k). In fact, many deblurring methods focus on either designing handcrafted priors for x and k [2, 12, 20, 27] or learning the deep image prior [29, 37]. However, all of these works assume the blur operator is a convolutional operator, 11956
and this assumption does not hold in practice. These MAP-based methods cannot handle complex in-the-wild blur op-erators and usually produce undesirable artifacts when test-ing on real-world blurry images.
An alternative approach is to directly learn a function that maps from a blurry image to the corresponding non-blurry image. This function can be a deep convolutional network and the parameters of the network can be learned using paired training data of blurry and non-blurry im-ages [14, 15, 25, 36]. Unlike the MAP-based approach, this approach learns the inverse function of the blur oper-ator directly without explicitly reasoning about the blur op-erator and the distribution of the blur kernel. Given the lack of an explicit representation for the space of the blur ker-nels, this approach does not generalize well beyond the set of individual blur kernels seen during training. This ap-proach [14, 15, 25, 36] produces poor results when testing on blur operators that are not present in the training set. In our experiments, these deep-learning models degenerate to an identity map when testing on an out-of-domain blur oper-ator; the recovered image is nearly identical to the input im-age. This is a known issue, and it is referred to as “the triv-ial solution” by traditional deblurring methods. The MAP-based methods tackle this problem by putting prior distri-butions on the sharp image and the blur kernel. However, those priors cannot be readily applied to the existing deep-learning models due to the lack of an explicit representation for the blur kernels.
In this paper, we propose to address the limitations of both aforementioned approaches as follows. First, we de-vise a deep-learning formulation with an explicit represen-tation for the blur kernel and the blur operator. Second, we use a data-driven approach to learn the family of blur op-erators and the latent manifold of the blur kernels, instead of assuming that the blur operator is a convolutional oper-ator as used in existing MAP-based methods. Speciﬁcally, we simultaneously learn a blur operator family F and a blur kernel extractor G such that: y = F(x, k) and k = G(x, y). (3)
Note in this paper, F is referred to as the blur operator fam-ily. For a speciﬁc blur kernel k, F(·, k) is a speciﬁc blur operator from the family of blur operators. We call k the blur kernel of the blur operator F(·, k). When the func-tional form of F is ﬁxed, we will refer to a blur operator
F(·, k) by its blur kernel k if there is no confusion.
Once the blur operator family F has been learned, we can use it to deblur an input image y by ﬁnding x and k to satisfy the above equations using alternating optimization.
Moreover, we can incorporate additional constraints on the solution space of x to generate more realistic results. For example, we can use a deep generative model to learn the manifold of natural images and constraint the solution space to this manifold. The conceptual idea is illustrated in Fig. 1.
Our method can also be used for blur synthesis. This can be done by transferring the blur kernel of a sharp-blurry im-age pair to another image. Blur synthesis is useful in many ways. For example, we can transfer the real-world motion blur of an existing dataset [8] to another domain where it might be difﬁcult to collect paired data. Blur synthesis can also be used for training data augmentation, improving the robustness of a downstream task such as face recognition or eye gaze estimation.
In short, the contributions of our paper are: (1) we pro-pose a novel method to encode the blur kernel space for a dataset of blur-sharp image pairs, which can be used to deblur images that contain unseen blur operators; (2) we propose a novel blur synthesis method and demonstrate its utilities; and (3) we obtain state-of-the-art deblurring results on several datasets. 2.